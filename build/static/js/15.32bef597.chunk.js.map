{"version":3,"sources":["routes/Admin/Clients/allClients/index.js","appRedux/actions/Clients.js","routes/Admin/Clients/newClient/index.js","routes/Admin/Clients/singleClient/index.js","routes/Admin/Clients/index.js"],"names":["columns","title","dataIndex","key","width","render","text","react_default","a","createElement","className","record","icon","type","showHeader","scroll","y","pagination","position","Clients","state","size","rowSelection","componentDidMount","_this","props","getClients","handleSizeChange","e","setState","target","value","handleShowForm","visible","handleOk","confirmLoading","setTimeout","handleCancel","console","log","CreateNew","Link","to","es_button","onClick","IntlMessages","id","_this$props","this","loading","allClients","card","extra","table","Object","assign","rowKey","dataSource","Component","connect","_ref","auth","clientData","commonData","token","listSuccess","dispatch","FETCH_START","axios","get","then","data","FETCH_SUCCESS","LIST_CLIENT_SUCCESS","ALL_CLIENTS_DATA","payload","error","FETCH_ERROR","catch","message","FormItem","Form","Item","NewClient","confirmDirty","autoCompleteResult","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","addClient","handleConfirmBlur","openNotification","notification","description","goBack","history","GoBack","getFieldDecorator","createSuccess","addClientForm","Redirect","formItemLayout","labelCol","xs","span","sm","wrapperCol","spin","spinning","es_form","layout","onSubmit","label","tooltip","rules","required","whitespace","input","style","offset","htmlType","RegistrationForm","create","_ref2","client_name","admin_name","admin_email","admin_phone","post","_ref3","CREATE_CLIENT_SUCCESS","Option","Select","AutoCompleteOption","AutoComplete","residences","children","SingleClient","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","concat","tailFormItemLayout","prefixSelector","initialValue","es_select","websiteOptions","website","singleClient_FormItem","validator","onBlur","cascader","options","addonBefore","auto_complete","onChange","placeholder","row","col","valuePropName","es_checkbox","match","Switch","Route","exact","path","url","component","AllClients"],"mappings":"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","file":"static/js/15.32bef597.chunk.js","sourcesContent":["/*jshint esversion: 6 */\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n// eslint-disable-next-line\nimport {Divider, Button, Card, Icon, Table} from \"antd\";\n\n// import NewClient from \"../newClient\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\n\nimport {getClients} from \"../../../../appRedux/actions/Clients\";\n\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  key: 'name',\n  width: 200,\n  render: text => <span className=\"gx-link\">{text}</span>,\n}, {\n  title: 'Tin Number',\n  dataIndex: 'tin',\n  key: 'tin',\n  width: 250,\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  key: 'address',\n}, {\n  title: 'Action',\n  key: 'action',\n  width: 200,\n  render: (text, record) => (\n    <span>\n      <span className=\"gx-link ant-dropdown-link\">\n        Actions <Icon type=\"down\"/>\n      </span>\n    </span>\n  ),\n}];\n\n// const expandedRowRender = record => <p>{record.description}</p>;\nconst showHeader = true;\nconst scroll = {y: 440};\nconst pagination = {position: 'bottom'};\n\nclass Clients extends Component {\n  state = {\n    pagination,\n    size: 'middle',\n    showHeader,\n    rowSelection: {},\n    scroll,\n  };\n\n  componentDidMount = () =>\n  {\n    this.props.getClients();\n  }\n\n  handleSizeChange = (e) => {\n    this.setState({size: e.target.value});\n  };\n\n  handleShowForm = (e) => {\n    this.setState({\n      visible: true,\n    });\n  };\n  handleOk = () => {\n    this.setState({\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 2000);\n  };\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  };\n\n  CreateNew = (\n    <Link to=\"/clients/new\">\n      <Button type=\"primary\" size=\"default\" icon=\"add\" onClick={this.handleShowForm}>\n        <IntlMessages id=\"sidebar.clients.new\"/>\n      </Button>\n    </Link>\n  );\n\n  render() {\n    const {loading, allClients} = this.props\n    return (\n      <div>\n        <Card className=\"gx-card\" title=\"Clients\" extra={this.CreateNew}>\n          <Table className=\"gx-table-responsive\" {...this.state} loading={loading} rowKey=\"id\" columns={columns} dataSource={allClients}/>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({auth, clientData, commonData}) => {\n  const {token} = auth;\n  const {listSuccess, allClients} = clientData;\n  const {loading} = commonData;\n  return {token, listSuccess, loading, allClients};\n};\n\nexport default connect(mapStateToProps, {getClients})(Clients);","/*jshint esversion: 6 */\n\n// eslint-disable-next-line \nimport {\n  FETCH_ERROR,\n  FETCH_START,\n  FETCH_SUCCESS,\n  INIT_URL,\n  CREATE_CLIENT_SUCCESS,\n  LIST_CLIENT_SUCCESS,\n  ALL_CLIENTS_DATA\n} from \"../../constants/ActionTypes\";\nimport axios from 'util/Api';\n\nexport const setInitUrl = (url) => {\n  return {\n    type: INIT_URL,\n    payload: url\n  };\n};\n\nexport const getClients = () => {\n  return (dispatch) => {\n    dispatch({type: FETCH_START});\n    axios.get('admin/clients', \n    ).then(({data}) => {\n      if (data.data) {\n        // console.log(data)\n        dispatch({type: FETCH_SUCCESS});\n        dispatch({type: LIST_CLIENT_SUCCESS});\n        dispatch({type: ALL_CLIENTS_DATA, payload: data.data});\n      } else {\n        console.log(\"payload: data.error\", data.error);\n        dispatch({type: FETCH_ERROR, payload: \"Network Error\"});\n      }\n    }).catch(function (error) {\n      dispatch({type: FETCH_ERROR, payload: error.message});\n      console.log(\"Error****:\", error.message);\n    });\n  }\n};\n\nexport const addClientForm = () => {\n  return (dispatch) => {\n    dispatch({type: CREATE_CLIENT_SUCCESS, payload: false});\n  };\n};\n\nexport const addClient = ({client_name, admin_name, admin_email, admin_phone}) => {\n  return (dispatch) => {\n    dispatch({type: FETCH_START});\n    axios.post('admin/clients', {\n        client_name, admin_name, admin_email, admin_phone\n      }\n    ).then(({data}) => {\n      if (data) {\n        dispatch({type: FETCH_SUCCESS});\n        dispatch({type: CREATE_CLIENT_SUCCESS, payload: true});\n      } else {\n        console.log(\"payload: data.error\", data.error);\n        dispatch({type: FETCH_ERROR, payload: \"Network Error\"});\n      }\n    }).catch(function (error) {\n      dispatch({type: FETCH_ERROR, payload: error.message});\n      console.log(\"Error****:\", error.message);\n    });\n  };\n};\n\n// export const userSignIn = ({email, password}) => {\n//   return (dispatch) => {\n//     dispatch({type: FETCH_START});\n//     axios.post('auth/login', {\n//         email: email,\n//         password: password,\n//       }\n//     ).then(({data}) => {\n//       console.log(\"userSignIn: \", data);\n//       if (data.result) {\n//         localStorage.setItem(\"token\", JSON.stringify(data.token.access_token));\n//         axios.defaults.headers.common['access-token'] = \"Bearer \" + data.token.access_token;\n//         dispatch({type: FETCH_SUCCESS});\n//         dispatch({type: USER_TOKEN_SET, payload: data.token.access_token});\n//       } else {\n//         dispatch({type: FETCH_ERROR, payload: data.error});\n//       }\n//     }).catch(function (error) {\n//       dispatch({type: FETCH_ERROR, payload: error.message});\n//       console.log(\"Error****:\", error.message);\n//     });\n//   }\n// };\n\n// export const getUser = () => {\n//   return (dispatch) => {\n//     dispatch({type: FETCH_START});\n//     axios.post('auth/me',\n//     ).then(({data}) => {\n//       console.log(\"userSignIn: \", data);\n//       if (data) {\n//         dispatch({type: FETCH_SUCCESS});\n//         dispatch({type: USER_DATA, payload: data});\n//       } else {\n//         dispatch({type: FETCH_ERROR, payload: data.error});\n//       }\n//     }).catch(function (error) {\n//       dispatch({type: FETCH_ERROR, payload: error.message});\n//       console.log(\"Error****:\", error.message);\n//     });\n//   }\n// };","/*jshint esversion: 6 */\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\n\nimport {Redirect} from \"react-router-dom\";\nimport {Button, Card, Form, Icon, Input, Tooltip, Spin, notification} from \"antd\";\n\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport {addClient, addClientForm} from \"../../../../appRedux/actions/Clients\";\n\nconst FormItem = Form.Item;\n\nclass NewClient extends Component {\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) { \n          this.props.addClient(values);\n        }\n      });\n    }\n    handleConfirmBlur = (e) => {\n      const value = e.target.value;\n      this.setState({confirmDirty: this.state.confirmDirty || !!value});\n    }\n\n    openNotification = (type) => {\n      notification[type]({\n        message: 'Client Created',\n        description: 'Client and User account created successfully.'\n      });\n    };\n\n    goBack = () => {\n      this.props.history.goBack()\n    };\n\n    GoBack = (\n      <Button type=\"primary\" size=\"default\" icon=\"add\" onClick={this.goBack}>\n          <IntlMessages id=\"sidebar.cancel\"/>\n        </Button>\n    );\n  \n    render() {\n      const {getFieldDecorator} = this.props.form;\n      const {createSuccess, loading} = this.props;\n      if (createSuccess) {\n          this.openNotification('success');\n          this.props.addClientForm();\n          return ( <Redirect to={'/clients'}/> );\n      }\n      const formItemLayout = {\n        labelCol: {\n          xs: {span: 24},\n          sm: {span: 5},\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 14},\n        },\n      };\n      const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 20,\n          },\n          sm: {\n            span:24,\n            offset: 20,\n          },\n        },\n      };\n      \n      return (\n        <Spin spinning={loading}>\n          <Card className=\"gx-card\" title=\"New Client\" extra={this.GoBack}>\n            <Form layout=\"horizontal\" onSubmit={this.handleSubmit}>\n              <div>\n                <FormItem\n                  {...formItemLayout}\n                  label={(\n                    <span>\n                    Client Name&nbsp;\n                      <Tooltip title=\"What do you refer to this client as?\">\n                      <Icon type=\"question-circle-o\"/>\n                    </Tooltip>\n                  </span>\n                  )}\n                >\n                  {getFieldDecorator('client_name', {\n                    rules: [{required: true, message: 'Please input the Client name!', whitespace: true}],\n                  })(\n                    <Input/>\n                  )}\n                </FormItem>\n                <FormItem\n                  {...formItemLayout}\n                  label={(\n                    <span>\n                      User Name&nbsp;\n                      <Tooltip title=\"What is the name of the primary user?\">\n                      <Icon type=\"question-circle-o\"/>\n                    </Tooltip>\n                  </span>\n                  )}\n                >\n                  {getFieldDecorator('admin_name', {\n                    rules: [{required: true, message: 'You must enter a User!', whitespace: true}],\n                  })(\n                    <Input/>\n                  )}\n                </FormItem>\n                <FormItem\n                  {...formItemLayout}\n                  label=\"User E-mail\"\n                >\n                  {getFieldDecorator('admin_email', {\n                    rules: [{\n                      type: 'email', message: 'The input is not valid E-mail!',\n                    }, {\n                      required: true, message: 'Please input user E-mail!',\n                    }],\n                  })(\n                    <Input id=\"email1\"/>\n                  )}\n                </FormItem>\n                <FormItem\n                  {...formItemLayout}\n                  label=\"Phone Number\"\n                >\n                  {getFieldDecorator('admin_phone', {\n                    rules: [{required: true, message: 'Please input user phone number!'}],\n                  })(\n                    <Input style={{width: '100%'}}/>\n                  )}\n                </FormItem>\n              </div>\n              <br />\n              <FormItem {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n              </FormItem>\n            </Form>\n          </Card>\n        </Spin>\n      );\n    }\n  \n  }\n  \nconst RegistrationForm = Form.create()(NewClient);\n// export default RegistrationForm;\n\nconst mapStateToProps = ({auth, clientData, commonData}) => {\n  const {token} = auth;\n  const {createSuccess} = clientData;\n  const {loading} = commonData;\n  return {token, createSuccess, loading};\n};\n\nexport default connect(mapStateToProps, {addClient, addClientForm})(RegistrationForm);\n","/*jshint esversion: 6 */\nimport React, {Component} from \"react\";\nimport {AutoComplete, Button, Card, Cascader, Checkbox, Col, Form, Icon, Input, Row, Select, Tooltip} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst residences = [{\n    value: 'zhejiang',\n    label: 'Zhejiang',\n    children: [{\n      value: 'hangzhou',\n      label: 'Hangzhou',\n      children: [{\n        value: 'xihu',\n        label: 'West Lake',\n      }],\n    }],\n  }, {\n    value: 'jiangsu',\n    label: 'Jiangsu',\n    children: [{\n      value: 'nanjing',\n      label: 'Nanjing',\n      children: [{\n        value: 'zhonghuamen',\n        label: 'Zhong Hua Men',\n      }],\n    }],\n}];\n\n\nclass SingleClient extends Component {\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    }\n    handleConfirmBlur = (e) => {\n      const value = e.target.value;\n      this.setState({confirmDirty: this.state.confirmDirty || !!value});\n    }\n    compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    }\n    validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], {force: true});\n      }\n      callback();\n    }\n    handleWebsiteChange = (value) => {\n      let autoCompleteResult;\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n      }\n      this.setState({autoCompleteResult});\n    }\n  \n    render() {\n      const {getFieldDecorator} = this.props.form;\n      const {autoCompleteResult} = this.state;\n  \n      const formItemLayout = {\n        labelCol: {\n          xs: {span: 24},\n          sm: {span: 8},\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 16},\n        },\n      };\n      const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      };\n      const prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '86',\n      })(\n        <Select style={{width: 70}}>\n          <Option value=\"86\">+86</Option>\n          <Option value=\"87\">+87</Option>\n        </Select>\n      );\n  \n      const websiteOptions = autoCompleteResult.map(website => (\n        <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n      ));\n  \n      return (\n        <Card className=\"gx-card\" title=\"Create New Client\">\n          <Form onSubmit={this.handleSubmit}>\n            <FormItem\n              {...formItemLayout}\n              label=\"E-mail\"\n            >\n              {getFieldDecorator('email', {\n                rules: [{\n                  type: 'email', message: 'The input is not valid E-mail!',\n                }, {\n                  required: true, message: 'Please input your E-mail!',\n                }],\n              })(\n                <Input id=\"email1\"/>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label=\"Password\"\n            >\n              {getFieldDecorator('password', {\n                rules: [{\n                  required: true, message: 'Please input your password!',\n                }, {\n                  validator: this.validateToNextPassword,\n                }],\n              })(\n                <Input type=\"password\"/>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label=\"Confirm Password\"\n            >\n              {getFieldDecorator('confirm', {\n                rules: [{\n                  required: true, message: 'Please confirm your password!',\n                }, {\n                  validator: this.compareToFirstPassword,\n                }],\n              })(\n                <Input type=\"password\" onBlur={this.handleConfirmBlur}/>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label={(\n                <span>\n                Nickname&nbsp;\n                  <Tooltip title=\"What do you want others to call you?\">\n                  <Icon type=\"question-circle-o\"/>\n                </Tooltip>\n              </span>\n              )}\n            >\n              {getFieldDecorator('nickname', {\n                rules: [{required: true, message: 'Please input your nickname!', whitespace: true}],\n              })(\n                <Input/>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label=\"Habitual Residence\"\n            >\n              {getFieldDecorator('residence', {\n                initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n                rules: [{type: 'array', required: true, message: 'Please select your habitual residence!'}],\n              })(\n                <Cascader options={residences}/>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label=\"Phone Number\"\n            >\n              {getFieldDecorator('phone', {\n                rules: [{required: true, message: 'Please input your phone number!'}],\n              })(\n                <Input addonBefore={prefixSelector} style={{width: '100%'}}/>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label=\"Website\"\n            >\n              {getFieldDecorator('website', {\n                rules: [{required: true, message: 'Please input website!'}],\n              })(\n                <AutoComplete\n                  dataSource={websiteOptions}\n                  onChange={this.handleWebsiteChange}\n                  placeholder=\"website\"\n                >\n                  <Input/>\n                </AutoComplete>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label=\"Captcha\"\n              extra=\"We must make sure that your are a human.\"\n            >\n              <Row>\n                <Col span={24} sm={12}>\n                  {getFieldDecorator('captcha', {\n                    rules: [{required: true, message: 'Please input the captcha you got!'}],\n                  })(\n                    <Input/>\n                  )}\n                </Col>\n                <Col span={24} sm={12}>\n                  <Button>Get captcha</Button>\n                </Col>\n              </Row>\n            </FormItem>\n            <FormItem {...tailFormItemLayout}>\n              {getFieldDecorator('agreement', {\n                valuePropName: 'checked',\n              })(\n                <Checkbox>I have read the <span className=\"gx-link\">agreement</span></Checkbox>\n              )}\n            </FormItem>\n            <FormItem {...tailFormItemLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n            </FormItem>\n          </Form>\n        </Card>\n      );\n    }\n  }\n\n  \nexport default SingleClient;\n\n","/*jshint esversion: 6 */\n\nimport React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\nimport AllClients from \"./allClients\";\nimport NewClient from \"./newClient\";\nimport SingleClient from \"./singleClient\";\n\nconst Clients = ({match}) => (\n  <Switch>\n    <Route exact path={`${match.url}/`} component={AllClients}/>\n    <Route path={`${match.url}/new`} component={NewClient}/>\n    <Route path={`${match.url}/single`} component={SingleClient}/>\n  </Switch>\n);\n\nexport default Clients;\n"],"sourceRoot":""}