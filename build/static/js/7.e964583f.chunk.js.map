{"version":3,"sources":["routes/Client/Orders/allOrders/index.js","appRedux/actions/Orders.js","routes/Client/Orders/newOrder/index.js","routes/Client/Orders/singleOrder/index.js","routes/Client/Orders/index.js"],"names":["columns","title","dataIndex","key","width","render","text","react_default","a","createElement","className","record","icon","type","showHeader","scroll","y","pagination","position","AllOrders","state","size","rowSelection","componentDidMount","_this","props","getOrders","handleSizeChange","e","setState","target","value","handleShowForm","visible","handleOk","confirmLoading","setTimeout","handleCancel","console","log","CreateNew","Link","to","es_button","onClick","IntlMessages","id","_this$props","this","loading","allOrders","card","extra","table","Object","assign","rowKey","dataSource","Component","connect","_ref","auth","orderData","commonData","token","listSuccess","dispatch","FETCH_START","axios","get","then","data","FETCH_SUCCESS","LIST_ORDER_SUCCESS","ALL_ORDERS_DATA","payload","error","FETCH_ERROR","catch","message","FormItem","Form","Item","TextArea","Input","NewOrder","confirmDirty","autoCompleteResult","add","form","nextItems","getFieldValue","concat","description","quantity","category","setFieldsValue","items","remove","i","length","filter","item","handleSubmit","preventDefault","validateFieldsAndScroll","err","values","addOrder","handleConfirmBlur","openNotification","notification","goBack","history","GoBack","_this2","_this$props$form","getFieldDecorator","initialValue","createSuccess","addOrderForm","Redirect","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayout2","spin","spinning","es_form","layout","onSubmit","label","tooltip","rules","required","whitespace","input","rows","map","index","row","col","lg","md","placeholder","validateTrigger","style","offset","htmlType","NewOrderForm","create","_ref3","order_name","admin_name","admin_email","admin_phone","post","_ref4","CREATE_ORDER_SUCCESS","Option","Select","AutoCompleteOption","AutoComplete","residences","children","SingleOrder","compareToFirstPassword","rule","callback","validateToNextPassword","validateFields","force","handleWebsiteChange","domain","tailFormItemLayout","prefixSelector","es_select","websiteOptions","website","singleOrder_FormItem","validator","onBlur","cascader","options","addonBefore","auto_complete","onChange","valuePropName","es_checkbox","Orders","match","Switch","Route","exact","path","url","component"],"mappings":"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","file":"static/js/7.e964583f.chunk.js","sourcesContent":["/*jshint esversion: 6 */\n\nimport React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n// eslint-disable-next-line\nimport {Button, Card, Icon, Table} from \"antd\";\n\n// import NewOrder from \"../newOrder\";\nimport IntlMessages from \"../../../../util/IntlMessages\";\n\nimport {getOrders} from \"../../../../appRedux/actions/Orders\";\n\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  key: 'name',\n  width: 200,\n  render: text => <span className=\"gx-link\">{text}</span>,\n}, {\n  title: 'Tin Number',\n  dataIndex: 'tin',\n  key: 'tin',\n  width: 250,\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  key: 'address',\n}, {\n  title: 'Action',\n  key: 'action',\n  width: 200,\n  render: (text, record) => (\n    <span>\n      <span className=\"gx-link ant-dropdown-link\">\n        Actions <Icon type=\"down\"/>\n      </span>\n    </span>\n  ),\n}];\n\n// const expandedRowRender = record => <p>{record.description}</p>;\nconst showHeader = true;\nconst scroll = {y: 440};\nconst pagination = {position: 'bottom'};\n\nclass AllOrders extends Component {\n  state = {\n    pagination,\n    size: 'middle',\n    showHeader,\n    rowSelection: {},\n    scroll,\n  };\n\n  componentDidMount = () =>\n  {\n    this.props.getOrders();\n  }\n\n  handleSizeChange = (e) => {\n    this.setState({size: e.target.value});\n  };\n\n  handleShowForm = (e) => {\n    this.setState({\n      visible: true,\n    });\n  };\n  handleOk = () => {\n    this.setState({\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 2000);\n  };\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  };\n\n  CreateNew = (\n    <Link to=\"/orders/new\">\n      <Button type=\"primary\" size=\"default\" icon=\"add\" onClick={this.handleShowForm}>\n        <IntlMessages id=\"sidebar.orders.new\"/>\n      </Button>\n    </Link>\n  );\n\n  render() {\n    const {loading, allOrders} = this.props\n    return (\n      <div>\n        <Card className=\"gx-card\" title=\"Orders\" extra={this.CreateNew}>\n          <Table className=\"gx-table-responsive\" {...this.state} loading={loading} rowKey=\"id\" columns={columns} dataSource={allOrders}/>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({auth, orderData, commonData}) => {\n  const {token} = auth;\n  const {listSuccess, allOrders} = orderData;\n  const {loading} = commonData;\n  return {token, listSuccess, loading, allOrders};\n};\n\nexport default connect(mapStateToProps, {getOrders})(AllOrders);","/*jshint esversion: 6 */\n\n// eslint-disable-next-line \nimport {\n  FETCH_ERROR,\n  FETCH_START,\n  FETCH_SUCCESS,\n  INIT_URL,\n  CREATE_ORDER_SUCCESS,\n  LIST_ORDER_SUCCESS,\n  ALL_ORDERS_DATA\n} from \"../../constants/ActionTypes\";\nimport axios from 'util/Api';\n\nexport const setInitUrl = (url) => {\n  return {\n    type: INIT_URL,\n    payload: url\n  };\n};\n\nexport const getOrders = () => {\n  return (dispatch) => {\n    dispatch({type: FETCH_START});\n    axios.get('orders', \n    ).then(({data}) => {\n      if (data.data) {\n        dispatch({type: FETCH_SUCCESS});\n        dispatch({type: LIST_ORDER_SUCCESS});\n        dispatch({type: ALL_ORDERS_DATA, payload: data.data});\n      } else {\n        console.log(\"payload: data.error\", data.error);\n        dispatch({type: FETCH_ERROR, payload: \"Network Error\"});\n      }\n    }).catch(function (error) {\n      dispatch({type: FETCH_ERROR, payload: error.message});\n      console.log(\"Error****:\", error.message);\n    });\n  };\n};\n\nexport const getAdminOrders = () => {\n  return (dispatch) => {\n    dispatch({type: FETCH_START});\n    axios.get('admin/orders', \n    ).then(({data}) => {\n      if (data.data) {\n        // console.log(data)\n        dispatch({type: FETCH_SUCCESS});\n        dispatch({type: LIST_ORDER_SUCCESS});\n        dispatch({type: ALL_ORDERS_DATA, payload: data.data});\n      } else {\n        console.log(\"payload: data.error\", data.error);\n        dispatch({type: FETCH_ERROR, payload: \"Network Error\"});\n      }\n    }).catch(function (error) {\n      dispatch({type: FETCH_ERROR, payload: error.message});\n      console.log(\"Error****:\", error.message);\n    });\n  };\n};\n\nexport const addOrderForm = () => {\n  return (dispatch) => {\n    dispatch({type: CREATE_ORDER_SUCCESS, payload: false});\n  };\n};\n\nexport const addOrder = ({order_name, admin_name, admin_email, admin_phone}) => {\n  return (dispatch) => {\n    dispatch({type: FETCH_START});\n    axios.post('admin/orders', {\n        order_name, admin_name, admin_email, admin_phone\n      }\n    ).then(({data}) => {\n      if (data) {\n        dispatch({type: FETCH_SUCCESS});\n        dispatch({type: CREATE_ORDER_SUCCESS, payload: true});\n      } else {\n        console.log(\"payload: data.error\", data.error);\n        dispatch({type: FETCH_ERROR, payload: \"Network Error\"});\n      }\n    }).catch(function (error) {\n      dispatch({type: FETCH_ERROR, payload: error.message});\n      console.log(\"Error****:\", error.message);\n    });\n  };\n};\n","/*jshint esversion: 6 */\n\nimport \"./index.less\";\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\n\nimport {Redirect} from \"react-router-dom\";\nimport {Button, Card, Form, Icon, Input, Tooltip, Spin, Row, Col, notification} from \"antd\";\n\nimport IntlMessages from \"../../../../util/IntlMessages\";\nimport {addOrder, addOrderForm} from \"../../../../appRedux/actions/Orders\";\n\nimport './index.less';\n\nconst FormItem = Form.Item;\nconst {TextArea} = Input;\n\nclass NewOrder extends Component {\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n\n    add = () => {\n      const {form} = this.props;\n      // can use data-binding to get\n      const items = form.getFieldValue('items');\n      const nextItems = items.concat({description: '', size: '', quantity: '', category: ''});\n      // can use data-binding to set\n      // important! notify form to detect changes\n      form.setFieldsValue({\n        items: nextItems,\n      });\n    };\n\n    remove = (i) => {\n      const {form} = this.props;\n      // can use data-binding to get\n      const items = form.getFieldValue('items');\n      // We need at least one passenger\n      if (items.length === 1) {\n        return;\n      }\n  \n      // can use data-binding to set\n      form.setFieldsValue({\n        items: items.filter(item => item !== i),\n      });\n    };\n\n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) { \n          this.props.addOrder(values);\n        }\n      });\n    };\n\n    handleConfirmBlur = (e) => {\n      const value = e.target.value;\n      this.setState({confirmDirty: this.state.confirmDirty || !!value});\n    };\n\n    openNotification = (type) => {\n      notification[type]({\n        message: 'Order Created',\n        description: 'Order and User account created successfully.'\n      });\n    };\n\n    goBack = () => {\n      this.props.history.goBack();\n    };\n\n    GoBack = (\n      <Button type=\"primary\" size=\"default\" icon=\"add\" onClick={this.goBack}>\n          <IntlMessages id=\"sidebar.cancel\"/>\n        </Button>\n    );\n  \n    render() {\n      const {getFieldDecorator, getFieldValue} = this.props.form;\n      getFieldDecorator('items', {initialValue: [{description: '', size: '', quantity: '', category: ''}]});\n      const items = getFieldValue('items');\n      const {createSuccess, loading} = this.props;\n      if (createSuccess) {\n          this.openNotification('success');\n          this.props.addOrderForm();\n          return ( <Redirect to={'/orders'}/> );\n      }\n      const formItemLayout = {\n        labelCol: {\n          xs: {span: 24},\n          sm: {span: 6},\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 17},\n        },\n      };\n      const formItemLayout2 = {\n        labelCol: {\n          xs: {span: 0},\n          sm: {span: 0},\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 24},\n        },\n      };\n      const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 20,\n          },\n          sm: {\n            span:24,\n            offset: 20,\n          },\n        },\n      };\n      \n      return (\n        <Spin spinning={loading}>\n          <Card className=\"gx-card\" title=\"New Order\" extra={this.GoBack}>\n            <Form layout=\"horizontal\" onSubmit={this.handleSubmit}>\n              <div>\n                <FormItem\n                  {...formItemLayout}\n                  label={(\n                    <span>\n                    Reference No.&nbsp;\n                      <Tooltip title=\"Use organization reference number. Must be unique?\">\n                      <Icon type=\"question-circle-o\"/>\n                    </Tooltip>\n                  </span>\n                  )}\n                >\n                  {getFieldDecorator('client_ref', {\n                    rules: [{required: true, message: 'Please input a reference number!', whitespace: true}],\n                  })(\n                    <Input/>\n                  )}\n                </FormItem>\n                <FormItem\n                  {...formItemLayout}\n                  label={(\n                    <span>\n                      Description&nbsp;\n                      <Tooltip title=\"What is the name of the primary user?\">\n                      <Icon type=\"question-circle-o\"/>\n                    </Tooltip>\n                  </span>\n                  )}\n                >\n                  {getFieldDecorator('order_desc', {\n                    rules: [{required: true, message: 'You must enter a User!', whitespace: true}],\n                  })(\n                    <TextArea rows={4} columns={2}/>\n                  )}\n                </FormItem>\n                <legend><h3>Items</h3></legend>\n               { items.map((item, index) => \n                    (\n                      <div className=\"pdynamic\" key={index}>\n                        <Row className=\"border\">\n                          <Col lg={12} md={12} sm={24} xs={24}>\n                            <FormItem\n                              {...formItemLayout2}\n                              required={false}\n                            >\n                              {getFieldDecorator(`${item}.category`, {\n                                rules: [{\n                                  required: true,\n                                  whitespace: true,\n                                  message: \"Please input passenger's name or delete this field.\",\n                                }],\n                              })(\n                                <Input placeholder=\"Category\"/>\n                              )}                       \n                            </FormItem>\n                          </Col>\n                          <Col lg={12} md={12} sm={24} xs={24}>\n                            <FormItem\n                              {...formItemLayout2}\n                              required={false}\n                            >\n                              {getFieldDecorator(`${item}.size`, {\n                                rules: [{\n                                  required: true,\n                                  whitespace: true,\n                                  message: \"Please input passenger's name or delete this field.\",\n                                }],\n                              })(\n                                <Input placeholder=\"Size\"/>\n                              )}                       \n                            </FormItem>\n                          </Col>\n                          <Col lg={12} md={12} sm={24} xs={24}>\n                            <FormItem\n                              {...formItemLayout2}\n                              required={false}\n                            >\n                              {getFieldDecorator(`${item}.quantity`, {\n                                validateTrigger: ['onChange', 'onBlur'],\n                                rules: [{\n                                  required: true,\n                                  whitespace: true,\n                                  message: \"Please input passenger's name or delete this field.\",\n                                }],\n                              })(\n                                <Input placeholder=\"Quantity\"/>\n                              )}                       \n                            </FormItem>\n                          </Col>\n                          <Col lg={12} md={12} sm={24} xs={24}>\n                            <FormItem\n                              {...formItemLayout2}\n                              required={false}\n                            >\n                              {getFieldDecorator(`${item}.description`, {\n                                validateTrigger: ['onChange', 'onBlur'],\n                                rules: [{\n                                  required: true,\n                                  whitespace: true,\n                                  message: \"Please input passenger's name or delete this field.\",\n                                }],\n                              })(\n                                <Input placeholder=\"Description\"/>\n                              )}                       \n                            </FormItem>\n                          </Col>\n                          <Col lg={24} md={24} sm={24} xs={24}>\n                            {items.length > 1 ? (<FormItem {...formItemLayout}>\n                              <Button type=\"dashed\" onClick={this.add} style={{width: '40%'}}>\n                                <Icon type=\"minus-circle-o\"/> Remove Item\n                              </Button>\n                            </FormItem>) : null}\n                          </Col>\n                        </Row>\n                      </div>\n                  )\n               )}\n              </div>\n              <br />\n              <FormItem {...formItemLayout}>\n                <Button type=\"dashed\" onClick={this.add} style={{width: '40%'}}>\n                  <Icon type=\"plus\"/> Add Item\n                </Button>\n              </FormItem>\n              <FormItem {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n              </FormItem>\n            </Form>\n          </Card>\n        </Spin>\n      );\n    }\n  }\n  \nconst NewOrderForm = Form.create()(NewOrder);\n// export default NewOrderForm;\n\nconst mapStateToProps = ({auth, orderData, commonData}) => {\n  const {token} = auth;\n  const {createSuccess} = orderData;\n  const {loading} = commonData;\n  return {token, createSuccess, loading};\n};\n\nexport default connect(mapStateToProps, {addOrder, addOrderForm})(NewOrderForm);\n","/*jshint esversion: 6 */\nimport React, {Component} from \"react\";\nimport {AutoComplete, Button, Card, Cascader, Checkbox, Col, Form, Icon, Input, Row, Select, Tooltip} from \"antd\";\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst residences = [{\n    value: 'zhejiang',\n    label: 'Zhejiang',\n    children: [{\n      value: 'hangzhou',\n      label: 'Hangzhou',\n      children: [{\n        value: 'xihu',\n        label: 'West Lake',\n      }],\n    }],\n  }, {\n    value: 'jiangsu',\n    label: 'Jiangsu',\n    children: [{\n      value: 'nanjing',\n      label: 'Nanjing',\n      children: [{\n        value: 'zhonghuamen',\n        label: 'Zhong Hua Men',\n      }],\n    }],\n}];\n\n\nclass SingleOrder extends Component {\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n    handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    }\n    handleConfirmBlur = (e) => {\n      const value = e.target.value;\n      this.setState({confirmDirty: this.state.confirmDirty || !!value});\n    }\n    compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    }\n    validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], {force: true});\n      }\n      callback();\n    }\n    handleWebsiteChange = (value) => {\n      let autoCompleteResult;\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n      }\n      this.setState({autoCompleteResult});\n    }\n  \n    render() {\n      const {getFieldDecorator} = this.props.form;\n      const {autoCompleteResult} = this.state;\n  \n      const formItemLayout = {\n        labelCol: {\n          xs: {span: 24},\n          sm: {span: 8},\n        },\n        wrapperCol: {\n          xs: {span: 24},\n          sm: {span: 16},\n        },\n      };\n      const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      };\n      const prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '86',\n      })(\n        <Select style={{width: 70}}>\n          <Option value=\"86\">+86</Option>\n          <Option value=\"87\">+87</Option>\n        </Select>\n      );\n  \n      const websiteOptions = autoCompleteResult.map(website => (\n        <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n      ));\n  \n      return (\n        <Card className=\"gx-card\" title=\"Create New Order\">\n          <Form onSubmit={this.handleSubmit}>\n            <FormItem\n              {...formItemLayout}\n              label=\"E-mail\"\n            >\n              {getFieldDecorator('email', {\n                rules: [{\n                  type: 'email', message: 'The input is not valid E-mail!',\n                }, {\n                  required: true, message: 'Please input your E-mail!',\n                }],\n              })(\n                <Input id=\"email1\"/>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label=\"Password\"\n            >\n              {getFieldDecorator('password', {\n                rules: [{\n                  required: true, message: 'Please input your password!',\n                }, {\n                  validator: this.validateToNextPassword,\n                }],\n              })(\n                <Input type=\"password\"/>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label=\"Confirm Password\"\n            >\n              {getFieldDecorator('confirm', {\n                rules: [{\n                  required: true, message: 'Please confirm your password!',\n                }, {\n                  validator: this.compareToFirstPassword,\n                }],\n              })(\n                <Input type=\"password\" onBlur={this.handleConfirmBlur}/>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label={(\n                <span>\n                Nickname&nbsp;\n                  <Tooltip title=\"What do you want others to call you?\">\n                  <Icon type=\"question-circle-o\"/>\n                </Tooltip>\n              </span>\n              )}\n            >\n              {getFieldDecorator('nickname', {\n                rules: [{required: true, message: 'Please input your nickname!', whitespace: true}],\n              })(\n                <Input/>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label=\"Habitual Residence\"\n            >\n              {getFieldDecorator('residence', {\n                initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n                rules: [{type: 'array', required: true, message: 'Please select your habitual residence!'}],\n              })(\n                <Cascader options={residences}/>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label=\"Phone Number\"\n            >\n              {getFieldDecorator('phone', {\n                rules: [{required: true, message: 'Please input your phone number!'}],\n              })(\n                <Input addonBefore={prefixSelector} style={{width: '100%'}}/>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label=\"Website\"\n            >\n              {getFieldDecorator('website', {\n                rules: [{required: true, message: 'Please input website!'}],\n              })(\n                <AutoComplete\n                  dataSource={websiteOptions}\n                  onChange={this.handleWebsiteChange}\n                  placeholder=\"website\"\n                >\n                  <Input/>\n                </AutoComplete>\n              )}\n            </FormItem>\n            <FormItem\n              {...formItemLayout}\n              label=\"Captcha\"\n              extra=\"We must make sure that your are a human.\"\n            >\n              <Row>\n                <Col span={24} sm={12}>\n                  {getFieldDecorator('captcha', {\n                    rules: [{required: true, message: 'Please input the captcha you got!'}],\n                  })(\n                    <Input/>\n                  )}\n                </Col>\n                <Col span={24} sm={12}>\n                  <Button>Get captcha</Button>\n                </Col>\n              </Row>\n            </FormItem>\n            <FormItem {...tailFormItemLayout}>\n              {getFieldDecorator('agreement', {\n                valuePropName: 'checked',\n              })(\n                <Checkbox>I have read the <span className=\"gx-link\">agreement</span></Checkbox>\n              )}\n            </FormItem>\n            <FormItem {...tailFormItemLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n            </FormItem>\n          </Form>\n        </Card>\n      );\n    }\n  }\n\n  \nexport default SingleOrder;\n\n","/*jshint esversion: 6 */\n\nimport React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\nimport AllOrders from \"./allOrders\";\nimport NewOrder from \"./newOrder\";\nimport SingleOrder from \"./singleOrder\";\n\nconst Orders = ({match}) => (\n  <Switch>\n    <Route exact path={`${match.url}/`} component={AllOrders}/>\n    <Route path={`${match.url}/new`} component={NewOrder}/>\n    <Route path={`${match.url}/single`} component={SingleOrder}/>\n  </Switch>\n);\n\nexport default Orders;\n"],"sourceRoot":""}