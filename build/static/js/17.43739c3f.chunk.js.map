{"version":3,"sources":["components/Widget/index.js","../node_modules/antd/es/_util/colors.js","../node_modules/d3-geo/src/adder.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/constant.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/polygon.js","../node_modules/d3-geo/src/clip/extent.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/src/distance.js","../node_modules/d3-geo/src/contains.js","../node_modules/d3-geo/src/graticule.js","../node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/conic.js","../node_modules/d3-geo/src/projection/conicEqualArea.js","../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../node_modules/d3-geo/src/projection/albers.js","../node_modules/d3-geo/src/projection/albersUsa.js","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/d3-geo/src/projection/conicConformal.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo/src/projection/identity.js","../node_modules/d3-geo/src/projection/orthographic.js","../node_modules/d3-geo/src/projection/stereographic.js","../node_modules/d3-geo/src/projection/transverseMercator.js","../node_modules/d3-geo/index.js","routes/main/dashboard/CRM/data.js","../node_modules/react-simple-maps/lib/utils.js","../node_modules/react-simple-maps/lib/MapGroup.js","components/Metrics/IconWithTextCard.js","components/WidgetHeader/index.js","components/dashboard/CRM/ActivityItem.js","components/dashboard/CRM/RecentActivity.js","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js","../node_modules/react-simple-maps/lib/projectionConfig.js","../node_modules/react-simple-maps/lib/index.js","../node_modules/react-simple-maps/lib/ComposableMap.js","../node_modules/react-simple-maps/lib/projections.js","../node_modules/react-simple-maps/lib/ZoomableGroup.js","../node_modules/react-simple-maps/lib/ZoomableGlobe.js","../node_modules/react-simple-maps/lib/Geographies.js","../node_modules/react-simple-maps/lib/Geography.js","../node_modules/react-simple-maps/lib/Marker.js","../node_modules/react-simple-maps/lib/Markers.js","../node_modules/react-simple-maps/lib/Line.js","../node_modules/react-simple-maps/lib/Lines.js","../node_modules/react-simple-maps/lib/Annotation.js","../node_modules/react-simple-maps/lib/Annotations.js","../node_modules/react-simple-maps/lib/Graticule.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/adder.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/math.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/noop.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/stream.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/area.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/constant.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/compose.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/circle.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/length.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/identity.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/transform.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/mercator.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/equalEarth.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/naturalEarth1.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/orthographic.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/stereographic.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/transverseMercator.js","../node_modules/d3-geo-projection/src/math.js","../node_modules/d3-geo-projection/src/airy.js","../node_modules/d3-geo-projection/src/aitoff.js","../node_modules/d3-geo-projection/src/armadillo.js","../node_modules/d3-geo-projection/src/august.js","../node_modules/d3-geo-projection/src/baker.js","../node_modules/d3-geo-projection/src/berghaus.js","../node_modules/d3-geo-projection/src/mollweide.js","../node_modules/d3-geo-projection/src/boggs.js","../node_modules/d3-geo-projection/src/parallel1.js","../node_modules/d3-geo-projection/src/sinusoidal.js","../node_modules/d3-geo-projection/src/bonne.js","../node_modules/d3-geo-projection/src/bottomley.js","../node_modules/d3-geo-projection/src/bromley.js","../node_modules/d3-geo-projection/src/chamberlin.js","../node_modules/d3-geo-projection/src/collignon.js","../node_modules/d3-geo-projection/src/craig.js","../node_modules/d3-geo-projection/src/craster.js","../node_modules/d3-geo-projection/src/cylindricalEqualArea.js","../node_modules/d3-geo-projection/src/cylindricalStereographic.js","../node_modules/d3-geo-projection/src/eckert1.js","../node_modules/d3-geo-projection/src/eckert2.js","../node_modules/d3-geo-projection/src/eckert3.js","../node_modules/d3-geo-projection/src/eckert4.js","../node_modules/d3-geo-projection/src/eckert5.js","../node_modules/d3-geo-projection/src/eckert6.js","../node_modules/d3-geo-projection/src/eisenlohr.js","../node_modules/d3-geo-projection/src/fahey.js","../node_modules/d3-geo-projection/src/foucaut.js","../node_modules/d3-geo-projection/src/gilbert.js","../node_modules/d3-geo-projection/src/gingery.js","../node_modules/d3-geo-projection/src/ginzburgPolyconic.js","../node_modules/d3-geo-projection/src/ginzburg4.js","../node_modules/d3-geo-projection/src/ginzburg5.js","../node_modules/d3-geo-projection/src/ginzburg6.js","../node_modules/d3-geo-projection/src/ginzburg8.js","../node_modules/d3-geo-projection/src/ginzburg9.js","../node_modules/d3-geo-projection/src/square.js","../node_modules/d3-geo-projection/src/gringorten.js","../node_modules/d3-geo-projection/src/elliptic.js","../node_modules/d3-geo-projection/src/guyou.js","../node_modules/d3-geo-projection/src/hammer.js","../node_modules/d3-geo-projection/src/hammerRetroazimuthal.js","../node_modules/d3-geo-projection/src/healpix.js","../node_modules/d3-geo-projection/src/hill.js","../node_modules/d3-geo-projection/src/sinuMollweide.js","../node_modules/d3-geo-projection/src/homolosine.js","../node_modules/d3-geo-projection/src/interrupted/index.js","../node_modules/d3-geo-projection/src/interrupted/boggs.js","../node_modules/d3-geo-projection/src/interrupted/homolosine.js","../node_modules/d3-geo-projection/src/interrupted/mollweide.js","../node_modules/d3-geo-projection/src/interrupted/mollweideHemispheres.js","../node_modules/d3-geo-projection/src/interrupted/sinuMollweide.js","../node_modules/d3-geo-projection/src/interrupted/sinusoidal.js","../node_modules/d3-geo-projection/src/kavrayskiy7.js","../node_modules/d3-geo-projection/src/lagrange.js","../node_modules/d3-geo-projection/src/larrivee.js","../node_modules/d3-geo-projection/src/laskowski.js","../node_modules/d3-geo-projection/src/littrow.js","../node_modules/d3-geo-projection/src/loximuthal.js","../node_modules/d3-geo-projection/src/miller.js","../node_modules/d3-geo-projection/src/modifiedStereographic.js","../node_modules/d3-geo-projection/src/mtFlatPolarParabolic.js","../node_modules/d3-geo-projection/src/mtFlatPolarQuartic.js","../node_modules/d3-geo-projection/src/mtFlatPolarSinusoidal.js","../node_modules/d3-geo-projection/src/naturalEarth.js","../node_modules/d3-geo-projection/src/nellHammer.js","../node_modules/d3-geo-projection/src/patterson.js","../node_modules/d3-geo-projection/src/polyconic.js","../node_modules/d3-geo-projection/src/polyhedral/matrix.js","../node_modules/d3-geo-projection/src/polyhedral/index.js","../node_modules/d3-geo-projection/src/polyhedral/octahedron.js","../node_modules/d3-geo-projection/src/polyhedral/butterfly.js","../node_modules/d3-geo-projection/src/polyhedral/collignon.js","../node_modules/d3-geo-projection/src/polyhedral/waterman.js","../node_modules/d3-geo-projection/src/noop.js","../node_modules/d3-geo-projection/src/project/index.js","../node_modules/d3-geo-projection/src/project/clockwise.js","../node_modules/d3-geo-projection/src/project/contains.js","../node_modules/d3-geo-projection/src/quincuncial/index.js","../node_modules/d3-geo-projection/src/quincuncial/gringorten.js","../node_modules/d3-geo-projection/src/quincuncial/peirce.js","../node_modules/d3-geo-projection/src/quantize.js","../node_modules/d3-geo-projection/src/rectangularPolyconic.js","../node_modules/d3-geo-projection/src/robinson.js","../node_modules/d3-geo-projection/src/satellite.js","../node_modules/d3-geo-projection/src/stitch.js","../node_modules/d3-geo-projection/src/times.js","../node_modules/d3-geo-projection/src/twoPoint.js","../node_modules/d3-geo-projection/src/twoPointAzimuthal.js","../node_modules/d3-geo-projection/src/twoPointEquidistant.js","../node_modules/d3-geo-projection/src/vanDerGrinten.js","../node_modules/d3-geo-projection/src/vanDerGrinten2.js","../node_modules/d3-geo-projection/src/vanDerGrinten3.js","../node_modules/d3-geo-projection/src/vanDerGrinten4.js","../node_modules/d3-geo-projection/src/wagner4.js","../node_modules/d3-geo-projection/src/wagner6.js","../node_modules/d3-geo-projection/src/wagner7.js","../node_modules/d3-geo-projection/src/wiechel.js","../node_modules/d3-geo-projection/src/winkel3.js","../node_modules/d3-geo-projection/index.js","../node_modules/topojson-client/src/identity.js","../node_modules/topojson-client/src/transform.js","../node_modules/topojson-client/src/bbox.js","../node_modules/topojson-client/src/reverse.js","../node_modules/topojson-client/src/feature.js","../node_modules/topojson-client/src/stitch.js","../node_modules/topojson-client/src/mesh.js","../node_modules/topojson-client/src/merge.js","../node_modules/topojson-client/src/bisect.js","../node_modules/topojson-client/src/neighbors.js","../node_modules/topojson-client/src/quantize.js","../node_modules/topojson-client/src/untransform.js","../node_modules/topojson-client/index.js","routes/Admin/Dashboard/data.js","components/dashboard/CRM/TaskItem.js","components/dashboard/CRM/TaskList.js","components/dashboard/Listing/ChartCard.js","components/dashboard/CRM/TicketItem.js","components/dashboard/CRM/TicketList.js","components/dashboard/CRM/TaskByStatus.js","components/dashboard/CRM/LineIndicator.js","components/dashboard/CRM/BubbleMap/index.js","components/dashboard/CRM/Overview.js","components/Metrics/index.js","components/dashboard/CRM/TotalRevenueCard.js","components/dashboard/CRM/NewCustomers.js","components/dashboard/CRM/GrowthCard.js","components/dashboard/Crypto/CurrencyCalculator.js","routes/Admin/Dashboard/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","antd__WEBPACK_IMPORTED_MODULE_1__","Widget","_ref","title","children","styleName","cover","extra","actions","a","createElement","className","concat","defaultProps","d","__webpack_exports__","PresetColorTypes","_type__WEBPACK_IMPORTED_MODULE_0__","Object","adder","Adder","this","reset","prototype","constructor","s","t","add","y","_add","temp","valueOf","b","x","bv","av","epsilon","pi","Math","PI","halfPi","quarterPi","tau","degrees","radians","abs","atan","atan2","cos","ceil","exp","log","floor","pow","sin","math_sign","sign","sqrt","tan","acos","asin","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","i","length","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","k","u","v","src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","l","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","push","bounds_linePoint","p","normal","inflection","phii","delta","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","merged","deltaMax","Infinity","sort","NaN","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","z","centroidLinePointFirst","centroidLinePoint","w","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","m","centroid","constant","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","rotate","forward","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","step","circleRadius","src_circle","ring","center","precision","circle","c","apply","arguments","r","_","buffer","line","lines","rejoin","pop","shift","result","clip_line","x0","y0","x1","y1","ax","ay","dx","dy","pointEqual","Intersection","points","other","entry","o","e","clip_polygon","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p0","p1","polygon_link","start","current","isSubject","array","clipMax","clipMin","extent_clipExtent","visible","from","to","a1","corner","comparePoint","ca","cb","polygon","x__","y__","v__","x_","y_","v_","first","clean","activeStream","bufferStream","clipStream","linePoint","winding","a0","j","b0","b1","polygonInside","cleanInside","src","max","min","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","_stream","extent","sum","polygonContains","angle","point0","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","point1","phi1","absDelta","arc","intersection","phiArc","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","map","ringRadians","pointRadians","contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","X","Y","DX","DY","graticule","filter","outline","slice","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","B","A","identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","join","src_path","projection","projectionStream","contextStream","path","src_clip","pointVisible","clipLine","sink","rotatedStart","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","ringSegments","validSegment","clip_antimeridian","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","clip_circle","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","polar","q1","code","c0","v0","v00","point2","src_transform","methods","transformer","TransformStream","key","fit_fitExtent","h","clipExtent","scale","translate","fit_fitSize","size","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","projection_projection","projectionMutator","projectAt","projectRotate","theta","preclip","postclip","projectResample","projectTransform","recenter","clipAngle","fitExtent","fitSize","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","multiplex","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","f","fy","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","g","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","scaleTranslate","kx","ky","tx","ty","projection_identity","sx","sy","transform","reflectX","reflectY","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","ticketList","taskStatus","taskTags","siteVisit","id","avatar","description","status","color","name","thisYear","lastYear","defineProperty","exports","value","calculateResizeFactor","actualDimension","baseDimension","calculateMousePosition","props","zoom","resizeFactor","undefined","width","height","reference","canRotate","reverseRotation","item","returner","isChildOfType","createNewChildren","child","_react2","default","cloneElement","groupName","itemName","roundPath","replace","round","createConnectorPath","connectorType","endPoint","curve","e0","e1","createTextAnchor","computeBackdrop","backdrop","originalRotation","tl","br","obj","_react","__esModule","expectedTypes","indexOf","componentIdentifier","_createClass","defineProperties","target","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","MapGroup","_Component","instance","TypeError","_classCallCheck","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","create","setPrototypeOf","_inherits","Component","_props","style","components_Widget_index__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","_constants_ThemeSetting__WEBPACK_IMPORTED_MODULE_3__","connect","themeType","settings","icon","subTitle","iconColor","THEME_TYPE_DARK","fontSize","WidgetHeader","react_default","ActivityItem","task","Auxiliary","imageList","image","index","shape","TimeLineItem","Timeline","Item","getName","nameSplit","split","initials","charAt","toUpperCase","RecentActivity","_this","classCallCheck","possibleConstructorReturn","state","recentList","limit","updateWindowDimensions","bind","assertThisInitialized","setState","window","innerHeight","innerWidth","addEventListener","removeEventListener","previousState","_this$state","components_WidgetHeader","activity","day","timeline","tasks","mode","dot","CRM_ActivityItem","onClick","onLoadMore","React","_typeof","Symbol","iterator","_extends","assign","source","_defineProperty","_defineProperties","_assertThisInitialized","_getPrototypeOf","_setPrototypeOf","__rest","getOwnPropertySymbols","propertyIsEnumerable","CheckableTag_CheckableTag","_React$Component","CheckableTag","handleClick","_this$props","checked","onChange","renderCheckableTag","_classNames","getPrefixCls","_a","customizePrefixCls","prefixCls","restProps","cls","classnames_default","react","config_provider","tag_typeof","tag_defineProperty","tag_extends","tag_defineProperties","tag_possibleConstructorReturn","tag_assertThisInitialized","tag_getPrototypeOf","tag_setPrototypeOf","tag_rest","PresetColorRegex","RegExp","colors","tag_Tag","Tag","tag_classCallCheck","handleIconClick","setVisible","renderTag","configProps","otherProps","isNeedWave","divProps","es","wave","getTagClassName","getTagStyle","renderCloseIcon","warning","tag_inherits","nextProps","onClose","afterClose","defaultPrevented","test","_this$props2","isPresetColor","backgroundColor","_this$props3","closable","react_lifecycles_compat_es","xOffset","yOffset","_ComposableMap","get","_interopRequireDefault","_ZoomableGroup","_ZoomableGlobe","_Geographies","_Geography","_Marker","_Markers","_Line","_Lines","_MapGroup","_Annotation","_Annotations","_Graticule","_projections2","_projectionConfig2","ComposableMap","projectionConfig","_props2","showCenter","aspectRatio","viewBox","defs","preserveAspectRatio","fill","config","projectionName","baseProjection","projectionReference","_d3GeoProjection","_d3Geo","_projectionConfig","geoMercator","miller","geoMiller","times","geoTimes","robinson","geoRobinson","winkel3","geoWinkel3","eckert4","geoEckert4","geoAlbersUsa","geoOrthographic","_utils","ZoomableGroup","mouseX","mouseY","mouseXStart","mouseYStart","isPressed","resizeFactorX","resizeFactorY","handleMouseMove","handleMouseUp","handleMouseDown","handleTouchStart","handleTouchMove","handleResize","pageX","pageY","disablePanning","_ref2","touches","onMoveEnd","_state","_ref3","_state2","onMoveStart","_ref4","evt","preventDefault","_state3","_props3","zoomFactor","centerChanged","JSON","stringify","_props4","zoomableGroupNode","parentNode","getBoundingClientRect","xPercentageChange","yPercentageChange","_props5","preventTouchScroll","_this2","_props6","_state4","ref","onMouseMove","onMouseUp","onMouseDown","onTouchStart","onTouchMove","onTouchEnd","strokeWidth","ZoomableGlobe","initialRotation","clientX","clientY","differenceX","differenceY","sensitivity","newCenter","currentCenter","zoomableGlobeNode","_topojsonClient","Geographies","geographyPaths","shouldFetchGeographies","geography","parseGeographies","fetchGeographies","nextState","disableOptimization","geographyUrl","console","warn","cancelPendingRequest","Array","isArray","toString","objects","keys","request","XMLHttpRequest","open","onload","parse","responseText","onGeographyPathsLoaded","String","onerror","send","_xhr","abort","pathCache","Geography","hover","pressed","handleMouseEnter","handleMouseLeave","handleMouseClick","handleFocus","handleBlur","persist","onMouseEnter","onMouseLeave","_props7","onFocus","_props8","onBlur","_props9","cacheId","tabable","pathString","geoPath","renderPath","excludeProps","reduce","tabIndex","Marker","marker","preserveMarkerAspect","translation","lineString","isHidden","geoLength","_MapGroup2","Markers","_objectWithoutProperties","Line","end","buildPath","buildLineString","startLineString","endLineString","Lines","Annotation","hiddenStyle","stroke","markerEnd","connectorPath","textAnchor","Annotations","computeGraticule","geoGraticule","computeOutline","Graticule","renderGraticule","graticulePath","outlinePath","globe","pointerEvents","math_epsilon","epsilon2","centroid_z0","src_bounds","rejoin_link","longitude","clipRectangle","fit","fitBounds","fit_fitWidth","fit_fitHeight","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectRotateTransform","transformRotate","fitWidth","fitHeight","A1","equalEarth_A2","A3","A4","M","equalEarthRaw","l2","l6","naturalEarth1Raw","phi4","math_abs","math_atan","math_atan2","math_cos","math_exp","math_floor","math_log","math_pow","src_math_sign","math_sin","math_tan","src_math_epsilon","math_epsilon2","math_pi","math_halfPi","math_quarterPi","sqrt1_2","SQRT1_2","sqrt2","math_sqrt","sqrtPi","math_tau","math_degrees","math_radians","math_asin","math_acos","sinh","cosh","airyRaw","beta","tanBeta_2","cosx","cosy","siny","cosz","z_2","cosz_2","sinz_2","tanz_2","lnsecz_2","sinz","airy","aitoffRaw","sincia","sinci","sinx","sinx_2","cosx_2","sin_2y","sin2y","cos2y","sin2x_2","fx","dxdx","dxdy","dydx","dydy","aitoff","armadilloRaw","sPhi0","tanPhi0","cosLambda","sinLambda","dxdLambda","dxdPhi","dydLambda","dydPhi","denominator","dPhi","armadillo","stream_","parallel","rotateStream","sphereStream","augustRaw","tanPhi","sin3Eta","eta","xi","arcosh","arsinh","cosEta","coshXi","august","sqrt8","baker_phi0","bakerRaw","cosPhi_2","tanPhi_2","baker","berghausRaw","lobes","theta0","α","cotα","berghaus","sr","delta0","mollweideBromleyTheta","cp","cpsinPhi","mollweideBromleyRaw","mollweideRaw","mollweide","boggs_k","boggs_w","boggsRaw","boggs","parallel1","sinusoidalRaw","sinusoidal","bonneRaw","cotPhi0","rho","bonne","bottomleyRaw","sinPsi","bottomley","fraction","bromleyRaw","bromley","chamberlin_distance","s1","s2","cosdLambda","sindPhi","sindLambda","chamberlin_angle","chamberlin_longitude","chamberlinRaw","p2","beta0","beta1","beta2","mean","chamberlin_pointRadians","chamberlinAfrica","chamberlin","R","collignonRaw","collignon","craigRaw","cosλ","craig","sqrt3","crasterRaw","craster","cylindricalEqualArea_cylindricalEqualAreaRaw","cylindricalEqualArea","cylindricalStereographicRaw","cylindricalStereographic","eckert1Raw","eckert1","eckert2Raw","eckert2","eckert3Raw","eckert3","eckert4Raw","eckert5Raw","eckert5","eckert6Raw","eckert6","eisenlohrK","eisenlohrRaw","s0","_0","_1","cos1","v2","vm1v","vp1v","deltatDeltaLambda","deltatDeltaPhi","deltacDeltat","deltacDeltaLambda","deltacDeltaPhi","deltavDeltaLambda","deltavDeltaPhi","deltaxDeltaLambda","deltaxDeltaPhi","deltayDeltaLambda","deltayDeltaPhi","eisenlohr","faheyK","faheyRaw","fahey","foucautRaw","cosk","foucaut","gilbertForward","gilbertInvert","src_gilbert","projectionType","gilbert","property","gingeryRaw","rho2","r2","rhoCosAlpha","k_","s_","gingeryLength","gingeryIntegrate","dTheta","x_halfPi","rhosinAlpha","sinRhoCosAlpha","halfPi_RhoCosAlpha","gingery","cRho","sRho","ginzburgPolyconic","xB","yB","m2","dAlphadLambda","xB2","dxBdPhi","dyBdPhi","dmdPhi","mcosAlpha","msinAlpha","dAlphadPhi","ginzburg4Raw","ginzburg4","ginzburg5Raw","ginzburg5","ginzburg6Raw","ginzburg6","ginzburg8Raw","lambda4","ginzburg8","ginzburg9Raw","ginzburg9","square","projectSquare","location","gringortenRaw","sLambda","sPhi","a2","secPhi","drdPhi","dp2dPhi","mu","nu","zeta","g2","zetaMug","f2","df","gringortenHexadecant","gringortenHexadecantInvert","gringorten","ellipticJ","twon","ellipticF","guyouRaw","K","psi","at","y_1","guyouComplexAtan","sinhPsi","cscPhi","cotPhi2","cotLambda2","ellipticFi","ellipticJi","tn","guyouComplexDivide","guyou","hammerRaw","hammerQuarticAuthalicRaw","hammer","coefficient","hammerRetroazimuthalRaw","hammerRetroazimuthalRotation","hammerRetroazimuthal","rotate_","healpixParallel","healpixLambert","healpixRaw","H","dy1","healpix","hillRaw","L","Bt","rho0","K2","L2","omega","sinTheta","cosTheta","Bt_Bt1","C","hill","ratio","sinuMollweidePhi","sinuMollweideY","sinuMollweideRaw","sinuMollweide","homolosineRaw","homolosine","interrupted_pointEqual","interpolateLine","resampled","interrupted","lobe","interpolateSphere","bound","boggs_lobes","interrupted_boggs","homolosine_lobes","interrupted_homolosine","mollweide_lobes","interrupted_mollweide","mollweideHemispheres_lobes","mollweideHemispheres","sinuMollweide_lobes","interrupted_sinuMollweide","sinusoidal_lobes","interrupted_sinusoidal","kavrayskiy7Raw","kavrayskiy7","lagrangeRaw","lagrange","spacing","pi_sqrt2","larriveeRaw","sqrtcosPhi","sinPhi_2","sinLambda_6","cosLambda_6","f0","f1","df0dPhi","df0dLambda","df1dPhi","df1dLambda","denom","larrivee","laskowskiRaw","lambdaPhi","laskowski","littrowRaw","y2_1","littrow","loximuthalRaw","loximuthal","millerRaw","modifiedStereographicRaw","zr","zi","ar","deltar","deltai","sinc","modifiedStereographic_alaska","gs48","gs50","modifiedStereographic_miller","lee","modifiedStereographicAlaska","modifiedStereographic","modifiedStereographicGs48","modifiedStereographicGs50","modifiedStereographicMiller","modifiedStereographicLee","coefficients","sqrt6","sqrt7","mtFlatPolarParabolicRaw","mtFlatPolarParabolic","mtFlatPolarQuarticRaw","sinTheta_2","mtFlatPolarQuartic","mtFlatPolarSinusoidalRaw","mtFlatPolarSinusoidal","naturalEarthRaw","naturalEarth","nellHammerRaw","nellHammer","pattersonK1","pattersonK2","pattersonK3","pattersonK4","pattersonC1","pattersonC2","pattersonC3","pattersonC4","pattersonRaw","yc","patterson","polyconicRaw","polyconic","matrix","subtract","matrix_angle","matrix_length","multiply","polyhedral","root","face","node","recurse","parent","edges","faceEdges","shared","found","sharedEdge","polyhedral_pointEqual","hasInverse","faceInvert","inverse","faceDegrees","proj","edge","multiPoint","notPoles","inside","some","octahedron","polyhedral_octahedron","butterfly","faceProjection","faces","collignon_kx","collignonK","polyhedral_collignon","waterman","w5","xyz","waterman_cartesian","hexagon","waterman_spherical","cornerNormals","parents","normals","cosphi","src_noop","src_project","Error","projectFeature","projectFeatureCollection","projectGeometry","properties","projectGeometryCollection","sinkPoint","sinkLine","sinkPolygon","project_points","project_lines","polygons","holes","clockwise","hole","yi","pj","xj","yj","project_contains","quincuncial","projectQuincuncial","quincuncial_gringorten","peirce","quantize","digits","quantizePoint","toFixed","quantizePoints","quantizePolygon","quantizeGeometry","quantizeFeature","rectangularPolyconicRaw","E","cotPhi","rectangularPolyconic","robinson_K","robinsonRaw","i0","di","bx","by","yy","satelliteRaw","P","vertical","satelliteVerticalRaw","cosOmega","sinOmega","satellite","tilt","epsilonInverse","stitch_x0","x0e","stitch_x1","x1e","stitch_y0","y0e","stitch_y1","y1e","normalizePoint","clampPoint","clampPoints","extractFragments","fragments","pointk","xk","yk","fragmentBefore","stitchFeature","stitchGeometry","fragment","startFragment","endFragment","fragmentByStart","fragmentByEnd","stitchFragments","stitch","timesRaw","twoPoint","raw","twoPointAzimuthalRaw","cosd","twoPointAzimuthalUsa","twoPointAzimuthal","twoPointEquidistantRaw","lambdaa","lambdab","z02","tanLambda0","S","za","zb","cosza","coszb","twoPointEquidistantUsa","twoPointEquidistant","vanDerGrintenRaw","A2","G","P2","P2_A2","G_P2","Q","x2_y2","c3","m1","theta1","vanDerGrinten","vanDerGrinten2Raw","vanDerGrinten2","vanDerGrinten3Raw","vanDerGrinten3","vanDerGrinten4Raw","B2","C2","BC","B_C2","B_3C","D","D2","C_","B_C","F_","sqrtF","vanDerGrinten4","wagner4_A","wagner4_B","wagner4Raw","wagner4","wagner6Raw","wagner6","wagner7Raw","wagner7","wiechelRaw","sin1_Phi","wiechel","winkel3Raw","F","sinphi","sin_2phi","sin2phi","cos2phi","sinlambda","coslambda_2","sinlambda_2","sin2lambda_2","dxdlambda","dxdphi","dydlambda","dydphi","dlambda","dphi","topology","src_bbox","bbox","bboxPoint","bboxGeometry","arcs","feature_feature","feature_object","transformPoint","stitchedArcs","emptyIndex","flush","dp","ends","fg","unshift","gf","mesh","meshArcs","geom","geomsByArc","extract0","extract1","extract2","geoms","extractArcs","merge","mergeArcs","polygonsByArc","groups","extract","planarRingArea","group","neighbors","ki","bisect","lo","hi","mid","src_neighbors","indexesByArc","geometryType","indexes","ij","ik","splice","bb","untransform","taskList","completed","user","projectName","dueDate","tags","recentActivity","trafficData","propertiesData","citiesData","cities","visitsData","visit","queriesData","queries","TaskItem","data","es_checkbox","es_avatar","es_tag","tag","includes","tooltip","getTags","TabPane","Tabs","TaskList","prevState","tabs","defaultActiveKey","tab","CRM_TaskItem","ChartCard","isHide","chartProperties","prize","bgColor","desc","percent","handleToggle","TicketItem","statusData","getStatus","TicketList","ticket","CRM_TicketItem","COLORS","TaskByStatus","es6","dominantBaseline","dataKey","innerRadius","outerRadius","LineIndicator","Number","parseInt","wrapperStyles","maxWidth","margin","cityScale","scaleLinear","domain","BubbleMap","lib","geographies","city","population","Overview","CRM_LineIndicator","CRM_BubbleMap","Metrics","card","components_Metrics","row","col","xl","lg","md","sm","xs","top","right","left","bottom","stackId","barSize","userImageList","rating","deals","NewCustomers","GrowthCard","offset","stopColor","stopOpacity","fillOpacity","Option","Select","FormItem","Form","CurrencyCalculator","handleChange","es_form","layout","label","es_select","defaultValue","input","placeholder","es_button","auth","commonData","authUser","loading","Listing_ChartCard","span","IconWithTextCard","cardColor","CRM_TotalRevenueCard","CRM_NewCustomers","CRM_GrowthCard","Crypto_CurrencyCalculator","CRM_TaskList","CRM_TicketList","CRM_TaskByStatus","CRM_Overview"],"mappings":"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","file":"static/js/17.43739c3f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Card} from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Widget = ({title, children, styleName, cover, extra, actions}) => {\r\n\r\n  return (\r\n    <Card title={title} actions={actions} cover={cover} className={`gx-card-widget ${styleName}`} extra={extra}>\r\n      {children}\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default Widget;\r\nWidget.defaultProps = {\r\n  styleName: '',\r\n};\r\n\r\nWidget.propTypes = {\r\n  title: PropTypes.node,\r\n  extra: PropTypes.node,\r\n  cover: PropTypes.node,\r\n  actions: PropTypes.node,\r\n  children: PropTypes.node.isRequired\r\n};\r\n","import { tuple } from './type';\nexport var PresetColorTypes = tuple('pink', 'red', 'yellow', 'orange', 'cyan', 'green', 'blue', 'purple', 'geekblue', 'magenta', 'volcano', 'gold', 'lime');","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function noop() {}","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import { asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point\nx0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n}; // Arithmetic mean of Cartesian vectors.\n\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\n\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m),\n      // line weight = angle\n  v = m && -w / m; // area weight multiplier\n\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function (object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.\n\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose\";\nimport { asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","import { abs, epsilon } from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\nexport default function () {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n  return clip = {\n    stream: function stream(_stream) {\n      return cache && cacheStream === _stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = _stream);\n    },\n    extent: function extent(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}","import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { asin, atan2, cos, epsilon, pi, quarterPi, sin, tau } from \"./math\";\nvar sum = adder();\nexport default function (polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import length from \"./length\";\nvar coordinates = [null, null],\n    object = {\n  type: \"LineString\",\n  coordinates: coordinates\n};\nexport default function (a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}","import { default as polygonContains } from \"./polygonContains\";\nimport { default as distance } from \"./distance\";\nimport { epsilon, radians } from \"./math\";\nvar containsObjectType = {\n  Feature: function Feature(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function FeatureCollection(object, point) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      if (containsGeometry(features[i].geometry, point)) return true;\n    }\n\n    return false;\n  }\n};\nvar containsGeometryType = {\n  Sphere: function Sphere() {\n    return true;\n  },\n  Point: function Point(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function MultiPoint(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPoint(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  LineString: function LineString(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function MultiLineString(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsLine(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  Polygon: function Polygon(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function MultiPolygon(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPolygon(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  GeometryCollection: function GeometryCollection(object, point) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      if (containsGeometry(geometries[i], point)) return true;\n    }\n\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function (object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);\n}","import { range } from \"d3-array\";\nimport { abs, ceil, epsilon } from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function (x) {\n    return y.map(function (y) {\n      return [x, y];\n    });\n  };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function (y) {\n    return x.map(function (x) {\n      return [x, y];\n    });\n  };\n}\n\nexport default function graticule() {\n  var x1,\n      x0,\n      X1,\n      X0,\n      y1,\n      y0,\n      Y1,\n      Y0,\n      dx = 10,\n      dy = dx,\n      DX = 90,\n      DY = 360,\n      x,\n      y,\n      X,\n      Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {\n      type: \"MultiLineString\",\n      coordinates: lines()\n    };\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n      return abs(x % DX) > epsilon;\n    }).map(x)).concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n      return abs(y % DY) > epsilon;\n    }).map(y));\n  }\n\n  graticule.lines = function () {\n    return lines().map(function (coordinates) {\n      return {\n        type: \"LineString\",\n        coordinates: coordinates\n      };\n    });\n  };\n\n  graticule.outline = function () {\n    return {\n      type: \"Polygon\",\n      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n    };\n  };\n\n  graticule.extent = function (_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function (_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function (_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function (_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function (_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function (_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function (_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule.extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]]).extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\nexport function graticule10() {\n  return graticule()();\n}","import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","export default function (x) {\n  return x;\n}","import noop from \"../noop\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { sqrt } from \"../math\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    return this._circle = circle(_), this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian\";\nimport { circleStream } from \"../circle\";\nimport { abs, cos, epsilon, pi, sqrt } from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\nexport default function (radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n  if (clip != null) projection.clipExtent(clip);\n  return projection.scale(k * 150).translate([x, y]);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}","import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport { clipExtent } from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { degrees, radians, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  dx,\n      dy,\n      lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      projectRotate,\n      // rotate\n  theta = null,\n      preclip = clipAntimeridian,\n      // clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // clip extent\n  delta2 = 0.5,\n      projectResample = resample(projectTransform, delta2),\n      // precision\n  cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { degrees, pi, radians } from \"../math\";\nimport { projectionMutator } from \"./index\";\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function (_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}","import { abs, asin, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { cylindricalEqualAreaRaw } from \"./cylindricalEqualArea\";\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0),\n      n = (sy0 + sin(y1)) / 2; // Are the parallels symmetrical around the Equator?\n\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n  var c = 1 + sy0 * (2 * n - sy0),\n      r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function (x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);\n}","import { asin, cos, sin } from \"../math\";\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}","import conicEqualArea from \"./conicEqualArea\";\nexport default function () {\n  return conicEqualArea().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);\n}","import { epsilon } from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport { fitExtent, fitSize } from \"./fit\"; // The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\n\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function point(x, y) {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].point(x, y);\n      }\n    },\n    sphere: function sphere() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].sphere();\n      }\n    },\n    lineStart: function lineStart() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].lineStart();\n      }\n    },\n    lineEnd: function lineEnd() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].lineEnd();\n      }\n    },\n    polygonStart: function polygonStart() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].polygonStart();\n      }\n    },\n    polygonEnd: function polygonEnd() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].polygonEnd();\n      }\n    }\n  };\n} // A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\n\nexport default function () {\n  var cache,\n      cacheStream,\n      lower48 = albers(),\n      lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),\n      alaskaPoint,\n      // EPSG:3338\n  hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),\n      hawaiiPoint,\n      // ESRI:102007\n  _point,\n      pointStream = {\n    point: function point(x, y) {\n      _point = [x, y];\n    }\n  };\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    return _point = null, (lower48Point.point(x, y), _point) || (alaskaPoint.point(x, y), _point) || (hawaiiPoint.point(x, y), _point);\n  }\n\n  albersUsa.invert = function (coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function (_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function (_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function (_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(),\n        x = +_[0],\n        y = +_[1];\n    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);\n    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]]).stream(pointStream);\n    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]]).stream(pointStream);\n    return reset();\n  };\n\n  albersUsa.fitExtent = function (extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function (size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}","import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import { abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { mercatorRaw } from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) {\n      if (y < -halfPi + epsilon) y = -halfPi + epsilon;\n    } else {\n      if (y > halfPi - epsilon) y = halfPi - epsilon;\n    }\n\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function (x, y) {\n    var fy = f - y,\n        r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicConformalRaw).scale(109.5).parallels([30, 30]);\n}","import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { abs, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { equirectangularRaw } from \"./equirectangular\";\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y,\n        nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function (x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import { clipExtent as _clipExtent } from \"../clip/extent\";\nimport identity from \"../identity\";\nimport { transformer } from \"../transform\";\nimport { fitExtent as _fitExtent, fitSize as _fitSize } from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function point(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function () {\n  var k = 1,\n      tx = 0,\n      ty = 0,\n      sx = 1,\n      sy = 1,\n      transform = identity,\n      // scale, translate and reflect\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      clip = identity,\n      // clip extent\n  cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function stream(_stream) {\n      return cache && cacheStream === _stream ? cache : cache = transform(clip(cacheStream = _stream));\n    },\n    clipExtent: function clipExtent(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : _clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function scale(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function translate(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function reflectX(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function reflectY(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function fitExtent(extent, object) {\n      return _fitExtent(projection, extent, object);\n    },\n    fitSize: function fitSize(size, object) {\n      return _fitSize(projection, size, object);\n    }\n  };\n}","import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","export { default as geoArea } from \"./src/area\";\nexport { default as geoBounds } from \"./src/bounds\";\nexport { default as geoCentroid } from \"./src/centroid\";\nexport { default as geoCircle } from \"./src/circle\";\nexport { default as geoClipExtent } from \"./src/clip/extent\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\n\nexport { default as geoContains } from \"./src/contains\";\nexport { default as geoDistance } from \"./src/distance\";\nexport { default as geoGraticule, graticule10 as geoGraticule10 } from \"./src/graticule\";\nexport { default as geoInterpolate } from \"./src/interpolate\";\nexport { default as geoLength } from \"./src/length\";\nexport { default as geoPath } from \"./src/path/index\";\nexport { default as geoAlbers } from \"./src/projection/albers\";\nexport { default as geoAlbersUsa } from \"./src/projection/albersUsa\";\nexport { default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw } from \"./src/projection/azimuthalEqualArea\";\nexport { default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw } from \"./src/projection/azimuthalEquidistant\";\nexport { default as geoConicConformal, conicConformalRaw as geoConicConformalRaw } from \"./src/projection/conicConformal\";\nexport { default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw } from \"./src/projection/conicEqualArea\";\nexport { default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw } from \"./src/projection/conicEquidistant\";\nexport { default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw } from \"./src/projection/equirectangular\";\nexport { default as geoGnomonic, gnomonicRaw as geoGnomonicRaw } from \"./src/projection/gnomonic\";\nexport { default as geoIdentity } from \"./src/projection/identity\";\nexport { default as geoProjection, projectionMutator as geoProjectionMutator } from \"./src/projection/index\";\nexport { default as geoMercator, mercatorRaw as geoMercatorRaw } from \"./src/projection/mercator\";\nexport { default as geoOrthographic, orthographicRaw as geoOrthographicRaw } from \"./src/projection/orthographic\";\nexport { default as geoStereographic, stereographicRaw as geoStereographicRaw } from \"./src/projection/stereographic\";\nexport { default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw } from \"./src/projection/transverseMercator\";\nexport { default as geoRotation } from \"./src/rotation\";\nexport { default as geoStream } from \"./src/stream\";\nexport { default as geoTransform } from \"./src/transform\";","import React from \"react\";\r\n\r\nexport const taskList = [\r\n  {\r\n    id: 1,\r\n    title: 'Make the home page dynamic',\r\n    completed: false,\r\n    user: {\r\n      projectName: 'Chatbull',\r\n      avatar: 'https://via.placeholder.com/150x150'\r\n    },\r\n    dueDate: 'Tomorrow',\r\n    tags: [1, 2]\r\n  }, {\r\n    id: 2,\r\n    title: 'Design wireframes based on the requirements',\r\n    completed: false,\r\n    user: {\r\n      projectName: 'Wieldy',\r\n      avatar: 'https://via.placeholder.com/150x150'\r\n    },\r\n    dueDate: 'Today',\r\n    tags: [2, 4]\r\n  }, {\r\n    id: 3,\r\n    title: 'Need to define microinteraction on click of signin button',\r\n    completed: false,\r\n    user: {\r\n      projectName: 'Jumbo',\r\n      avatar: 'https://via.placeholder.com/150x150'\r\n    },\r\n    dueDate: '21 Jul',\r\n    tags: [1, 2, 3]\r\n  }, {\r\n    id: 4,\r\n    title: 'New page need to be designed for property listing',\r\n    completed: false,\r\n    user: {\r\n      projectName: 'Wieldy',\r\n      avatar: 'https://via.placeholder.com/150x150'\r\n    },\r\n    dueDate: '23 Jul',\r\n    tags: [2, 3, 4]\r\n  }, {\r\n    id: 5,\r\n    title: 'Design wireframes based on the requirements',\r\n    completed: false,\r\n    user: {\r\n      projectName: 'Wieldy',\r\n      avatar: 'https://via.placeholder.com/150x150'\r\n    },\r\n    dueDate: '1 Aug',\r\n    tags: [2, 4]\r\n  }];\r\n\r\nexport const recentActivity = [\r\n  {\r\n    id: 1,\r\n    day: 'Today',\r\n    tasks: [\r\n      {\r\n        id: 1,\r\n        name: 'Mila Alba',\r\n        title: [<span className=\"gx-link\" key={1}>Mila Alba</span>, ' left a 5 star review on ',\r\n          <span className=\"gx-link\" key={2}>Albama’s House</span>],\r\n        avatar: 'https://via.placeholder.com/150x150',\r\n        imageList: [],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Bob Builder',\r\n        title: ['Callback request from ', <span className=\"gx-link\" key={3}>Bob Builder</span>, ' for the property ',\r\n          <span className=\"gx-link\" key={4}>Dimitri House</span>],\r\n        avatar: 'https://via.placeholder.com/150x150',\r\n        imageList: [],\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Tom Moody',\r\n        title: ['Congratulations to ', <span className=\"gx-link\" key={5}>Tom Moody</span>,\r\n          ' for joining 10+ club '],\r\n        avatar: 'https://via.placeholder.com/150x150',\r\n        imageList: [],\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'Norman Dolphi',\r\n        title: ['Norman Dolphi is looking for a house in New Jersy, USA'],\r\n        avatar: '',\r\n        imageList: [],\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    day: 'Yesterday',\r\n    tasks: [\r\n      {\r\n        id: 5,\r\n        name: 'Kily Johns',\r\n        title: ['Agent ',\r\n          <span className=\"gx-link\" key={7}>Kily Johns</span>, ' has added 7 new photos to the property ',\r\n          <span key={6} className=\"gx-link\">Albama’s House</span>],\r\n        avatar: '',\r\n        imageList: ['https://via.placeholder.com/150x150', 'https://via.placeholder.com/150x150', 'https://via.placeholder.com/150x150', 'https://via.placeholder.com/150x150', 'https://via.placeholder.com/150x150', 'https://via.placeholder.com/150x150', 'https://via.placeholder.com/150x150',],\r\n      },\r\n      {\r\n        id: 6,\r\n        name: 'Tom Moody',\r\n        title: ['Welcome to a new agent ', <span className=\"gx-link\" key={8}>Tom Moody in the Company</span>],\r\n        avatar: 'https://via.placeholder.com/150x150',\r\n        imageList: [],\r\n      },\r\n      {\r\n        id: 7,\r\n        name: 'Oliver Shorter',\r\n        title: [<span className=\"gx-link\" key={9}>Oliver Shorter</span>, ' is looking for an office space in ',\r\n          <span className=\"gx-link\" key={10}>Colorado, USA</span>],\r\n        avatar: 'https://via.placeholder.com/150x150',\r\n        imageList: [],\r\n      }, {\r\n        id: 8,\r\n        name: 'Mila Alba',\r\n        title: [<span className=\"gx-link\" key={11}>Mila Alba</span>, ' left a 5 star review on ',\r\n          <span className=\"gx-link\" key={12}>Albama’s House</span>],\r\n        avatar: 'https://via.placeholder.com/150x150',\r\n        imageList: [],\r\n      },\r\n    ]\r\n  }];\r\n\r\nexport const ticketList = [\r\n  {\r\n    id: 1,\r\n    avatar: 'https://via.placeholder.com/150x150',\r\n    title: 'Need a quick support on setting',\r\n    description: [<span className=\"gx-link\" key={13}>Joy Parish</span>, \"  created ticket 15 mins ago\"],\r\n    status: 2\r\n  }, {\r\n    id: 2,\r\n    avatar: 'https://via.placeholder.com/150x150',\r\n    title: 'Pre-sale query about the product',\r\n    description: [<span key={14} className=\"gx-link\">You</span>, \" replied 2 days ago\"],\r\n    status: 1\r\n  }, {\r\n    id: 3,\r\n    avatar: 'https://via.placeholder.com/150x150',\r\n    title: 'Regarding customization service',\r\n    description: [<span key={15} className=\"gx-link\">Joy Parish</span>, \" replied 2 days ago\"],\r\n    status: 4\r\n  }\r\n];\r\nexport const taskStatus = [\r\n  {\r\n    id: 1,\r\n    title: 'Critical',\r\n    color: 'red'\r\n  }, {\r\n    id: 2,\r\n    title: 'High',\r\n    color: 'orange'\r\n  }, {\r\n    id: 3,\r\n    title: 'Medium',\r\n    color: 'green'\r\n  }, {\r\n    id: 4,\r\n    title: 'Low',\r\n    color: 'light-grey'\r\n  }\r\n];\r\nexport const taskTags = [\r\n  {\r\n    id: 1,\r\n    name: 'HTML',\r\n    color: 'red',\r\n  }, {\r\n    id: 2,\r\n    name: 'React',\r\n    color: 'green',\r\n  }, {\r\n    id: 3,\r\n    name: 'JavaScript',\r\n    color: 'blue',\r\n  }, {\r\n    id: 4,\r\n    name: 'CSS',\r\n    color: 'orange',\r\n  }];\r\nexport const siteVisit = [\r\n  {name: '1', thisYear: 0, lastYear: 0},\r\n  {name: '2', thisYear: 0, lastYear: 1},\r\n  {name: '3', thisYear: 5, lastYear: 2},\r\n  {name: '4', thisYear: 10, lastYear: 0},\r\n  {name: '5', thisYear: 4, lastYear: 1},\r\n  {name: '6', thisYear: 16, lastYear: 3},\r\n  {name: '7', thisYear: 5, lastYear: 1},\r\n  {name: '8', thisYear: 11, lastYear: 5},\r\n  {name: '9', thisYear: 6, lastYear: 2},\r\n  {name: '10', thisYear: 11, lastYear: 3},\r\n  {name: '11', thisYear: 30, lastYear: 2},\r\n  {name: '12', thisYear: 10, lastYear: 1},\r\n  {name: '13', thisYear: 13, lastYear: 0},\r\n  {name: '14', thisYear: 4, lastYear: 2},\r\n  {name: '15', thisYear: 3, lastYear: 8},\r\n  {name: '16', thisYear: 1, lastYear: 0},\r\n  {name: '17', thisYear: 0, lastYear: 0},\r\n];\r\n\r\nexport const totalSaleData = [\r\n  {name: 'JAN', price: 600},\r\n  {name: 'FEB', price: 3398},\r\n  {name: 'MAR', price: 1200},\r\n  {name: 'APR', price: 4908},\r\n  {name: 'MAY', price: 2908},\r\n];\r\n\r\nexport const totalRevenueData = [\r\n  {name: 'JAN', thisYear: 60},\r\n  {name: 'FEB', thisYear: 90},\r\n  {name: 'MAR', thisYear: 50},\r\n  {name: 'APR', thisYear: 75},\r\n  {name: 'MAY', thisYear: 60},\r\n  {name: 'JUN', thisYear: 85},\r\n  {name: 'JUL', thisYear: 20},\r\n  {name: 'AUG', thisYear: 75},\r\n  {name: 'SEP', thisYear: 60},\r\n  {name: 'OCT', thisYear: 40},\r\n  {name: 'NOV', thisYear: 75},\r\n  {name: 'DEC', thisYear: 25},\r\n];\r\n\r\nexport const trafficData = [\r\n  {name: 'Page A', value: 0},\r\n  {name: 'Page B', value: 2000},\r\n  {name: 'Page C', value: 600},\r\n  {name: 'Page D', value: 4400},\r\n  {name: 'Page D', value: 900},\r\n  {name: 'Page H', value: 4860},\r\n];\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateResizeFactor = calculateResizeFactor;\nexports.calculateMousePosition = calculateMousePosition;\nexports.isChildOfType = isChildOfType;\nexports.createNewChildren = createNewChildren;\nexports.roundPath = roundPath;\nexports.createConnectorPath = createConnectorPath;\nexports.createTextAnchor = createTextAnchor;\nexports.computeBackdrop = computeBackdrop;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction calculateResizeFactor(actualDimension, baseDimension) {\n  if (actualDimension === 0) return 1;\n  return 1 / 100 * (100 / actualDimension * baseDimension);\n}\n\nfunction calculateMousePosition(direction, projection, props, zoom, resizeFactor) {\n  var center = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : props.center;\n  var width = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : props.width;\n  var height = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : props.height;\n  var reference = {\n    x: 0,\n    y: 1\n  };\n  var canRotate = !!projection.rotate;\n  var reverseRotation = !!canRotate ? projection.rotate().map(function (item) {\n    return -item;\n  }) : false;\n  var point = !!reverseRotation ? projection.rotate(reverseRotation)([-center[0], -center[1]]) : projection([center[0], center[1]]);\n  var returner = point ? (point[reference[direction]] - (reference[direction] === 0 ? width : height) / 2) * zoom * (1 / resizeFactor) : 0;\n  if (canRotate) projection.rotate([-reverseRotation[0], -reverseRotation[1], -reverseRotation[2]]);\n  return !!reverseRotation ? returner : -returner;\n}\n\nfunction isChildOfType(child, expectedTypes) {\n  return expectedTypes.indexOf(child.props.componentIdentifier) !== -1;\n}\n\nfunction createNewChildren(children, props) {\n  if (!children) return;\n\n  if (!children.length) {\n    return isChildOfType(children, [\"Geographies\"]) ? _react2.default.cloneElement(children, {\n      projection: props.projection\n    }) : isChildOfType(children, [\"Group\", \"Markers\", \"Lines\", \"Annotations\", \"Annotation\", \"Graticule\"]) ? _react2.default.cloneElement(children, {\n      projection: props.projection,\n      zoom: props.zoom,\n      width: props.width,\n      height: props.height,\n      groupName: props.groupName,\n      itemName: props.itemName\n    }) : children;\n  } else {\n    return children.map(function (child, i) {\n      if (!child) return;\n      return isChildOfType(child, [\"Geographies\"]) ? _react2.default.cloneElement(child, {\n        key: \"zoomable-child-\" + i,\n        projection: props.projection\n      }) : isChildOfType(child, [\"Group\", \"Markers\", \"Lines\", \"Annotations\", \"Annotation\", \"Graticule\"]) ? _react2.default.cloneElement(child, {\n        key: \"zoomable-child-\" + i,\n        projection: props.projection,\n        zoom: props.zoom,\n        width: props.width,\n        height: props.height,\n        groupName: props.groupName,\n        itemName: props.itemName\n      }) : child;\n    });\n  }\n}\n\nfunction roundPath(path, precision) {\n  if (!path) return;\n  var query = /[\\d\\.-][\\d\\.e-]*/g;\n  return path.replace(query, function (n) {\n    return Math.round(n * (1 / precision)) / (1 / precision);\n  });\n}\n\nfunction createConnectorPath(connectorType, endPoint, curve) {\n  var e0 = endPoint[0];\n  var e1 = endPoint[1];\n  return \"M0,0 Q \" + (curve + 1) / 2 * e0 + \",\" + (e1 - (curve + 1) / 2 * e1) + \" \" + e0 + \",\" + e1;\n}\n\nfunction createTextAnchor(dx) {\n  if (dx > 0) return \"start\";else if (dx < 0) return \"end\";else return \"middle\";\n}\n\nfunction computeBackdrop(projection, backdrop) {\n  var canRotate = projection.rotate;\n  var originalRotation = canRotate ? projection.rotate() : null;\n  var tl = canRotate ? projection.rotate([0, 0, 0])([backdrop.x[0], backdrop.y[0]]) : projection([backdrop.x[0], backdrop.y[0]]);\n  var br = canRotate ? projection.rotate([0, 0, 0])([backdrop.x[1], backdrop.y[1]]) : projection([backdrop.x[1], backdrop.y[1]]);\n  var x = tl ? tl[0] : 0;\n  var x0 = br ? br[0] : 0;\n  var y = tl ? tl[1] : 0;\n  var y0 = br ? br[1] : 0;\n  var width = x0 - x;\n  var height = y0 - y;\n  if (originalRotation) projection.rotate(originalRotation);\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MapGroup = function (_Component) {\n  _inherits(MapGroup, _Component);\n\n  function MapGroup() {\n    _classCallCheck(this, MapGroup);\n\n    return _possibleConstructorReturn(this, (MapGroup.__proto__ || Object.getPrototypeOf(MapGroup)).apply(this, arguments));\n  }\n\n  _createClass(MapGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          projection = _props.projection,\n          style = _props.style,\n          zoom = _props.zoom,\n          width = _props.width,\n          height = _props.height,\n          groupName = _props.groupName,\n          itemName = _props.itemName;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-\" + groupName,\n        style: style\n      }, !children ? null : children.length === undefined ? _react2.default.cloneElement(children, {\n        projection: projection,\n        zoom: zoom,\n        width: width,\n        height: height\n      }) : children.map(function (child, i) {\n        return !child ? null : _react2.default.cloneElement(child, {\n          key: child.key || itemName + \"-\" + i,\n          projection: projection,\n          zoom: zoom,\n          width: width,\n          height: height\n        });\n      }));\n    }\n  }]);\n\n  return MapGroup;\n}(_react.Component);\n\nMapGroup.defaultProps = {\n  componentIdentifier: \"Group\",\n  groupName: \"group\",\n  itemName: \"group-item\"\n};\nexports.default = MapGroup;","import React from \"react\";\r\n\r\nimport Widget from \"components/Widget/index\";\r\nimport {connect} from \"react-redux\";\r\nimport {THEME_TYPE_DARK} from \"../../constants/ThemeSetting\";\r\n\r\nconst IconWithTextCard = (props) => {\r\n  const {icon, title, subTitle} = props;\r\n  let {iconColor} = props;\r\n  if (props.themeType === THEME_TYPE_DARK) {\r\n    iconColor = \"white\";\r\n  }\r\n\r\n  return (\r\n    <Widget>\r\n      <div className=\"gx-media gx-align-items-center gx-flex-nowrap\">\r\n        <div className=\"gx-mr-lg-4 gx-mr-3\">\r\n          <i className={`icon icon-${icon} gx-fs-xlxl gx-text-${iconColor} gx-d-flex`}\r\n             style={{fontSize: 45}}/>\r\n        </div>\r\n        <div className=\"gx-media-body\">\r\n          <h1 className=\"gx-fs-xxxl gx-font-weight-medium gx-mb-1\">{title}</h1>\r\n          <p className=\"gx-text-grey gx-mb-0\">{subTitle}</p>\r\n        </div>\r\n      </div>\r\n    </Widget>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({settings}) => {\r\n  const {themeType} = settings;\r\n  return {themeType}\r\n};\r\nexport default connect(mapStateToProps, null)(IconWithTextCard);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst WidgetHeader = ({title, extra, styleName}) => {\r\n\r\n  return (\r\n    <h2 className={`gx-entry-title ${styleName}`}>\r\n      {title}\r\n      <span className=\"gx-text-primary gx-fs-md gx-pointer gx-ml-auto gx-d-none gx-d-sm-block\">{extra}</span>\r\n    </h2>\r\n  )\r\n};\r\n\r\nWidgetHeader.defaultProps = {\r\n  styleName: '',\r\n};\r\n\r\nWidgetHeader.propTypes = {\r\n  title: PropTypes.node,\r\n  extra: PropTypes.node,\r\n};\r\n\r\nexport default WidgetHeader;\r\n","import React from \"react\";\r\nimport {Avatar} from \"antd\";\r\nimport Auxiliary from \"util/Auxiliary\";\r\n\r\nconst ActivityItem = ({task}) => {\r\n\r\n  return (\r\n    <Auxiliary>\r\n      <p className=\"gx-mb-0\">{task.title}</p>\r\n      {task.imageList.length > 0 ?\r\n        <ul className=\"gx-list-inline gx-mb-3 gx-mt-2\">\r\n          {task.imageList.map((image, index) => {\r\n              if (index === 2) {\r\n                return (\r\n                  <li className=\"gx-mb-1\" key={index}>\r\n                    <span className=\"gx-link gx-img-more\"> +{task.imageList.length - 2} More</span>\r\n                  </li>\r\n                );\r\n              } else if (index > 2) {\r\n                return null;\r\n              } else {\r\n                return (\r\n                  <li className=\"gx-mb-1\" key={index}>\r\n                    <Avatar shape=\"square\" className=\"gx-size-40\" src={image}/>\r\n                  </li>\r\n                )\r\n              }\r\n            }\r\n          )}\r\n        </ul> : null}\r\n\r\n    </Auxiliary>\r\n  );\r\n};\r\n\r\nexport default ActivityItem;\r\n","import React from \"react\";\r\nimport {Avatar, Timeline} from \"antd\";\r\nimport WidgetHeader from \"components/WidgetHeader/index\";\r\nimport ActivityItem from \"./ActivityItem\";\r\n\r\nconst TimeLineItem = Timeline.Item;\r\n\r\nfunction getName(task, shape) {\r\n  if (task.avatar === '') {\r\n    let nameSplit = task.name.split(\" \")\r\n    if (task.name.split(\" \").length === 1) {\r\n      const initials = nameSplit[0].charAt(0).toUpperCase();\r\n      return <Avatar shape={shape} className=\"gx-size-40 gx-bg-primary\">{initials}</Avatar>\r\n    } else {\r\n      const initials = nameSplit[0].charAt(0).toUpperCase() + nameSplit[1].charAt(0).toUpperCase();\r\n      return <Avatar shape={shape} className=\"gx-size-40 gx-bg-cyan\">{initials}</Avatar>\r\n    }\r\n  } else {\r\n    return <Avatar shape={shape} className=\"gx-size-40\" src={task.avatar}/>;\r\n  }\r\n}\r\n\r\nclass RecentActivity extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 0,\r\n      height: 0,\r\n      recentList: [],\r\n      shape: '',\r\n      limit: 3\r\n    };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      height: window.innerHeight + 'px',\r\n      width: window.innerWidth + 'px',\r\n      recentList: this.props.recentList,\r\n      shape: this.props.shape\r\n    });\r\n    if (window.innerWidth < 575) {\r\n      this.setState({limit: 1});\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    this.setState({width: window.innerWidth, height: window.innerHeight});\r\n  }\r\n\r\n  onLoadMore() {\r\n    this.setState((previousState) => ({\r\n      limit: previousState.limit + 1,\r\n    }));\r\n  }\r\n\r\n\r\n  render() {\r\n    const {recentList, shape, limit} = this.state;\r\n    return (\r\n      <div className=\"gx-entry-sec\">\r\n        <WidgetHeader title=\"Recent Activities\"/>\r\n        {recentList.slice(0, limit).map((activity, index) =>\r\n          <div className=\"gx-timeline-info\" key={\"activity\" + index}>\r\n            <h4 className=\"gx-timeline-info-day\">{activity.day}</h4>\r\n            <Timeline>\r\n              {activity.tasks.map((task, index) => {\r\n\r\n                return <TimeLineItem key={\"timeline\" + index} mode=\"alternate\" dot={\r\n                  getName(task, shape)\r\n                }>\r\n                  <ActivityItem task={task}/>\r\n                </TimeLineItem>\r\n              })}\r\n            </Timeline>\r\n          </div>)}\r\n        <span className=\"gx-link gx-btn-link\" onClick={this.onLoadMore.bind(this)}>Load More</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecentActivity;\r\n","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar CheckableTag =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckableTag, _React$Component);\n\n  function CheckableTag() {\n    var _this;\n\n    _classCallCheck(this, CheckableTag);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckableTag).apply(this, arguments));\n\n    _this.handleClick = function () {\n      var _this$props = _this.props,\n          checked = _this$props.checked,\n          onChange = _this$props.onChange;\n\n      if (onChange) {\n        onChange(!checked);\n      }\n    };\n\n    _this.renderCheckableTag = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          className = _a.className,\n          checked = _a.checked,\n          restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\"]);\n\n      var prefixCls = getPrefixCls('tag', customizePrefixCls);\n      var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable-checked\"), checked), _classNames), className);\n      delete restProps.onChange; // TypeScript cannot check delete now.\n\n      return React.createElement(\"div\", _extends({}, restProps, {\n        className: cls,\n        onClick: _this.handleClick\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckableTag, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderCheckableTag);\n    }\n  }]);\n\n  return CheckableTag;\n}(React.Component);\n\nexport { CheckableTag as default };","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Icon from '../icon';\nimport CheckableTag from './CheckableTag';\nimport { ConfigConsumer } from '../config-provider';\nimport { PresetColorTypes } from '../_util/colors';\nimport warning from '../_util/warning';\nimport Wave from '../_util/wave';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\n\nvar Tag =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tag, _React$Component);\n\n  function Tag(props) {\n    var _this;\n\n    _classCallCheck(this, Tag);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tag).call(this, props));\n    _this.state = {\n      visible: true\n    };\n\n    _this.handleIconClick = function (e) {\n      _this.setVisible(false, e);\n    };\n\n    _this.renderTag = function (configProps) {\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          children = _a.children,\n          otherProps = __rest(_a, [\"prefixCls\", \"children\"]);\n\n      var isNeedWave = 'onClick' in otherProps || children && children.type === 'a';\n      var divProps = omit(otherProps, ['onClose', 'afterClose', 'color', 'visible', 'closable']);\n      return isNeedWave ? React.createElement(Wave, null, React.createElement(\"div\", _extends({}, divProps, {\n        className: _this.getTagClassName(configProps),\n        style: _this.getTagStyle()\n      }), children, _this.renderCloseIcon())) : React.createElement(\"div\", _extends({}, divProps, {\n        className: _this.getTagClassName(configProps),\n        style: _this.getTagStyle()\n      }), children, _this.renderCloseIcon());\n    };\n\n    warning(!('afterClose' in props), 'Tag', \"'afterClose' will be deprecated, please use 'onClose', we will remove this in the next version.\");\n    return _this;\n  }\n\n  _createClass(Tag, [{\n    key: \"setVisible\",\n    value: function setVisible(visible, e) {\n      var _this$props = this.props,\n          onClose = _this$props.onClose,\n          afterClose = _this$props.afterClose;\n\n      if (onClose) {\n        onClose(e);\n      }\n\n      if (afterClose && !onClose) {\n        // next version remove.\n        afterClose();\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      if (!('visible' in this.props)) {\n        this.setState({\n          visible: visible\n        });\n      }\n    }\n  }, {\n    key: \"isPresetColor\",\n    value: function isPresetColor(color) {\n      if (!color) {\n        return false;\n      }\n\n      return PresetColorRegex.test(color);\n    }\n  }, {\n    key: \"getTagStyle\",\n    value: function getTagStyle() {\n      var _this$props2 = this.props,\n          color = _this$props2.color,\n          style = _this$props2.style;\n      var isPresetColor = this.isPresetColor(color);\n      return _extends({\n        backgroundColor: color && !isPresetColor ? color : undefined\n      }, style);\n    }\n  }, {\n    key: \"getTagClassName\",\n    value: function getTagClassName(_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props3 = this.props,\n          customizePrefixCls = _this$props3.prefixCls,\n          className = _this$props3.className,\n          color = _this$props3.color;\n      var visible = this.state.visible;\n      var isPresetColor = this.isPresetColor(color);\n      var prefixCls = getPrefixCls('tag', customizePrefixCls);\n      return classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(color), isPresetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-color\"), color && !isPresetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-hidden\"), !visible), _classNames), className);\n    }\n  }, {\n    key: \"renderCloseIcon\",\n    value: function renderCloseIcon() {\n      var closable = this.props.closable;\n      return closable ? React.createElement(Icon, {\n        type: \"close\",\n        onClick: this.handleIconClick\n      }) : null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderTag);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('visible' in nextProps) {\n        return {\n          visible: nextProps.visible\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Tag;\n}(React.Component);\n\nTag.CheckableTag = CheckableTag;\nTag.defaultProps = {\n  closable: false\n};\npolyfill(Tag);\nexport default Tag;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  scale: 160,\n  xOffset: 0,\n  yOffset: 0,\n  rotation: [0, 0, 0],\n  precision: 0.1\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ComposableMap = require(\"./ComposableMap\");\n\nObject.defineProperty(exports, \"ComposableMap\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ComposableMap).default;\n  }\n});\n\nvar _ZoomableGroup = require(\"./ZoomableGroup\");\n\nObject.defineProperty(exports, \"ZoomableGroup\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ZoomableGroup).default;\n  }\n});\n\nvar _ZoomableGlobe = require(\"./ZoomableGlobe\");\n\nObject.defineProperty(exports, \"ZoomableGlobe\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ZoomableGlobe).default;\n  }\n});\n\nvar _Geographies = require(\"./Geographies\");\n\nObject.defineProperty(exports, \"Geographies\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Geographies).default;\n  }\n});\n\nvar _Geography = require(\"./Geography\");\n\nObject.defineProperty(exports, \"Geography\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Geography).default;\n  }\n});\n\nvar _Marker = require(\"./Marker\");\n\nObject.defineProperty(exports, \"Marker\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Marker).default;\n  }\n});\n\nvar _Markers = require(\"./Markers\");\n\nObject.defineProperty(exports, \"Markers\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Markers).default;\n  }\n});\n\nvar _Line = require(\"./Line\");\n\nObject.defineProperty(exports, \"Line\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Line).default;\n  }\n});\n\nvar _Lines = require(\"./Lines\");\n\nObject.defineProperty(exports, \"Lines\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Lines).default;\n  }\n});\n\nvar _MapGroup = require(\"./MapGroup\");\n\nObject.defineProperty(exports, \"MapGroup\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MapGroup).default;\n  }\n});\n\nvar _Annotation = require(\"./Annotation\");\n\nObject.defineProperty(exports, \"Annotation\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Annotation).default;\n  }\n});\n\nvar _Annotations = require(\"./Annotations\");\n\nObject.defineProperty(exports, \"Annotations\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Annotations).default;\n  }\n});\n\nvar _Graticule = require(\"./Graticule\");\n\nObject.defineProperty(exports, \"Graticule\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Graticule).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _projections = require(\"./projections\");\n\nvar _projections2 = _interopRequireDefault(_projections);\n\nvar _projectionConfig = require(\"./projectionConfig\");\n\nvar _projectionConfig2 = _interopRequireDefault(_projectionConfig);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComposableMap = function (_Component) {\n  _inherits(ComposableMap, _Component);\n\n  function ComposableMap() {\n    _classCallCheck(this, ComposableMap);\n\n    var _this = _possibleConstructorReturn(this, (ComposableMap.__proto__ || Object.getPrototypeOf(ComposableMap)).call(this));\n\n    _this.projection = _this.projection.bind(_this);\n    return _this;\n  }\n\n  _createClass(ComposableMap, [{\n    key: \"projection\",\n    value: function projection() {\n      var _props = this.props,\n          projection = _props.projection,\n          projectionConfig = _props.projectionConfig,\n          width = _props.width,\n          height = _props.height;\n      return typeof projection !== \"function\" ? (0, _projections2.default)(width, height, projectionConfig, projection) : projection(width, height, projectionConfig);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height,\n          style = _props2.style,\n          className = _props2.className,\n          showCenter = _props2.showCenter,\n          children = _props2.children,\n          aspectRatio = _props2.aspectRatio,\n          viewBox = _props2.viewBox,\n          defs = _props2.defs;\n      return _react2.default.createElement(\"svg\", {\n        width: width,\n        height: height,\n        viewBox: viewBox ? viewBox : \"0 0 \" + width + \" \" + height,\n        className: \"rsm-svg \" + (className || ''),\n        style: style,\n        preserveAspectRatio: aspectRatio\n      }, defs && _react2.default.createElement(\"defs\", null, defs), _react2.default.cloneElement(this.props.children, {\n        projection: this.projection(),\n        width: width,\n        height: height\n      }), showCenter && _react2.default.createElement(\"g\", null, _react2.default.createElement(\"rect\", {\n        x: width / 2 - 0.5,\n        y: 0,\n        width: 1,\n        height: height,\n        fill: \"#e91e63\"\n      }), _react2.default.createElement(\"rect\", {\n        x: 0,\n        y: height / 2 - 0.5,\n        width: width,\n        height: 1,\n        fill: \"#e91e63\"\n      })));\n    }\n  }]);\n\n  return ComposableMap;\n}(_react.Component);\n\nComposableMap.defaultProps = {\n  width: 800,\n  height: 450,\n  projection: \"times\",\n  projectionConfig: _projectionConfig2.default,\n  aspectRatio: \"xMidYMid\",\n  viewBox: null\n};\nexports.default = ComposableMap;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (width, height, config, projectionName) {\n  var scale = config.scale || _projectionConfig2.default.scale;\n  var xOffset = config.xOffset || _projectionConfig2.default.xOffset;\n  var yOffset = config.yOffset || _projectionConfig2.default.yOffset;\n  var rotation = config.rotation || _projectionConfig2.default.rotation;\n  var precision = config.precision || _projectionConfig2.default.precision;\n  var baseProjection = projectionReference[projectionName]().scale(scale).translate([xOffset + width / 2, yOffset + height / 2]).precision(precision);\n  return projectionName === \"albersUsa\" ? baseProjection : projectionName === \"orthographic\" ? baseProjection.rotate(rotation).clipAngle(90) : baseProjection.rotate(rotation);\n};\n\nvar _d3GeoProjection = require(\"d3-geo-projection\");\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _projectionConfig = require(\"./projectionConfig\");\n\nvar _projectionConfig2 = _interopRequireDefault(_projectionConfig);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar projectionReference = {\n  mercator: _d3Geo.geoMercator,\n  miller: _d3GeoProjection.geoMiller,\n  times: _d3GeoProjection.geoTimes,\n  robinson: _d3GeoProjection.geoRobinson,\n  winkel3: _d3GeoProjection.geoWinkel3,\n  eckert4: _d3GeoProjection.geoEckert4,\n  albersUsa: _d3Geo.geoAlbersUsa,\n  orthographic: _d3Geo.geoOrthographic\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ZoomableGroup = function (_Component) {\n  _inherits(ZoomableGroup, _Component);\n\n  function ZoomableGroup(props) {\n    _classCallCheck(this, ZoomableGroup);\n\n    var _this = _possibleConstructorReturn(this, (ZoomableGroup.__proto__ || Object.getPrototypeOf(ZoomableGroup)).call(this, props));\n\n    var backdrop = (0, _utils.computeBackdrop)(props.projection, props.backdrop);\n    _this.state = {\n      mouseX: (0, _utils.calculateMousePosition)(\"x\", props.projection, props, props.zoom, 1),\n      mouseY: (0, _utils.calculateMousePosition)(\"y\", props.projection, props, props.zoom, 1),\n      mouseXStart: 0,\n      mouseYStart: 0,\n      isPressed: false,\n      resizeFactorX: 1,\n      resizeFactorY: 1,\n      backdrop: {\n        width: Math.round(backdrop.width),\n        height: Math.round(backdrop.height),\n        x: Math.round(backdrop.x),\n        y: Math.round(backdrop.y)\n      }\n    };\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleTouchStart = _this.handleTouchStart.bind(_this);\n    _this.handleTouchMove = _this.handleTouchMove.bind(_this);\n    _this.handleResize = _this.handleResize.bind(_this);\n    return _this;\n  }\n\n  _createClass(ZoomableGroup, [{\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(_ref) {\n      var pageX = _ref.pageX,\n          pageY = _ref.pageY;\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        mouseX: pageX - this.state.mouseXStart,\n        mouseY: pageY - this.state.mouseYStart\n      });\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(_ref2) {\n      var touches = _ref2.touches;\n      this.handleMouseMove(touches[0]);\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        isPressed: false\n      });\n      if (!this.props.onMoveEnd) return;\n      var _state = this.state,\n          mouseX = _state.mouseX,\n          mouseY = _state.mouseY,\n          resizeFactorX = _state.resizeFactorX,\n          resizeFactorY = _state.resizeFactorY;\n      var _props = this.props,\n          zoom = _props.zoom,\n          width = _props.width,\n          height = _props.height,\n          projection = _props.projection,\n          onMoveEnd = _props.onMoveEnd;\n      var x = width / 2 - mouseX * resizeFactorX / zoom;\n      var y = height / 2 - mouseY * resizeFactorY / zoom;\n      var newCenter = projection.invert([x, y]);\n      onMoveEnd(newCenter);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(_ref3) {\n      var pageX = _ref3.pageX,\n          pageY = _ref3.pageY;\n      if (this.props.disablePanning) return;\n      var _state2 = this.state,\n          mouseX = _state2.mouseX,\n          mouseY = _state2.mouseY,\n          resizeFactorX = _state2.resizeFactorX,\n          resizeFactorY = _state2.resizeFactorY;\n      var _props2 = this.props,\n          zoom = _props2.zoom,\n          width = _props2.width,\n          height = _props2.height,\n          projection = _props2.projection,\n          onMoveStart = _props2.onMoveStart;\n      this.setState({\n        isPressed: true,\n        mouseXStart: pageX - mouseX,\n        mouseYStart: pageY - mouseY\n      });\n      if (!onMoveStart) return;\n      var x = width / 2 - mouseX * resizeFactorX / zoom;\n      var y = height / 2 - mouseY * resizeFactorY / zoom;\n      var currentCenter = projection.invert([x, y]);\n      onMoveStart(currentCenter);\n    }\n  }, {\n    key: \"handleTouchStart\",\n    value: function handleTouchStart(_ref4) {\n      var touches = _ref4.touches;\n\n      if (touches.length > 1) {\n        this.handleMouseDown(touches[0]);\n      } else {\n        this.handleMouseUp();\n      }\n    }\n  }, {\n    key: \"preventTouchScroll\",\n    value: function preventTouchScroll(evt) {\n      if (evt.touches.length > 1) {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _state3 = this.state,\n          mouseX = _state3.mouseX,\n          mouseY = _state3.mouseY,\n          resizeFactorX = _state3.resizeFactorX,\n          resizeFactorY = _state3.resizeFactorY;\n      var _props3 = this.props,\n          projection = _props3.projection,\n          center = _props3.center,\n          zoom = _props3.zoom;\n      var zoomFactor = nextProps.zoom / zoom;\n      var centerChanged = JSON.stringify(nextProps.center) !== JSON.stringify(center);\n      this.setState({\n        zoom: nextProps.zoom,\n        mouseX: centerChanged ? (0, _utils.calculateMousePosition)(\"x\", nextProps.projection, nextProps, nextProps.zoom, resizeFactorX) : mouseX * zoomFactor,\n        mouseY: centerChanged ? (0, _utils.calculateMousePosition)(\"y\", nextProps.projection, nextProps, nextProps.zoom, resizeFactorY) : mouseY * zoomFactor\n      });\n    }\n  }, {\n    key: \"handleResize\",\n    value: function handleResize() {\n      var _props4 = this.props,\n          width = _props4.width,\n          height = _props4.height,\n          projection = _props4.projection,\n          zoom = _props4.zoom;\n      var resizeFactorX = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().width, width);\n      var resizeFactorY = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().height, height);\n      var xPercentageChange = 1 / resizeFactorX * this.state.resizeFactorX;\n      var yPercentageChange = 1 / resizeFactorY * this.state.resizeFactorY;\n      this.setState({\n        resizeFactorX: resizeFactorX,\n        resizeFactorY: resizeFactorY,\n        mouseX: this.state.mouseX * xPercentageChange,\n        mouseY: this.state.mouseY * yPercentageChange\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _props5 = this.props,\n          width = _props5.width,\n          height = _props5.height,\n          projection = _props5.projection,\n          zoom = _props5.zoom;\n      var resizeFactorX = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().width, width);\n      var resizeFactorY = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().height, height);\n      this.setState({\n        resizeFactorX: resizeFactorX,\n        resizeFactorY: resizeFactorY,\n        mouseX: (0, _utils.calculateMousePosition)(\"x\", projection, this.props, zoom, resizeFactorX),\n        mouseY: (0, _utils.calculateMousePosition)(\"y\", projection, this.props, zoom, resizeFactorY)\n      });\n      window.addEventListener(\"resize\", this.handleResize);\n      window.addEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGroupNode.addEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.handleResize);\n      window.removeEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGroupNode.removeEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props6 = this.props,\n          width = _props6.width,\n          height = _props6.height,\n          zoom = _props6.zoom,\n          style = _props6.style,\n          projection = _props6.projection,\n          children = _props6.children;\n      var _state4 = this.state,\n          mouseX = _state4.mouseX,\n          mouseY = _state4.mouseY,\n          resizeFactorX = _state4.resizeFactorX,\n          resizeFactorY = _state4.resizeFactorY;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-zoomable-group\",\n        ref: function ref(zoomableGroupNode) {\n          return _this2.zoomableGroupNode = zoomableGroupNode;\n        },\n        transform: \"\\n           translate(\\n             \" + Math.round((width / 2 + resizeFactorX * mouseX) * 100) / 100 + \"\\n             \" + Math.round((height / 2 + resizeFactorY * mouseY) * 100) / 100 + \"\\n           )\\n           scale(\" + zoom + \")\\n           translate(\" + -width / 2 + \" \" + -height / 2 + \")\\n         \",\n        onMouseMove: this.handleMouseMove,\n        onMouseUp: this.handleMouseUp,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        onTouchMove: this.handleTouchMove,\n        onTouchEnd: this.handleMouseUp,\n        style: style\n      }, _react2.default.createElement(\"rect\", {\n        x: this.state.backdrop.x,\n        y: this.state.backdrop.y,\n        width: this.state.backdrop.width,\n        height: this.state.backdrop.height,\n        fill: \"transparent\",\n        style: {\n          strokeWidth: 0\n        }\n      }), (0, _utils.createNewChildren)(children, this.props));\n    }\n  }]);\n\n  return ZoomableGroup;\n}(_react.Component);\n\nZoomableGroup.defaultProps = {\n  center: [0, 0],\n  backdrop: {\n    x: [-179.9, 179.9],\n    y: [89.9, -89.9]\n  },\n  zoom: 1,\n  disablePanning: false\n};\nexports.default = ZoomableGroup;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ZoomableGlobe = function (_Component) {\n  _inherits(ZoomableGlobe, _Component);\n\n  function ZoomableGlobe(props) {\n    _classCallCheck(this, ZoomableGlobe);\n\n    var _this = _possibleConstructorReturn(this, (ZoomableGlobe.__proto__ || Object.getPrototypeOf(ZoomableGlobe)).call(this, props));\n\n    var initialRotation = props.projection.rotate();\n    _this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseXStart: 0,\n      mouseYStart: 0,\n      isPressed: false,\n      rotation: [initialRotation[0] - props.center[0], initialRotation[1] - props.center[1], initialRotation[2]]\n    };\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleTouchStart = _this.handleTouchStart.bind(_this);\n    _this.handleTouchMove = _this.handleTouchMove.bind(_this);\n    return _this;\n  }\n\n  _createClass(ZoomableGlobe, [{\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(_ref) {\n      var pageX = _ref.pageX,\n          pageY = _ref.pageY,\n          clientX = _ref.clientX,\n          clientY = _ref.clientY;\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      var differenceX = clientX - this.state.mouseXStart;\n      var differenceY = clientY - this.state.mouseYStart;\n      this.setState({\n        mouseX: clientX,\n        mouseY: clientY,\n        mouseXStart: clientX,\n        mouseYStart: clientY,\n        rotation: [this.state.rotation[0] + differenceX * this.props.sensitivity, this.state.rotation[1] - differenceY * this.props.sensitivity, this.state.rotation[2]]\n      });\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(_ref2) {\n      var touches = _ref2.touches;\n      this.handleMouseMove(touches[0]);\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        isPressed: false\n      });\n      if (!this.props.onMoveEnd) return;\n      var newCenter = this.props.projection.invert([this.props.width / 2, this.props.height / 2]);\n      this.props.onMoveEnd(newCenter);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(_ref3) {\n      var pageX = _ref3.pageX,\n          pageY = _ref3.pageY,\n          clientX = _ref3.clientX,\n          clientY = _ref3.clientY;\n      if (this.props.disablePanning) return;\n      this.setState({\n        isPressed: true,\n        mouseXStart: clientX,\n        mouseYStart: clientY\n      });\n      if (!this.props.onMoveStart) return;\n      var currentCenter = this.props.projection.invert([this.props.width / 2, this.props.height / 2]);\n      this.props.onMoveStart(currentCenter);\n    }\n  }, {\n    key: \"handleTouchStart\",\n    value: function handleTouchStart(_ref4) {\n      var touches = _ref4.touches;\n\n      if (touches.length > 1) {\n        this.handleMouseDown(touches[0]);\n      } else {\n        this.handleMouseUp();\n      }\n    }\n  }, {\n    key: \"preventTouchScroll\",\n    value: function preventTouchScroll(evt) {\n      if (evt.touches.length > 1) {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _state = this.state,\n          mouseX = _state.mouseX,\n          mouseY = _state.mouseY;\n      var _props = this.props,\n          projection = _props.projection,\n          center = _props.center,\n          zoom = _props.zoom;\n      var zoomFactor = nextProps.zoom / zoom;\n      var centerChanged = JSON.stringify(nextProps.center) !== JSON.stringify(center);\n      this.setState({\n        zoom: nextProps.zoom,\n        rotation: centerChanged ? [-nextProps.center[0], -nextProps.center[1], this.state.rotation[2]] : this.state.rotation\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height,\n          projection = _props2.projection,\n          zoom = _props2.zoom;\n      window.addEventListener(\"resize\", this.handleResize);\n      window.addEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGlobeNode.addEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.handleResize);\n      window.removeEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGlobeNode.removeEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props3 = this.props,\n          width = _props3.width,\n          height = _props3.height,\n          zoom = _props3.zoom,\n          style = _props3.style,\n          projection = _props3.projection,\n          children = _props3.children;\n      var _state2 = this.state,\n          mouseX = _state2.mouseX,\n          mouseY = _state2.mouseY;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-zoomable-globe\",\n        ref: function ref(zoomableGlobeNode) {\n          return _this2.zoomableGlobeNode = zoomableGlobeNode;\n        },\n        transform: \"\\n           translate(\" + width / 2 + \" \" + height / 2 + \")\\n           scale(\" + zoom + \")\\n           translate(\" + -width / 2 + \" \" + -height / 2 + \")\\n         \",\n        onMouseMove: this.handleMouseMove,\n        onMouseUp: this.handleMouseUp,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        onTouchMove: this.handleTouchMove,\n        onTouchEnd: this.handleMouseUp,\n        style: style\n      }, (0, _utils.createNewChildren)(children, {\n        width: width,\n        height: height,\n        center: this.center,\n        backdrop: this.backdrop,\n        zoom: this.props.zoom,\n        disablePanning: this.props.disablePanning,\n        children: children,\n        projection: projection.rotate(this.state.rotation)\n      }));\n    }\n  }]);\n\n  return ZoomableGlobe;\n}(_react.Component);\n\nZoomableGlobe.defaultProps = {\n  center: [0, 0],\n  zoom: 1,\n  disablePanning: false,\n  sensitivity: 0.25\n};\nexports.default = ZoomableGlobe;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _topojsonClient = require(\"topojson-client\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Geographies = function (_Component) {\n  _inherits(Geographies, _Component);\n\n  function Geographies(props) {\n    _classCallCheck(this, Geographies);\n\n    var _this = _possibleConstructorReturn(this, (Geographies.__proto__ || Object.getPrototypeOf(Geographies)).call(this, props));\n\n    _this.state = {\n      geographyPaths: _this.shouldFetchGeographies(props.geography) ? [] : _this.parseGeographies(props.geography)\n    };\n    return _this;\n  }\n\n  _createClass(Geographies, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.geography !== this.props.geography) {\n        if (this.shouldFetchGeographies(nextProps.geography)) {\n          this.fetchGeographies(nextProps.geography);\n        } else {\n          this.setState({\n            geographyPaths: this.parseGeographies(nextProps.geography)\n          });\n        }\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var geoPathsChanged = nextState.geographyPaths.length !== this.state.geographyPaths.length;\n      return geoPathsChanged || nextProps.disableOptimization;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.geographyUrl || this.props.geographyPaths) {\n        console.warn(\"You are using the deprecated geographyUrl or geographyPaths props. Use the new geography prop instead. Check out the new docs here: https://github.com/zcreativelabs/react-simple-maps#Geographies-component\");\n      }\n\n      if (this.shouldFetchGeographies(this.props.geography)) {\n        this.fetchGeographies(this.props.geography);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelPendingRequest();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          projection = _props.projection,\n          style = _props.style,\n          children = _props.children;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-geographies\",\n        style: style\n      }, children(this.state.geographyPaths || [], projection));\n    }\n  }, {\n    key: \"shouldFetchGeographies\",\n    value: function shouldFetchGeographies(geography) {\n      return typeof geography === 'string';\n    }\n  }, {\n    key: \"parseGeographies\",\n    value: function parseGeographies(geography) {\n      if (Array.isArray(geography)) {\n        return geography;\n      }\n\n      if (Object.prototype.toString.call(geography) === '[object Object]') {\n        return (0, _topojsonClient.feature)(geography, geography.objects[Object.keys(geography.objects)[0]]).features;\n      }\n\n      return [];\n    }\n  }, {\n    key: \"fetchGeographies\",\n    value: function fetchGeographies(geography) {\n      var _this2 = this;\n\n      var request = new XMLHttpRequest();\n      request.open(\"GET\", geography, true);\n\n      request.onload = function () {\n        if (request.status >= 200 && request.status < 400) {\n          var geographyPaths = JSON.parse(request.responseText);\n\n          _this2.setState({\n            geographyPaths: _this2.parseGeographies(geographyPaths)\n          }, function () {\n            if (_this2.props.onGeographyPathsLoaded) {\n              _this2.props.onGeographyPathsLoaded(String(request.status));\n            }\n          });\n        } else {\n          if (_this2.props.onGeographyPathsLoaded) {\n            _this2.props.onGeographyPathsLoaded(String(request.status));\n          }\n        }\n      };\n\n      request.onerror = function () {\n        console.log(\"There was a connection error...\");\n      };\n\n      request.send();\n      this.cancelPendingRequest();\n      this._xhr = request;\n    }\n  }, {\n    key: \"cancelPendingRequest\",\n    value: function cancelPendingRequest() {\n      if (this._xhr) {\n        this._xhr.abort();\n\n        this._xhr = null;\n      }\n    }\n  }]);\n\n  return Geographies;\n}(_react.Component);\n\nGeographies.defaultProps = {\n  componentIdentifier: \"Geographies\",\n  disableOptimization: false,\n  geography: \"\"\n};\nexports.default = Geographies;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar pathCache = {};\n\nvar renderPath = function renderPath(cacheId, geography, projection, round, precision) {\n  if (pathCache[cacheId]) return pathCache[cacheId];\n  var pathString = cacheId ? pathCache[cacheId] ? pathCache[cacheId] : round ? (0, _utils.roundPath)((0, _d3Geo.geoPath)().projection(projection)(geography), precision) : (0, _d3Geo.geoPath)().projection(projection)(geography) : round ? (0, _utils.roundPath)((0, _d3Geo.geoPath)().projection(projection)(geography), precision) : (0, _d3Geo.geoPath)().projection(projection)(geography);\n  if (cacheId) pathCache[cacheId] = pathString;\n  return pathString;\n};\n\nvar Geography = function (_Component) {\n  _inherits(Geography, _Component);\n\n  function Geography() {\n    _classCallCheck(this, Geography);\n\n    var _this = _possibleConstructorReturn(this, (Geography.__proto__ || Object.getPrototypeOf(Geography)).call(this));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Geography, [{\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      evt.persist();\n      var _props = this.props,\n          onClick = _props.onClick,\n          geography = _props.geography;\n      return onClick && onClick(geography, evt);\n    }\n  }, {\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props2 = this.props,\n          onMouseEnter = _props2.onMouseEnter,\n          geography = _props2.geography;\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props3 = this.props,\n          onMouseMove = _props3.onMouseMove,\n          geography = _props3.geography;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(geography, evt);\n        });\n      } else if (onMouseMove) onMouseMove(geography, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseLeave = _props4.onMouseLeave,\n          geography = _props4.geography;\n      this.setState({\n        hover: false,\n        pressed: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseDown = _props5.onMouseDown,\n          geography = _props5.geography;\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props6 = this.props,\n          onMouseUp = _props6.onMouseUp,\n          geography = _props6.geography;\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          geography = _props7.geography;\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          geography = _props8.geography;\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(geography, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props9 = this.props,\n          geography = _props9.geography,\n          projection = _props9.projection,\n          round = _props9.round,\n          cacheId = _props9.cacheId,\n          precision = _props9.precision,\n          tabable = _props9.tabable,\n          style = _props9.style;\n      var _state = this.state,\n          hover = _state.hover,\n          pressed = _state.pressed;\n      var pathString = renderPath(cacheId, geography, projection, round, precision);\n      var excludeProps = [\"geography\", \"projection\", \"round\", \"cacheId\", \"precision\", \"tabable\", \"style\", \"onClick\", \"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"onMouseDown\", \"onMouseUp\", \"onFocus\", \"onBlur\"];\n      var restProps = Object.keys(this.props).filter(function (key) {\n        return excludeProps.indexOf(key) === -1;\n      }).reduce(function (obj, key) {\n        obj[key] = _this2.props[key];\n        return obj;\n      }, {});\n      return _react2.default.createElement(\"path\", _extends({\n        d: pathString,\n        className: \"rsm-geography\" + (pressed ? \" rsm-geography--pressed\" : \"\") + (hover ? \" rsm-geography--hover\" : \"\"),\n        style: style[pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onClick: this.handleMouseClick,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseMove: this.handleMouseMove,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1\n      }, restProps));\n    }\n  }]);\n\n  return Geography;\n}(_react.Component);\n\nGeography.defaultProps = {\n  precision: 0.1,\n  cacheId: null,\n  round: false,\n  tabable: true,\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  }\n};\nexports.default = Geography;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Marker = function (_Component) {\n  _inherits(Marker, _Component);\n\n  function Marker() {\n    _classCallCheck(this, Marker);\n\n    var _this = _possibleConstructorReturn(this, (Marker.__proto__ || Object.getPrototypeOf(Marker)).call(this));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Marker, [{\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props = this.props,\n          onMouseEnter = _props.onMouseEnter,\n          marker = _props.marker;\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props2 = this.props,\n          onMouseMove = _props2.onMouseMove,\n          marker = _props2.marker;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(marker, evt);\n        });\n      } else if (onMouseMove) onMouseMove(marker, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props3 = this.props,\n          onMouseLeave = _props3.onMouseLeave,\n          marker = _props3.marker;\n      this.setState({\n        hover: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseDown = _props4.onMouseDown,\n          marker = _props4.marker;\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseUp = _props5.onMouseUp,\n          marker = _props5.marker;\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      if (!this.props.onClick) return;\n      evt.persist();\n      var _props6 = this.props,\n          onClick = _props6.onClick,\n          marker = _props6.marker,\n          projection = _props6.projection;\n      return onClick && onClick(marker, projection(marker.coordinates), evt);\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          marker = _props7.marker;\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          marker = _props8.marker;\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(marker, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props9 = this.props,\n          projection = _props9.projection,\n          marker = _props9.marker,\n          style = _props9.style,\n          tabable = _props9.tabable,\n          zoom = _props9.zoom,\n          children = _props9.children,\n          preserveMarkerAspect = _props9.preserveMarkerAspect,\n          width = _props9.width,\n          height = _props9.height;\n      var _state = this.state,\n          pressed = _state.pressed,\n          hover = _state.hover;\n      var scale = preserveMarkerAspect ? \" scale(\" + 1 / zoom + \")\" : \"\";\n      var translation = projection(marker.coordinates);\n      var lineString = {\n        \"type\": \"Feature\",\n        \"geometry\": {\n          \"type\": \"LineString\",\n          \"coordinates\": [projection.invert([width / 2, height / 2]), marker.coordinates]\n        }\n      };\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && (0, _d3Geo.geoLength)(lineString) > radians;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-marker\" + (pressed ? \" rsm-marker--pressed\" : \"\") + (hover ? \" rsm-marker--hover\" : \"\"),\n        transform: \"translate(\\n           \" + translation[0] + \"\\n           \" + translation[1] + \"\\n         ) \" + scale,\n        style: style[isHidden ? \"hidden\" : pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onClick: this.handleMouseClick,\n        onMouseMove: this.handleMouseMove,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1\n      }, children);\n    }\n  }]);\n\n  return Marker;\n}(_react.Component);\n\nMarker.defaultProps = {\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  },\n  marker: {\n    coordinates: [0, 0]\n  },\n  tabable: true,\n  preserveMarkerAspect: true\n};\nexports.default = Marker;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Markers = function Markers(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nMarkers.defaultProps = {\n  componentIdentifier: \"Markers\",\n  groupName: \"markers\",\n  itemName: \"marker\"\n};\nexports.default = Markers;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Line = function (_Component) {\n  _inherits(Line, _Component);\n\n  function Line(props) {\n    _classCallCheck(this, Line);\n\n    var _this = _possibleConstructorReturn(this, (Line.__proto__ || Object.getPrototypeOf(Line)).call(this, props));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Line, [{\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props = this.props,\n          onMouseEnter = _props.onMouseEnter,\n          line = _props.line;\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props2 = this.props,\n          onMouseMove = _props2.onMouseMove,\n          line = _props2.line;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(line, evt);\n        });\n      } else if (onMouseMove) onMouseMove(line, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props3 = this.props,\n          onMouseLeave = _props3.onMouseLeave,\n          line = _props3.line;\n      this.setState({\n        hover: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseDown = _props4.onMouseDown,\n          line = _props4.line;\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseUp = _props5.onMouseUp,\n          line = _props5.line;\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      if (!this.props.onClick) return;\n      evt.persist();\n      var _props6 = this.props,\n          onClick = _props6.onClick,\n          line = _props6.line,\n          projection = _props6.projection;\n      return onClick && onClick(line, [projection(line.coordinates.start), projection(line.coordinates.end)], evt);\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          line = _props7.line;\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(line, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          line = _props8.line;\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(line, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props9 = this.props,\n          className = _props9.className,\n          projection = _props9.projection,\n          line = _props9.line,\n          style = _props9.style,\n          tabable = _props9.tabable,\n          zoom = _props9.zoom,\n          preserveMarkerAspect = _props9.preserveMarkerAspect,\n          width = _props9.width,\n          height = _props9.height,\n          buildPath = _props9.buildPath,\n          strokeWidth = _props9.strokeWidth;\n      var _state = this.state,\n          pressed = _state.pressed,\n          hover = _state.hover;\n      var scale = preserveMarkerAspect ? \" scale(\" + 1 / zoom + \")\" : \"\";\n\n      var buildLineString = function buildLineString(coordinates) {\n        return {\n          type: \"Feature\",\n          geometry: {\n            type: \"LineString\",\n            coordinates: [projection.invert([width / 2, height / 2]), coordinates]\n          }\n        };\n      };\n\n      var startLineString = buildLineString(line.coordinates.start);\n      var endLineString = buildLineString(line.coordinates.end);\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && ((0, _d3Geo.geoLength)(startLineString) > radians || (0, _d3Geo.geoLength)(endLineString) > radians);\n      var start = projection(line.coordinates.start);\n      var end = projection(line.coordinates.end);\n      var path = buildPath ? buildPath(start, end, line) : \"M \" + start.join(\" \") + \" L \" + end.join(\" \");\n      return _react2.default.createElement(\"path\", {\n        className: \"rsm-line\" + (pressed ? \" rsm-line--pressed\" : \"\") + (hover ? \" rsm-line--hover\" : \"\") + \" \" + className,\n        transform: \"\" + scale,\n        style: style[isHidden ? \"hidden\" : pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onClick: this.handleMouseClick,\n        onMouseMove: this.handleMouseMove,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1,\n        d: path,\n        strokeWidth: strokeWidth\n      });\n    }\n  }]);\n\n  return Line;\n}(_react.Component);\n\nLine.defaultProps = {\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  },\n  line: {\n    coordinates: {\n      start: [0, 0],\n      end: [-99.1, 19.4]\n    }\n  },\n  tabable: true,\n  preserveMarkerAspect: true,\n  strokeWidth: 1,\n  className: \"\"\n};\nexports.default = Line;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Lines = function Lines(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nLines.defaultProps = {\n  componentIdentifier: \"Lines\",\n  groupName: \"lines\",\n  itemName: \"line\"\n};\nexports.default = Lines;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Annotation = function (_Component) {\n  _inherits(Annotation, _Component);\n\n  function Annotation() {\n    _classCallCheck(this, Annotation);\n\n    return _possibleConstructorReturn(this, (Annotation.__proto__ || Object.getPrototypeOf(Annotation)).apply(this, arguments));\n  }\n\n  _createClass(Annotation, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          projection = _props.projection,\n          subject = _props.subject,\n          style = _props.style,\n          hiddenStyle = _props.hiddenStyle,\n          dx = _props.dx,\n          dy = _props.dy,\n          zoom = _props.zoom,\n          stroke = _props.stroke,\n          strokeWidth = _props.strokeWidth,\n          children = _props.children,\n          curve = _props.curve,\n          markerEnd = _props.markerEnd,\n          width = _props.width,\n          height = _props.height;\n      var connectorPath = (0, _utils.createConnectorPath)(null, [-dx / zoom, -dy / zoom], curve);\n      var translation = projection(subject);\n      var lineString = {\n        \"type\": \"Feature\",\n        \"geometry\": {\n          \"type\": \"LineString\",\n          \"coordinates\": [projection.invert([width / 2, height / 2]), subject]\n        }\n      };\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && (0, _d3Geo.geoLength)(lineString) > radians;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-annotation\",\n        style: isHidden ? _extends({}, style, hiddenStyle) : style,\n        transform: \"translate(\\n          \" + (translation[0] + dx / zoom) + \"\\n          \" + (translation[1] + dy / zoom) + \"\\n        )\",\n        textAnchor: (0, _utils.createTextAnchor)(dx)\n      }, children, _react2.default.createElement(\"path\", {\n        d: connectorPath,\n        stroke: stroke,\n        strokeWidth: strokeWidth,\n        fill: \"none\",\n        markerEnd: markerEnd\n      }));\n    }\n  }]);\n\n  return Annotation;\n}(_react.Component);\n\nAnnotation.defaultProps = {\n  curve: 0,\n  markerEnd: \"none\",\n  componentIdentifier: \"Annotation\",\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  zoom: 1\n};\nexports.default = Annotation;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Annotations = function Annotations(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nAnnotations.defaultProps = {\n  componentIdentifier: \"Annotations\",\n  groupName: \"annotations\",\n  itemName: \"annotation\"\n};\nexports.default = Annotations;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar computeGraticule = function computeGraticule(projection, step) {\n  return (0, _d3Geo.geoPath)().projection(projection)((0, _d3Geo.geoGraticule)().step(step)());\n};\n\nvar computeOutline = function computeOutline(projection) {\n  return (0, _d3Geo.geoPath)().projection(projection)((0, _d3Geo.geoGraticule)().outline());\n};\n\nvar Graticule = function (_Component) {\n  _inherits(Graticule, _Component);\n\n  function Graticule() {\n    _classCallCheck(this, Graticule);\n\n    var _this = _possibleConstructorReturn(this, (Graticule.__proto__ || Object.getPrototypeOf(Graticule)).call(this));\n\n    _this.state = {\n      renderGraticule: false,\n      graticulePath: \"\",\n      outlinePath: \"\"\n    };\n    _this.renderGraticule = _this.renderGraticule.bind(_this);\n    return _this;\n  }\n\n  _createClass(Graticule, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderGraticule();\n    }\n  }, {\n    key: \"renderGraticule\",\n    value: function renderGraticule() {\n      var _props = this.props,\n          step = _props.step,\n          projection = _props.projection,\n          round = _props.round,\n          precision = _props.precision;\n      this.setState({\n        renderGraticule: true,\n        graticulePath: round ? (0, _utils.roundPath)(computeGraticule(projection, step), precision) : computeGraticule(projection, step),\n        outlinePath: round ? (0, _utils.roundPath)(computeOutline(projection), precision) : computeOutline(projection)\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _props2 = this.props,\n          step = _props2.step,\n          projection = _props2.projection,\n          round = _props2.round,\n          precision = _props2.precision,\n          globe = _props2.globe;\n\n      if (nextProps.round !== round || nextProps.precision !== precision || globe) {\n        this.setState({\n          graticulePath: nextProps.round ? (0, _utils.roundPath)(computeGraticule(projection, step), precision) : computeGraticule(projection, step),\n          outlinePath: nextProps.round ? (0, _utils.roundPath)(computeOutline(projection), precision) : computeOutline(projection)\n        });\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return nextProps.disableOptimization;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props3 = this.props,\n          zoom = _props3.zoom,\n          style = _props3.style,\n          outline = _props3.outline,\n          fill = _props3.fill,\n          stroke = _props3.stroke;\n      return this.state.renderGraticule && _react2.default.createElement(\"g\", {\n        className: \"rsm-graticule\"\n      }, _react2.default.createElement(\"path\", {\n        fill: fill,\n        stroke: stroke,\n        d: this.state.graticulePath,\n        style: style\n      }), outline && _react2.default.createElement(\"path\", {\n        fill: fill,\n        stroke: stroke,\n        d: this.state.outlinePath,\n        style: style\n      }));\n    }\n  }]);\n\n  return Graticule;\n}(_react.Component);\n\nGraticule.defaultProps = {\n  componentIdentifier: \"Graticule\",\n  disableOptimization: true,\n  globe: false,\n  round: true,\n  precision: 0.1,\n  step: [10, 10],\n  outline: true,\n  stroke: \"#DDDDDD\",\n  fill: \"transparent\",\n  style: {\n    pointerEvents: \"none\"\n  }\n};\nexports.default = Graticule;","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function noop() {}","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function sphere() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import { asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point\nx0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n}; // Arithmetic mean of Cartesian vectors.\n\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\n\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m),\n      // line weight = angle\n  v = m && -w / m; // area weight multiplier\n\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function (object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.\n\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose\";\nimport { abs, asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau } from \"./math\";\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi) return point[0];else return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function (polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian\";\nimport { circleStream } from \"../circle\";\nimport { abs, cos, epsilon, pi, radians, sqrt } from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\nexport default function (radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import { abs, epsilon } from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}","import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","export default function (x) {\n  return x;\n}","import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","import noop from \"../noop\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          if (this._circle == null) this._circle = circle(this._radius);\n\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}","import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { abs, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { equirectangularRaw } from \"./equirectangular\";\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y,\n        nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function (x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n}","import projection from \"./index.js\";\nimport { abs, asin, cos, epsilon2, sin, sqrt } from \"../math.js\";\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)),\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n  return [lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n}\n\nequalEarthRaw.invert = function (x, y) {\n  var l = y,\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n\n  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l), asin(sin(l) / M)];\n};\n\nexport default function () {\n  return projection(equalEarthRaw).scale(177.158);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import projection from \"./index\";\nimport { abs, epsilon } from \"../math\";\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarth1Raw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarth1Raw).scale(175.295);\n}","import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sin = Math.sin;\nexport var tan = Math.tan;\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, degrees, epsilon, halfPi, log, radians, sin, sqrt, tan } from \"./math\";\nexport function airyRaw(beta) {\n  var tanBeta_2 = tan(beta / 2),\n      b = 2 * log(cos(beta / 2)) / (tanBeta_2 * tanBeta_2);\n\n  function forward(x, y) {\n    var cosx = cos(x),\n        cosy = cos(y),\n        siny = sin(y),\n        cosz = cosy * cosx,\n        k = -((1 - cosz ? log((1 + cosz) / 2) / (1 - cosz) : -0.5) + b / (1 + cosz));\n    return [k * cosy * sin(x), k * siny];\n  }\n\n  forward.invert = function (x, y) {\n    var r = sqrt(x * x + y * y),\n        z = -beta / 2,\n        i = 50,\n        delta;\n    if (!r) return [0, 0];\n\n    do {\n      var z_2 = z / 2,\n          cosz_2 = cos(z_2),\n          sinz_2 = sin(z_2),\n          tanz_2 = tan(z_2),\n          lnsecz_2 = log(1 / cosz_2);\n      z -= delta = (2 / tanz_2 * lnsecz_2 - b * tanz_2 - r) / (-lnsecz_2 / (sinz_2 * sinz_2) + 1 - b / (2 * cosz_2 * cosz_2));\n    } while (abs(delta) > epsilon && --i > 0);\n\n    var sinz = sin(z);\n    return [atan2(x * sinz, r * cos(z)), asin(y * sinz / r)];\n  };\n\n  return forward;\n}\nexport default function () {\n  var beta = halfPi,\n      m = projectionMutator(airyRaw),\n      p = m(beta);\n\n  p.radius = function (_) {\n    return arguments.length ? m(beta = _ * radians) : beta * degrees;\n  };\n\n  return p.scale(179.976).clipAngle(147);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, cos, epsilon, pi, sin, sinci, sqrt } from \"./math\";\nexport function aitoffRaw(x, y) {\n  var cosy = cos(y),\n      sincia = sinci(acos(cosy * cos(x /= 2)));\n  return [2 * cosy * sin(x) * sincia, sin(y) * sincia];\n} // Abort if [x, y] is not within an ellipse centered at [0, 0] with\n// semi-major axis pi and semi-minor axis pi/2.\n\naitoffRaw.invert = function (x, y) {\n  if (x * x + 4 * y * y > pi * pi + epsilon) return;\n  var x1 = x,\n      y1 = y,\n      i = 25;\n\n  do {\n    var sinx = sin(x1),\n        sinx_2 = sin(x1 / 2),\n        cosx_2 = cos(x1 / 2),\n        siny = sin(y1),\n        cosy = cos(y1),\n        sin_2y = sin(2 * y1),\n        sin2y = siny * siny,\n        cos2y = cosy * cosy,\n        sin2x_2 = sinx_2 * sinx_2,\n        c = 1 - cos2y * cosx_2 * cosx_2,\n        e = c ? acos(cosy * cosx_2) * sqrt(f = 1 / c) : f = 0,\n        f,\n        fx = 2 * e * cosy * sinx_2 - x,\n        fy = e * siny - y,\n        dxdx = f * (cos2y * sin2x_2 + e * cosy * cosx_2 * sin2y),\n        dxdy = f * (0.5 * sinx * sin_2y - e * 2 * siny * sinx_2),\n        dydx = f * 0.25 * (sin_2y * sinx_2 - e * siny * cos2y * sinx),\n        dydy = f * (sin2y * cosx_2 + e * sin2x_2 * cosy),\n        z = dxdy * dydx - dydy * dxdx;\n    if (!z) break;\n    var dx = (fy * dxdy - fx * dydy) / z,\n        dy = (fx * dydx - fy * dxdx) / z;\n    x1 -= dx, y1 -= dy;\n  } while ((abs(dx) > epsilon || abs(dy) > epsilon) && --i > 0);\n\n  return [x1, y1];\n};\n\nexport default function () {\n  return projection(aitoffRaw).scale(152.63);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, atan2, cos, degrees, epsilon, radians, sin, tan } from \"./math\";\nexport function armadilloRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      k = (1 + sinPhi0 - cosPhi0) / 2;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        cosLambda = cos(lambda /= 2);\n    return [(1 + cosPhi) * sin(lambda), (sPhi0 * phi > -atan2(cosLambda, tanPhi0) - 1e-3 ? 0 : -sPhi0 * 10) + k + sin(phi) * cosPhi0 - (1 + cosPhi) * sinPhi0 * cosLambda // TODO D3 core should allow null or [NaN, NaN] to be returned.\n    ];\n  }\n\n  forward.invert = function (x, y) {\n    var lambda = 0,\n        phi = 0,\n        i = 50;\n\n    do {\n      var cosLambda = cos(lambda),\n          sinLambda = sin(lambda),\n          cosPhi = cos(phi),\n          sinPhi = sin(phi),\n          A = 1 + cosPhi,\n          fx = A * sinLambda - x,\n          fy = k + sinPhi * cosPhi0 - A * sinPhi0 * cosLambda - y,\n          dxdLambda = A * cosLambda / 2,\n          dxdPhi = -sinLambda * sinPhi,\n          dydLambda = sinPhi0 * A * sinLambda / 2,\n          dydPhi = cosPhi0 * cosPhi + sinPhi0 * cosLambda * sinPhi,\n          denominator = dxdPhi * dydLambda - dydPhi * dxdLambda,\n          dLambda = (fy * dxdPhi - fx * dydPhi) / denominator / 2,\n          dPhi = (fx * dydLambda - fy * dxdLambda) / denominator;\n      lambda -= dLambda, phi -= dPhi;\n    } while ((abs(dLambda) > epsilon || abs(dPhi) > epsilon) && --i > 0);\n\n    return sPhi0 * phi > -atan2(cos(lambda), tanPhi0) - 1e-3 ? [lambda * 2, phi] : null;\n  };\n\n  return forward;\n}\nexport default function () {\n  var phi0 = 20 * radians,\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      m = projectionMutator(armadilloRaw),\n      p = m(phi0),\n      stream_ = p.stream;\n\n  p.parallel = function (_) {\n    if (!arguments.length) return phi0 * degrees;\n    tanPhi0 = tan((sPhi0 = (phi0 = _ * radians) >= 0 ? 1 : -1) * phi0);\n    return m(phi0);\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n\n      for (var lambda = sPhi0 * -180; sPhi0 * lambda < 180; lambda += sPhi0 * 90) {\n        sphereStream.point(lambda, sPhi0 * 90);\n      }\n\n      while (sPhi0 * (lambda -= phi0) >= -180) {\n        // TODO precision?\n        sphereStream.point(lambda, sPhi0 * -atan2(cos(lambda * radians / 2), tanPhi0) * degrees);\n      }\n\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return p.scale(218.695).center([0, 28.0974]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, arcosh, arsinh, asin, atan2, cos, cosh, sign, sin, sinh, sqrt, tan } from \"./math\";\nexport function augustRaw(lambda, phi) {\n  var tanPhi = tan(phi / 2),\n      k = sqrt(1 - tanPhi * tanPhi),\n      c = 1 + k * cos(lambda /= 2),\n      x = sin(lambda) * k / c,\n      y = tanPhi / c,\n      x2 = x * x,\n      y2 = y * y;\n  return [4 / 3 * x * (3 + x2 - 3 * y2), 4 / 3 * y * (3 + 3 * x2 - y2)];\n}\n\naugustRaw.invert = function (x, y) {\n  x *= 3 / 8, y *= 3 / 8;\n  if (!x && abs(y) > 1) return null;\n  var x2 = x * x,\n      y2 = y * y,\n      s = 1 + x2 + y2,\n      sin3Eta = sqrt((s - sqrt(s * s - 4 * y * y)) / 2),\n      eta = asin(sin3Eta) / 3,\n      xi = sin3Eta ? arcosh(abs(y / sin3Eta)) / 3 : arsinh(abs(x)) / 3,\n      cosEta = cos(eta),\n      coshXi = cosh(xi),\n      d = coshXi * coshXi - cosEta * cosEta;\n  return [sign(x) * 2 * atan2(sinh(xi) * cosEta, 0.25 - d), sign(y) * 2 * atan2(coshXi * sin(eta), 0.25 + d)];\n};\n\nexport default function () {\n  return projection(augustRaw).scale(66.1603);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, atan, cos, epsilon2, exp, halfPi, log, quarterPi, sign, sin, sqrt, sqrt2, tan } from \"./math\";\nvar sqrt8 = sqrt(8),\n    phi0 = log(1 + sqrt2);\nexport function bakerRaw(lambda, phi) {\n  var phi0 = abs(phi);\n  return phi0 < quarterPi ? [lambda, log(tan(quarterPi + phi / 2))] : [lambda * cos(phi0) * (2 * sqrt2 - 1 / sin(phi0)), sign(phi) * (2 * sqrt2 * (phi0 - quarterPi) - log(tan(phi0 / 2)))];\n}\n\nbakerRaw.invert = function (x, y) {\n  if ((y0 = abs(y)) < phi0) return [x, 2 * atan(exp(y)) - halfPi];\n  var phi = quarterPi,\n      i = 25,\n      delta,\n      y0;\n\n  do {\n    var cosPhi_2 = cos(phi / 2),\n        tanPhi_2 = tan(phi / 2);\n    phi -= delta = (sqrt8 * (phi - quarterPi) - log(tanPhi_2) - y0) / (sqrt8 - cosPhi_2 * cosPhi_2 / (2 * tanPhi_2));\n  } while (abs(delta) > epsilon2 && --i > 0);\n\n  return [x / (cos(phi) * (sqrt8 - 1 / sin(phi))), sign(y) * phi];\n};\n\nexport default function () {\n  return projection(bakerRaw).scale(112.314);\n}","import { geoProjectionMutator as projectionMutator, geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw } from \"d3-geo\";\nimport { abs, acos, asin, atan, atan2, cos, degrees, halfPi, pi, radians, round, sin, sqrt, tan } from \"./math\";\nexport function berghausRaw(lobes) {\n  var k = 2 * pi / lobes;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi);\n\n    if (abs(lambda) > halfPi) {\n      // back hemisphere\n      var theta = atan2(p[1], p[0]),\n          r = sqrt(p[0] * p[0] + p[1] * p[1]),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          α = atan2(sin(theta -= theta0), 2 - cos(theta)); // angle relative to lobe end\n\n      theta = theta0 + asin(pi / r * sin(α)) - α;\n      p[0] = r * cos(theta);\n      p[1] = r * sin(theta);\n    }\n\n    return p;\n  }\n\n  forward.invert = function (x, y) {\n    var r = sqrt(x * x + y * y);\n\n    if (r > halfPi) {\n      var theta = atan2(y, x),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          s = theta > theta0 ? -1 : 1,\n          A = r * cos(theta0 - theta),\n          cotα = 1 / tan(s * acos((A - pi) / sqrt(pi * (pi - 2 * A) + r * r)));\n      theta = theta0 + 2 * atan((cotα + s * sqrt(cotα * cotα - 3)) / 3);\n      x = r * cos(theta), y = r * sin(theta);\n    }\n\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\nexport default function () {\n  var lobes = 5,\n      m = projectionMutator(berghausRaw),\n      p = m(lobes),\n      projectionStream = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.lobes = function (_) {\n    return arguments.length ? m(lobes = +_) : lobes;\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = projectionStream(stream),\n        sphereStream = (p.rotate([0, 0]), projectionStream(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n\n      for (var i = 0, delta = 360 / lobes, delta0 = 2 * pi / lobes, phi = 90 - 180 / lobes, phi0 = halfPi; i < lobes; ++i, phi -= delta, phi0 -= delta0) {\n        sphereStream.point(atan2(sr * cos(phi0), cr) * degrees, asin(sr * sin(phi0)) * degrees);\n\n        if (phi < -90) {\n          sphereStream.point(-90, -180 - phi - epsilon);\n          sphereStream.point(-90, -180 - phi + epsilon);\n        } else {\n          sphereStream.point(90, phi + epsilon);\n          sphereStream.point(90, phi - epsilon);\n        }\n      }\n\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return p.scale(87.8076).center([0, 17.1875]).clipAngle(180 - 1e-3);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt2 } from \"./math\";\nexport function mollweideBromleyTheta(cp, phi) {\n  var cpsinPhi = cp * sin(phi),\n      i = 30,\n      delta;\n\n  do {\n    phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return phi / 2;\n}\nexport function mollweideBromleyRaw(cx, cy, cp) {\n  function forward(lambda, phi) {\n    return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n  }\n\n  forward.invert = function (x, y) {\n    return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n  };\n\n  return forward;\n}\nexport var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\nexport default function () {\n  return projection(mollweideRaw).scale(169.529);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { mollweideBromleyTheta } from \"./mollweide\";\nimport { abs, cos, epsilon, pi, quarterPi, sin, sqrt2 } from \"./math\";\nvar k = 2.00276,\n    w = 1.11072;\nexport function boggsRaw(lambda, phi) {\n  var theta = mollweideBromleyTheta(pi, phi);\n  return [k * lambda / (1 / cos(phi) + w / cos(theta)), (phi + sqrt2 * sin(theta)) / k];\n}\n\nboggsRaw.invert = function (x, y) {\n  var ky = k * y,\n      theta = y < 0 ? -quarterPi : quarterPi,\n      i = 25,\n      delta,\n      phi;\n\n  do {\n    phi = ky - sqrt2 * sin(theta);\n    theta -= delta = (sin(2 * theta) + 2 * theta - pi * sin(phi)) / (2 * cos(2 * theta) + 2 + pi * cos(phi) * sqrt2 * cos(theta));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  phi = ky - sqrt2 * sin(theta);\n  return [x * (1 / cos(phi) + w / cos(theta)) / k, phi];\n};\n\nexport default function () {\n  return projection(boggsRaw).scale(160.857);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { degrees, radians } from \"./math\";\nexport default function (projectAt) {\n  var phi0 = 0,\n      m = projectionMutator(projectAt),\n      p = m(phi0);\n\n  p.parallel = function (_) {\n    return arguments.length ? m(phi0 = _ * radians) : phi0 * degrees;\n  };\n\n  return p;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { cos } from \"./math\";\nexport function sinusoidalRaw(lambda, phi) {\n  return [lambda * cos(phi), phi];\n}\n\nsinusoidalRaw.invert = function (x, y) {\n  return [x / cos(y), y];\n};\n\nexport default function () {\n  return projection(sinusoidalRaw).scale(152.63);\n}","import parallel1 from \"./parallel1\";\nimport { atan2, cos, sin, sqrt, tan } from \"./math\";\nimport { sinusoidalRaw } from \"./sinusoidal\";\nexport function bonneRaw(phi0) {\n  if (!phi0) return sinusoidalRaw;\n  var cotPhi0 = 1 / tan(phi0);\n\n  function forward(lambda, phi) {\n    var rho = cotPhi0 + phi0 - phi,\n        e = rho ? lambda * cos(phi) / rho : rho;\n    return [rho * sin(e), cotPhi0 - rho * cos(e)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho = sqrt(x * x + (y = cotPhi0 - y) * y),\n        phi = cotPhi0 + phi0 - rho;\n    return [rho / cos(phi) * atan2(x, y), phi];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(bonneRaw).scale(123.082).center([0, 26.1441]).parallel(45);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { atan2, cos, halfPi, sin, sqrt } from \"./math\";\nexport function bottomleyRaw(sinPsi) {\n  function forward(lambda, phi) {\n    var rho = halfPi - phi,\n        eta = rho ? lambda * sinPsi * sin(rho) / rho : rho;\n    return [rho * sin(eta) / sinPsi, halfPi - rho * cos(eta)];\n  }\n\n  forward.invert = function (x, y) {\n    var x1 = x * sinPsi,\n        y1 = halfPi - y,\n        rho = sqrt(x1 * x1 + y1 * y1),\n        eta = atan2(x1, y1);\n    return [(rho ? rho / sin(rho) : 1) * eta / sinPsi, halfPi - rho];\n  };\n\n  return forward;\n}\nexport default function () {\n  var sinPsi = 0.5,\n      m = projectionMutator(bottomleyRaw),\n      p = m(sinPsi);\n\n  p.fraction = function (_) {\n    return arguments.length ? m(sinPsi = +_) : sinPsi;\n  };\n\n  return p.scale(158.837);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi } from \"./math\";\nimport { mollweideBromleyRaw } from \"./mollweide\";\nexport var bromleyRaw = mollweideBromleyRaw(1, 4 / pi, pi);\nexport default function () {\n  return projection(bromleyRaw).scale(152.63);\n}","import { geoCentroid as centroid, geoProjection as projection, geoRotation as rotation } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, epsilon, floor, pi, radians, sin, sqrt } from \"./math\"; // Azimuthal distance.\n\nfunction distance(dPhi, c1, s1, c2, s2, dLambda) {\n  var cosdLambda = cos(dLambda),\n      r;\n\n  if (abs(dPhi) > 1 || abs(dLambda) > 1) {\n    r = acos(s1 * s2 + c1 * c2 * cosdLambda);\n  } else {\n    var sindPhi = sin(dPhi / 2),\n        sindLambda = sin(dLambda / 2);\n    r = 2 * asin(sqrt(sindPhi * sindPhi + c1 * c2 * sindLambda * sindLambda));\n  }\n\n  return abs(r) > epsilon ? [r, atan2(c2 * sin(dLambda), c1 * s2 - s1 * c2 * cosdLambda)] : [0, 0];\n} // Angle opposite a, and contained between sides of lengths b and c.\n\n\nfunction angle(b, c, a) {\n  return acos((b * b + c * c - a * a) / (2 * b * c));\n} // Normalize longitude.\n\n\nfunction longitude(lambda) {\n  return lambda - 2 * pi * floor((lambda + pi) / (2 * pi));\n}\n\nexport function chamberlinRaw(p0, p1, p2) {\n  var points = [[p0[0], p0[1], sin(p0[1]), cos(p0[1])], [p1[0], p1[1], sin(p1[1]), cos(p1[1])], [p2[0], p2[1], sin(p2[1]), cos(p2[1])]];\n\n  for (var a = points[2], b, i = 0; i < 3; ++i, a = b) {\n    b = points[i];\n    a.v = distance(b[1] - a[1], a[3], a[2], b[3], b[2], b[0] - a[0]);\n    a.point = [0, 0];\n  }\n\n  var beta0 = angle(points[0].v[0], points[2].v[0], points[1].v[0]),\n      beta1 = angle(points[0].v[0], points[1].v[0], points[2].v[0]),\n      beta2 = pi - beta0;\n  points[2].point[1] = 0;\n  points[0].point[0] = -(points[1].point[0] = points[0].v[0] / 2);\n  var mean = [points[2].point[0] = points[0].point[0] + points[2].v[0] * cos(beta0), 2 * (points[0].point[1] = points[1].point[1] = points[2].v[0] * sin(beta0))];\n\n  function forward(lambda, phi) {\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        v = new Array(3),\n        i; // Compute distance and azimuth from control points.\n\n    for (i = 0; i < 3; ++i) {\n      var p = points[i];\n      v[i] = distance(phi - p[1], p[3], p[2], cosPhi, sinPhi, lambda - p[0]);\n      if (!v[i][0]) return p.point;\n      v[i][1] = longitude(v[i][1] - p.v[1]);\n    } // Arithmetic mean of interception points.\n\n\n    var point = mean.slice();\n\n    for (i = 0; i < 3; ++i) {\n      var j = i == 2 ? 0 : i + 1;\n      var a = angle(points[i].v[0], v[i][0], v[j][0]);\n      if (v[i][1] < 0) a = -a;\n\n      if (!i) {\n        point[0] += v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else if (i == 1) {\n        a = beta1 - a;\n        point[0] -= v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else {\n        a = beta2 - a;\n        point[0] += v[i][0] * cos(a);\n        point[1] += v[i][0] * sin(a);\n      }\n    }\n\n    point[0] /= 3, point[1] /= 3;\n    return point;\n  }\n\n  return forward;\n}\n\nfunction pointRadians(p) {\n  return p[0] *= radians, p[1] *= radians, p;\n}\n\nexport function chamberlinAfrica() {\n  return chamberlin([0, 22], [45, 22], [22.5, -22]).scale(380).center([22.5, 2]);\n}\nexport default function chamberlin(p0, p1, p2) {\n  // TODO order matters!\n  var c = centroid({\n    type: \"MultiPoint\",\n    coordinates: [p0, p1, p2]\n  }),\n      R = [-c[0], -c[1]],\n      r = rotation(R),\n      p = projection(chamberlinRaw(pointRadians(r(p0)), pointRadians(r(p1)), pointRadians(r(p2)))).rotate(R),\n      center = p.center;\n  delete p.rotate;\n\n  p.center = function (_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p.clipAngle(90);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, pi, sin, sqrt, sqrtPi } from \"./math\";\nexport function collignonRaw(lambda, phi) {\n  var alpha = sqrt(1 - sin(phi));\n  return [2 / sqrtPi * lambda * alpha, sqrtPi * (1 - alpha)];\n}\n\ncollignonRaw.invert = function (x, y) {\n  var lambda = (lambda = y / sqrtPi - 1) * lambda;\n  return [lambda > 0 ? x * sqrt(pi / lambda) / 2 : 0, asin(1 - lambda)];\n};\n\nexport default function () {\n  return projection(collignonRaw).scale(95.6464).center([0, 30]);\n}","import { asin, atan2, cos, sin, sqrt, tan } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function craigRaw(phi0) {\n  var tanPhi0 = tan(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda, (lambda ? lambda / sin(lambda) : 1) * (sin(phi) * cos(lambda) - tanPhi0 * cos(phi))];\n  }\n\n  forward.invert = tanPhi0 ? function (x, y) {\n    if (x) y *= sin(x) / x;\n    var cosλ = cos(x);\n    return [x, 2 * atan2(sqrt(cosλ * cosλ + tanPhi0 * tanPhi0 - y * y) - cosλ, tanPhi0 - y)];\n  } : function (x, y) {\n    return [x, asin(x ? y * tan(x) / x : y)];\n  };\n  return forward;\n}\nexport default function () {\n  return parallel1(craigRaw).scale(249.828).clipAngle(90);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, cos, sin, sqrt, sqrtPi } from \"./math\";\nvar sqrt3 = sqrt(3);\nexport function crasterRaw(lambda, phi) {\n  return [sqrt3 * lambda * (2 * cos(2 * phi / 3) - 1) / sqrtPi, sqrt3 * sqrtPi * sin(phi / 3)];\n}\n\ncrasterRaw.invert = function (x, y) {\n  var phi = 3 * asin(y / (sqrt3 * sqrtPi));\n  return [sqrtPi * x / (sqrt3 * (2 * cos(2 * phi / 3) - 1)), phi];\n};\n\nexport default function () {\n  return projection(crasterRaw).scale(156.19);\n}","import { asin, cos, sin } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(cylindricalEqualAreaRaw).parallel(38.58) // acos(sqrt(width / height / pi)) * radians\n  .scale(195.044); // width / (sqrt(width / height / pi) * 2 * pi)\n}","import { atan, cos, tan } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function cylindricalStereographicRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, (1 + cosPhi0) * tan(phi / 2)];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, atan(y / (1 + cosPhi0)) * 2];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(cylindricalStereographicRaw).scale(124.75);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, pi, sqrt } from \"./math\";\nexport function eckert1Raw(lambda, phi) {\n  var alpha = sqrt(8 / (3 * pi));\n  return [alpha * lambda * (1 - abs(phi) / pi), alpha * phi];\n}\n\neckert1Raw.invert = function (x, y) {\n  var alpha = sqrt(8 / (3 * pi)),\n      phi = y / alpha;\n  return [x / (alpha * (1 - abs(phi) / pi)), phi];\n};\n\nexport default function () {\n  return projection(eckert1Raw).scale(165.664);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, pi, sign, sin, sqrt } from \"./math\";\nexport function eckert2Raw(lambda, phi) {\n  var alpha = sqrt(4 - 3 * sin(abs(phi)));\n  return [2 / sqrt(6 * pi) * lambda * alpha, sign(phi) * sqrt(2 * pi / 3) * (2 - alpha)];\n}\n\neckert2Raw.invert = function (x, y) {\n  var alpha = 2 - abs(y) / sqrt(2 * pi / 3);\n  return [x * sqrt(6 * pi) / (2 * alpha), sign(y) * asin((4 - alpha * alpha) / 3)];\n};\n\nexport default function () {\n  return projection(eckert2Raw).scale(165.664);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi, sqrt } from \"./math\";\nexport function eckert3Raw(lambda, phi) {\n  var k = sqrt(pi * (4 + pi));\n  return [2 / k * lambda * (1 + sqrt(1 - 4 * phi * phi / (pi * pi))), 4 / k * phi];\n}\n\neckert3Raw.invert = function (x, y) {\n  var k = sqrt(pi * (4 + pi)) / 2;\n  return [x * k / (1 + sqrt(1 - y * y * (4 + pi) / (4 * pi))), y * k / 2];\n};\n\nexport default function () {\n  return projection(eckert3Raw).scale(180.739);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt } from \"./math\";\nexport function eckert4Raw(lambda, phi) {\n  var k = (2 + halfPi) * sin(phi);\n  phi /= 2;\n\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    var cosPhi = cos(phi);\n    phi -= delta = (phi + sin(phi) * (cosPhi + 2) - k) / (2 * cosPhi * (1 + cosPhi));\n  }\n\n  return [2 / sqrt(pi * (4 + pi)) * lambda * (1 + cos(phi)), 2 * sqrt(pi / (4 + pi)) * sin(phi)];\n}\n\neckert4Raw.invert = function (x, y) {\n  var A = y * sqrt((4 + pi) / pi) / 2,\n      k = asin(A),\n      c = cos(k);\n  return [x / (2 / sqrt(pi * (4 + pi)) * (1 + c)), asin((k + A * (c + 2)) / (2 + halfPi))];\n};\n\nexport default function () {\n  return projection(eckert4Raw).scale(180.739);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { cos, pi, sqrt } from \"./math\";\nexport function eckert5Raw(lambda, phi) {\n  return [lambda * (1 + cos(phi)) / sqrt(2 + pi), 2 * phi / sqrt(2 + pi)];\n}\n\neckert5Raw.invert = function (x, y) {\n  var k = sqrt(2 + pi),\n      phi = y * k / 2;\n  return [k * x / (1 + cos(phi)), phi];\n};\n\nexport default function () {\n  return projection(eckert5Raw).scale(173.044);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt } from \"./math\";\nexport function eckert6Raw(lambda, phi) {\n  var k = (1 + halfPi) * sin(phi);\n\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    phi -= delta = (phi + sin(phi) - k) / (1 + cos(phi));\n  }\n\n  k = sqrt(2 + pi);\n  return [lambda * (1 + cos(phi)) / k, 2 * phi / k];\n}\n\neckert6Raw.invert = function (x, y) {\n  var j = 1 + halfPi,\n      k = sqrt(j / 2);\n  return [x * 2 * k / (1 + cos(y *= k)), asin((y + sin(y)) / j)];\n};\n\nexport default function () {\n  return projection(eckert6Raw).scale(173.044);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { augustRaw } from \"./august\";\nimport { abs, atan, cos, epsilon, halfPi, log, max, min, sin, sqrt, sqrt1_2, sqrt2 } from \"./math\";\nvar eisenlohrK = 3 + 2 * sqrt2;\nexport function eisenlohrRaw(lambda, phi) {\n  var s0 = sin(lambda /= 2),\n      c0 = cos(lambda),\n      k = sqrt(cos(phi)),\n      c1 = cos(phi /= 2),\n      t = sin(phi) / (c1 + sqrt2 * c0 * k),\n      c = sqrt(2 / (1 + t * t)),\n      v = sqrt((sqrt2 * c1 + (c0 + s0) * k) / (sqrt2 * c1 + (c0 - s0) * k));\n  return [eisenlohrK * (c * (v - 1 / v) - 2 * log(v)), eisenlohrK * (c * t * (v + 1 / v) - 2 * atan(t))];\n}\n\neisenlohrRaw.invert = function (x, y) {\n  if (!(p = augustRaw.invert(x / 1.2, y * 1.065))) return null;\n  var lambda = p[0],\n      phi = p[1],\n      i = 20,\n      p;\n  x /= eisenlohrK, y /= eisenlohrK;\n\n  do {\n    var _0 = lambda / 2,\n        _1 = phi / 2,\n        s0 = sin(_0),\n        c0 = cos(_0),\n        s1 = sin(_1),\n        c1 = cos(_1),\n        cos1 = cos(phi),\n        k = sqrt(cos1),\n        t = s1 / (c1 + sqrt2 * c0 * k),\n        t2 = t * t,\n        c = sqrt(2 / (1 + t2)),\n        v0 = sqrt2 * c1 + (c0 + s0) * k,\n        v1 = sqrt2 * c1 + (c0 - s0) * k,\n        v2 = v0 / v1,\n        v = sqrt(v2),\n        vm1v = v - 1 / v,\n        vp1v = v + 1 / v,\n        fx = c * vm1v - 2 * log(v) - x,\n        fy = c * t * vp1v - 2 * atan(t) - y,\n        deltatDeltaLambda = s1 && sqrt1_2 * k * s0 * t2 / s1,\n        deltatDeltaPhi = (sqrt2 * c0 * c1 + k) / (2 * (c1 + sqrt2 * c0 * k) * (c1 + sqrt2 * c0 * k) * k),\n        deltacDeltat = -0.5 * t * c * c * c,\n        deltacDeltaLambda = deltacDeltat * deltatDeltaLambda,\n        deltacDeltaPhi = deltacDeltat * deltatDeltaPhi,\n        A = (A = 2 * c1 + sqrt2 * k * (c0 - s0)) * A * v,\n        deltavDeltaLambda = (sqrt2 * c0 * c1 * k + cos1) / A,\n        deltavDeltaPhi = -(sqrt2 * s0 * s1) / (k * A),\n        deltaxDeltaLambda = vm1v * deltacDeltaLambda - 2 * deltavDeltaLambda / v + c * (deltavDeltaLambda + deltavDeltaLambda / v2),\n        deltaxDeltaPhi = vm1v * deltacDeltaPhi - 2 * deltavDeltaPhi / v + c * (deltavDeltaPhi + deltavDeltaPhi / v2),\n        deltayDeltaLambda = t * vp1v * deltacDeltaLambda - 2 * deltatDeltaLambda / (1 + t2) + c * vp1v * deltatDeltaLambda + c * t * (deltavDeltaLambda - deltavDeltaLambda / v2),\n        deltayDeltaPhi = t * vp1v * deltacDeltaPhi - 2 * deltatDeltaPhi / (1 + t2) + c * vp1v * deltatDeltaPhi + c * t * (deltavDeltaPhi - deltavDeltaPhi / v2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n\n    if (!denominator) break;\n    var deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda;\n    phi = max(-halfPi, min(halfPi, phi - deltaPhi));\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n\n  return abs(abs(phi) - halfPi) < epsilon ? [0, phi] : i && [lambda, phi];\n};\n\nexport default function () {\n  return projection(eisenlohrRaw).scale(62.5271);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, cos, radians, sqrt, tan } from \"./math\";\nvar faheyK = cos(35 * radians);\nexport function faheyRaw(lambda, phi) {\n  var t = tan(phi / 2);\n  return [lambda * faheyK * sqrt(1 - t * t), (1 + faheyK) * t];\n}\n\nfaheyRaw.invert = function (x, y) {\n  var t = y / (1 + faheyK);\n  return [x && x / (faheyK * sqrt(1 - t * t)), 2 * atan(t)];\n};\n\nexport default function () {\n  return projection(faheyRaw).scale(137.152);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, cos, sqrtPi, tan } from \"./math\";\nexport function foucautRaw(lambda, phi) {\n  var k = phi / 2,\n      cosk = cos(k);\n  return [2 * lambda / sqrtPi * cos(phi) * cosk * cosk, sqrtPi * tan(k)];\n}\n\nfoucautRaw.invert = function (x, y) {\n  var k = atan(y / sqrtPi),\n      cosk = cos(k),\n      phi = 2 * k;\n  return [x * sqrtPi / 2 / (cos(phi) * cosk * cosk), phi];\n};\n\nexport default function () {\n  return projection(foucautRaw).scale(135.264);\n}","import { geoEquirectangular, geoOrthographic } from \"d3-geo\";\nimport { asin, atan, degrees, radians, sin, tan } from \"./math\";\n\nfunction gilbertForward(point) {\n  return [point[0] / 2, asin(tan(point[1] / 2 * radians)) * degrees];\n}\n\nfunction gilbertInvert(point) {\n  return [point[0] * 2, 2 * atan(sin(point[1] * radians)) * degrees];\n}\n\nexport default function (projectionType) {\n  if (projectionType == null) projectionType = geoOrthographic;\n  var projection = projectionType(),\n      equirectangular = geoEquirectangular().scale(degrees).precision(0).clipAngle(null).translate([0, 0]); // antimeridian cutting\n\n  function gilbert(point) {\n    return projection(gilbertForward(point));\n  }\n\n  if (projection.invert) gilbert.invert = function (point) {\n    return gilbertInvert(projection.invert(point));\n  };\n\n  gilbert.stream = function (stream) {\n    var s1 = projection.stream(stream),\n        s0 = equirectangular.stream({\n      point: function point(lambda, phi) {\n        s1.point(lambda / 2, asin(tan(-phi / 2 * radians)) * degrees);\n      },\n      lineStart: function lineStart() {\n        s1.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        s1.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        s1.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        s1.polygonEnd();\n      }\n    });\n    s0.sphere = s1.sphere;\n    return s0;\n  };\n\n  function property(name) {\n    gilbert[name] = function (_) {\n      return arguments.length ? (projection[name](_), gilbert) : projection[name]();\n    };\n  }\n\n  gilbert.rotate = function (_) {\n    return arguments.length ? (equirectangular.rotate(_), gilbert) : equirectangular.rotate();\n  };\n\n  gilbert.center = function (_) {\n    return arguments.length ? (projection.center(gilbertForward(_)), gilbert) : gilbertInvert(projection.center());\n  };\n\n  property(\"clipAngle\");\n  property(\"clipExtent\");\n  property(\"scale\");\n  property(\"translate\");\n  property(\"precision\");\n  return gilbert.scale(249.5);\n}","import { geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, degrees, epsilon, epsilon2, halfPi, pi, radians, round, sin, sqrt } from \"./math\";\nexport function gingeryRaw(rho, n) {\n  var k = 2 * pi / n,\n      rho2 = rho * rho;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi),\n        x = p[0],\n        y = p[1],\n        r2 = x * x + y * y;\n\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          alpha = theta - theta0,\n          rhoCosAlpha = rho * cos(alpha),\n          k_ = (rho * sin(alpha) - alpha * sin(rhoCosAlpha)) / (halfPi - rhoCosAlpha),\n          s_ = gingeryLength(alpha, k_),\n          e = (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n      x = r;\n      var i = 50,\n          delta;\n\n      do {\n        x -= delta = (rho + gingeryIntegrate(s_, rhoCosAlpha, x) * e - r) / (s_(x) * e);\n      } while (abs(delta) > epsilon && --i > 0);\n\n      y = alpha * sin(x);\n      if (x < halfPi) y -= k_ * (x - halfPi);\n      var s = sin(theta0),\n          c = cos(theta0);\n      p[0] = x * c - y * s;\n      p[1] = x * s + y * c;\n    }\n\n    return p;\n  }\n\n  forward.invert = function (x, y) {\n    var r2 = x * x + y * y;\n\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          dTheta = theta - theta0;\n      x = r * cos(dTheta);\n      y = r * sin(dTheta);\n      var x_halfPi = x - halfPi,\n          sinx = sin(x),\n          alpha = y / sinx,\n          delta = x < halfPi ? Infinity : 0,\n          i = 10;\n\n      while (true) {\n        var rhosinAlpha = rho * sin(alpha),\n            rhoCosAlpha = rho * cos(alpha),\n            sinRhoCosAlpha = sin(rhoCosAlpha),\n            halfPi_RhoCosAlpha = halfPi - rhoCosAlpha,\n            k_ = (rhosinAlpha - alpha * sinRhoCosAlpha) / halfPi_RhoCosAlpha,\n            s_ = gingeryLength(alpha, k_);\n        if (abs(delta) < epsilon2 || ! --i) break;\n        alpha -= delta = (alpha * sinx - k_ * x_halfPi - y) / (sinx - x_halfPi * 2 * (halfPi_RhoCosAlpha * (rhoCosAlpha + alpha * rhosinAlpha * cos(rhoCosAlpha) - sinRhoCosAlpha) - rhosinAlpha * (rhosinAlpha - alpha * sinRhoCosAlpha)) / (halfPi_RhoCosAlpha * halfPi_RhoCosAlpha));\n      }\n\n      r = rho + gingeryIntegrate(s_, rhoCosAlpha, x) * (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n      theta = theta0 + alpha;\n      x = r * cos(theta);\n      y = r * sin(theta);\n    }\n\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction gingeryLength(alpha, k) {\n  return function (x) {\n    var y_ = alpha * cos(x);\n    if (x < halfPi) y_ -= k;\n    return sqrt(1 + y_ * y_);\n  };\n} // Numerical integration: trapezoidal rule.\n\n\nfunction gingeryIntegrate(f, a, b) {\n  var n = 50,\n      h = (b - a) / n,\n      s = f(a) + f(b);\n\n  for (var i = 1, x = a; i < n; ++i) {\n    s += 2 * f(x += h);\n  }\n\n  return s * 0.5 * h;\n}\n\nexport default function () {\n  var n = 6,\n      rho = 30 * radians,\n      cRho = cos(rho),\n      sRho = sin(rho),\n      m = projectionMutator(gingeryRaw),\n      p = m(rho, n),\n      stream_ = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.radius = function (_) {\n    if (!arguments.length) return rho * degrees;\n    cRho = cos(rho = _ * radians);\n    sRho = sin(rho);\n    return m(rho, n);\n  };\n\n  p.lobes = function (_) {\n    if (!arguments.length) return n;\n    return m(rho, n = +_);\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n\n      for (var i = 0, delta = 2 * pi / n, phi = 0; i < n; ++i, phi -= delta) {\n        sphereStream.point(atan2(sr * cos(phi), cr) * degrees, asin(sr * sin(phi)) * degrees);\n        sphereStream.point(atan2(sRho * cos(phi - delta / 2), cRho) * degrees, asin(sRho * sin(phi - delta / 2)) * degrees);\n      }\n\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return p.rotate([90, -40]).scale(91.7095).clipAngle(180 - 1e-3);\n}","import { abs, asin, cos, epsilon, pi, sin, sqrt } from \"./math\";\nexport default function (a, b, c, d, e, f, g, h) {\n  if (arguments.length < 8) h = 0;\n\n  function forward(lambda, phi) {\n    if (!phi) return [a * lambda / pi, 0];\n    var phi2 = phi * phi,\n        xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n        yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n        m = (xB * xB + yB * yB) / (2 * yB),\n        alpha = lambda * asin(xB / m) / pi;\n    return [m * sin(alpha), phi * (1 + phi2 * h) + m * (1 - cos(alpha))];\n  }\n\n  forward.invert = function (x, y) {\n    var lambda = pi * x / a,\n        phi = y,\n        deltaLambda,\n        deltaPhi,\n        i = 50;\n\n    do {\n      var phi2 = phi * phi,\n          xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n          yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n          p = xB * xB + yB * yB,\n          q = 2 * yB,\n          m = p / q,\n          m2 = m * m,\n          dAlphadLambda = asin(xB / m) / pi,\n          alpha = lambda * dAlphadLambda,\n          xB2 = xB * xB,\n          dxBdPhi = (2 * b + phi2 * (4 * c + phi2 * 6 * d)) * phi,\n          dyBdPhi = e + phi2 * (3 * f + phi2 * 5 * g),\n          dpdPhi = 2 * (xB * dxBdPhi + yB * (dyBdPhi - 1)),\n          dqdPhi = 2 * (dyBdPhi - 1),\n          dmdPhi = (dpdPhi * q - p * dqdPhi) / (q * q),\n          cosAlpha = cos(alpha),\n          sinAlpha = sin(alpha),\n          mcosAlpha = m * cosAlpha,\n          msinAlpha = m * sinAlpha,\n          dAlphadPhi = lambda / pi * (1 / sqrt(1 - xB2 / m2)) * (dxBdPhi * m - xB * dmdPhi) / m2,\n          fx = msinAlpha - x,\n          fy = phi * (1 + phi2 * h) + m - mcosAlpha - y,\n          deltaxDeltaPhi = dmdPhi * sinAlpha + mcosAlpha * dAlphadPhi,\n          deltaxDeltaLambda = mcosAlpha * dAlphadLambda,\n          deltayDeltaPhi = 1 + dmdPhi - (dmdPhi * cosAlpha - msinAlpha * dAlphadPhi),\n          deltayDeltaLambda = msinAlpha * dAlphadLambda,\n          denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n      if (!denominator) break;\n      lambda -= deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator;\n      phi -= deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n\n    return [lambda, phi];\n  };\n\n  return forward;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nexport var ginzburg4Raw = ginzburgPolyconicRaw(2.8284, -1.6988, 0.75432, -0.18071, 1.76003, -0.38914, 0.042555);\nexport default function () {\n  return projection(ginzburg4Raw).scale(149.995);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nexport var ginzburg5Raw = ginzburgPolyconicRaw(2.583819, -0.835827, 0.170354, -0.038094, 1.543313, -0.411435, 0.082742);\nexport default function () {\n  return projection(ginzburg5Raw).scale(153.93);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nimport { pi } from \"./math\";\nexport var ginzburg6Raw = ginzburgPolyconicRaw(5 / 6 * pi, -0.62636, -0.0344, 0, 1.3493, -0.05524, 0, 0.045);\nexport default function () {\n  return projection(ginzburg6Raw).scale(130.945);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon } from \"./math\";\nexport function ginzburg8Raw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [lambda * (1 - 0.162388 * phi2) * (0.87 - 0.000952426 * lambda2 * lambda2), phi * (1 + phi2 / 12)];\n}\n\nginzburg8Raw.invert = function (x, y) {\n  var lambda = x,\n      phi = y,\n      i = 50,\n      delta;\n\n  do {\n    var phi2 = phi * phi;\n    phi -= delta = (phi * (1 + phi2 / 12) - y) / (1 + phi2 / 4);\n  } while (abs(delta) > epsilon && --i > 0);\n\n  i = 50;\n  x /= 1 - 0.162388 * phi2;\n\n  do {\n    var lambda4 = (lambda4 = lambda * lambda) * lambda4;\n    lambda -= delta = (lambda * (0.87 - 0.000952426 * lambda4) - x) / (0.87 - 0.00476213 * lambda4);\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [lambda, phi];\n};\n\nexport default function () {\n  return projection(ginzburg8Raw).scale(131.747);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nexport var ginzburg9Raw = ginzburgPolyconicRaw(2.6516, -0.76534, 0.19123, -0.047094, 1.36289, -0.13965, 0.031762);\nexport default function () {\n  return projection(ginzburg9Raw).scale(131.087);\n}","import { halfPi, pi } from \"./math\";\nexport default function (project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectSquare(lambda, phi) {\n    var s = lambda > 0 ? -0.5 : 0.5,\n        point = project(lambda + s * pi, phi);\n    point[0] -= s * dx;\n    return point;\n  }\n\n  if (project.invert) projectSquare.invert = function (x, y) {\n    var s = x > 0 ? -0.5 : 0.5,\n        location = project.invert(x + s * dx, y),\n        lambda = location[0] - s * pi;\n    if (lambda < -pi) lambda += 2 * pi;else if (lambda > pi) lambda -= 2 * pi;\n    location[0] = lambda;\n    return location;\n  };\n  return projectSquare;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, atan2, cos, sign, epsilon, epsilon2, halfPi, pi, sin, sqrt } from \"./math\";\nimport squareRaw from \"./square\";\nexport function gringortenRaw(lambda, phi) {\n  var sLambda = sign(lambda),\n      sPhi = sign(phi),\n      cosPhi = cos(phi),\n      x = cos(lambda) * cosPhi,\n      y = sin(lambda) * cosPhi,\n      z = sin(sPhi * phi);\n  lambda = abs(atan2(y, z));\n  phi = asin(x);\n  if (abs(lambda - halfPi) > epsilon) lambda %= halfPi;\n  var point = gringortenHexadecant(lambda > pi / 4 ? halfPi - lambda : lambda, phi);\n  if (lambda > pi / 4) z = point[0], point[0] = -point[1], point[1] = -z;\n  return point[0] *= sLambda, point[1] *= -sPhi, point;\n}\n\ngringortenRaw.invert = function (x, y) {\n  var sx = sign(x),\n      sy = sign(y),\n      x0 = -sx * x,\n      y0 = -sy * y,\n      t = y0 / x0 < 1,\n      p = gringortenHexadecantInvert(t ? y0 : x0, t ? x0 : y0),\n      lambda = p[0],\n      phi = p[1],\n      cosPhi = cos(phi);\n  if (t) lambda = -halfPi - lambda;\n  return [sx * (atan2(sin(lambda) * cosPhi, -sin(phi)) + pi), sy * asin(cos(lambda) * cosPhi)];\n};\n\nfunction gringortenHexadecant(lambda, phi) {\n  if (phi === halfPi) return [0, 0];\n  var sinPhi = sin(phi),\n      r = sinPhi * sinPhi,\n      r2 = r * r,\n      j = 1 + r2,\n      k = 1 + 3 * r2,\n      q = 1 - r2,\n      z = asin(1 / sqrt(j)),\n      v = q + r * j * z,\n      p2 = (1 - sinPhi) / v,\n      p = sqrt(p2),\n      a2 = p2 * j,\n      a = sqrt(a2),\n      h = p * q,\n      x,\n      i;\n  if (lambda === 0) return [0, -(h + r * a)];\n  var cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * k) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = 0.5 * dp2dPhi / p,\n      dhdPhi = q * dpdPhi - 2 * r * p * drdPhi,\n      dra2dPhi = r * j * dp2dPhi + p2 * k * drdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * dra2dPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      lambda1 = 4 * lambda / pi,\n      delta; // Slower but accurate bisection method.\n\n  if (lambda > 0.222 * pi || phi < pi / 4 && lambda > 0.175 * pi) {\n    x = (h + r * sqrt(a2 * (1 + r2) - h * h)) / (1 + r2);\n    if (lambda > pi / 4) return [x, x];\n    var x1 = x,\n        x0 = 0.5 * x;\n    x = 0.5 * (x0 + x1), i = 50;\n\n    do {\n      var g = sqrt(a2 - x * x),\n          f = x * (zeta + mu * g) + nu * asin(x / a) - lambda1;\n      if (!f) break;\n      if (f < 0) x0 = x;else x1 = x;\n      x = 0.5 * (x0 + x1);\n    } while (abs(x1 - x0) > epsilon && --i > 0);\n  } // Newton-Raphson.\n  else {\n      x = epsilon, i = 25;\n\n      do {\n        var x2 = x * x,\n            g2 = sqrt(a2 - x2),\n            zetaMug = zeta + mu * g2,\n            f2 = x * zetaMug + nu * asin(x / a) - lambda1,\n            df = zetaMug + (nu - mu * x2) / g2;\n        x -= delta = g2 ? f2 / df : 0;\n      } while (abs(delta) > epsilon && --i > 0);\n    }\n\n  return [x, -h - r * sqrt(a2 - x * x)];\n}\n\nfunction gringortenHexadecantInvert(x, y) {\n  var x0 = 0,\n      x1 = 1,\n      r = 0.5,\n      i = 50;\n\n  while (true) {\n    var r2 = r * r,\n        sinPhi = sqrt(r),\n        z = asin(1 / sqrt(1 + r2)),\n        v = 1 - r2 + r * (1 + r2) * z,\n        p2 = (1 - sinPhi) / v,\n        p = sqrt(p2),\n        a2 = p2 * (1 + r2),\n        h = p * (1 - r2),\n        g2 = a2 - x * x,\n        g = sqrt(g2),\n        y0 = y + h + r * g;\n    if (abs(x1 - x0) < epsilon2 || --i === 0 || y0 === 0) break;\n    if (y0 > 0) x0 = r;else x1 = r;\n    r = 0.5 * (x0 + x1);\n  }\n\n  if (!i) return null;\n  var phi = asin(sinPhi),\n      cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * (1 + 3 * r2)) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = 0.5 * dp2dPhi / p,\n      dhdPhi = (1 - r2) * dpdPhi - 2 * r * p * drdPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * (r * (1 + r2) * dp2dPhi + p2 * (1 + 3 * r2) * drdPhi);\n  return [pi / 4 * (x * (zeta + mu * g) + nu * asin(x / sqrt(a2))), phi];\n}\n\nexport default function () {\n  return projection(squareRaw(gringortenRaw)).scale(239.75);\n}","import { abs, asin, atan, cos, cosh, epsilon, exp, halfPi, log, pi, pow, quarterPi, sign, sin, sinh, sqrt, tan, tanh } from \"./math\"; // Returns [sn, cn, dn](u + iv|m).\n\nexport function ellipticJi(u, v, m) {\n  var a, b, c;\n\n  if (!u) {\n    b = ellipticJ(v, 1 - m);\n    return [[0, b[0] / b[1]], [1 / b[1], 0], [b[2] / b[1], 0]];\n  }\n\n  a = ellipticJ(u, m);\n  if (!v) return [[a[0], 0], [a[1], 0], [a[2], 0]];\n  b = ellipticJ(v, 1 - m);\n  c = b[1] * b[1] + m * a[0] * a[0] * b[0] * b[0];\n  return [[a[0] * b[2] / c, a[1] * a[2] * b[0] * b[1] / c], [a[1] * b[1] / c, -a[0] * a[2] * b[0] * b[2] / c], [a[2] * b[1] * b[2] / c, -m * a[0] * a[1] * b[0] / c]];\n} // Returns [sn, cn, dn, ph](u|m).\n\nexport function ellipticJ(u, m) {\n  var ai, b, phi, t, twon;\n\n  if (m < epsilon) {\n    t = sin(u);\n    b = cos(u);\n    ai = m * (u - t * b) / 4;\n    return [t - ai * b, b + ai * t, 1 - m * t * t / 2, u - ai];\n  }\n\n  if (m >= 1 - epsilon) {\n    ai = (1 - m) / 4;\n    b = cosh(u);\n    t = tanh(u);\n    phi = 1 / b;\n    twon = b * sinh(u);\n    return [t + ai * (twon - u) / (b * b), phi - ai * t * phi * (twon - u), phi + ai * t * phi * (twon + u), 2 * atan(exp(u)) - halfPi + ai * (twon - u) / b];\n  }\n\n  var a = [1, 0, 0, 0, 0, 0, 0, 0, 0],\n      c = [sqrt(m), 0, 0, 0, 0, 0, 0, 0, 0],\n      i = 0;\n  b = sqrt(1 - m);\n  twon = 1;\n\n  while (abs(c[i] / a[i]) > epsilon && i < 8) {\n    ai = a[i++];\n    c[i] = (ai - b) / 2;\n    a[i] = (ai + b) / 2;\n    b = sqrt(ai * b);\n    twon *= 2;\n  }\n\n  phi = twon * a[i] * u;\n\n  do {\n    t = c[i] * sin(b = phi) / a[i];\n    phi = (asin(t) + phi) / 2;\n  } while (--i);\n\n  return [sin(phi), t = cos(phi), t / cos(phi - b), phi];\n} // Calculate F(phi+iPsi|m).\n// See Abramowitz and Stegun, 17.4.11.\n\nexport function ellipticFi(phi, psi, m) {\n  var r = abs(phi),\n      i = abs(psi),\n      sinhPsi = sinh(i);\n\n  if (r) {\n    var cscPhi = 1 / sin(r),\n        cotPhi2 = 1 / (tan(r) * tan(r)),\n        b = -(cotPhi2 + m * (sinhPsi * sinhPsi * cscPhi * cscPhi) - 1 + m),\n        c = (m - 1) * cotPhi2,\n        cotLambda2 = (-b + sqrt(b * b - 4 * c)) / 2;\n    return [ellipticF(atan(1 / sqrt(cotLambda2)), m) * sign(phi), ellipticF(atan(sqrt((cotLambda2 / cotPhi2 - 1) / m)), 1 - m) * sign(psi)];\n  }\n\n  return [0, ellipticF(atan(sinhPsi), 1 - m) * sign(psi)];\n} // Calculate F(phi|m) where m = k² = sin²α.\n// See Abramowitz and Stegun, 17.6.7.\n\nexport function ellipticF(phi, m) {\n  if (!m) return phi;\n  if (m === 1) return log(tan(phi / 2 + quarterPi));\n  var a = 1,\n      b = sqrt(1 - m),\n      c = sqrt(m);\n\n  for (var i = 0; abs(c) > epsilon; i++) {\n    if (phi % pi) {\n      var dPhi = atan(b * tan(phi) / a);\n      if (dPhi < 0) dPhi += pi;\n      phi += dPhi + ~~(phi / pi) * pi;\n    } else phi += phi;\n\n    c = (a + b) / 2;\n    b = sqrt(a * b);\n    c = ((a = c) - b) / 2;\n  }\n\n  return phi / (pow(2, i) * a);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { ellipticF, ellipticFi, ellipticJi } from \"./elliptic\";\nimport { abs, atan, atan2, cos, exp, halfPi, log, pi, sin, sqrt, sqrt2, tan } from \"./math\";\nimport squareRaw from \"./square\";\nexport function guyouRaw(lambda, phi) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      psi = log(tan(pi / 4 + abs(phi) / 2)),\n      r = exp(f * psi) / sqrt(k_),\n      at = guyouComplexAtan(r * cos(f * lambda), r * sin(f * lambda)),\n      t = ellipticFi(at[0], at[1], k * k);\n  return [-t[1], (phi >= 0 ? 1 : -1) * (0.5 * K - t[0])];\n}\n\nfunction guyouComplexAtan(x, y) {\n  var x2 = x * x,\n      y_1 = y + 1,\n      t = 1 - x2 - y * y;\n  return [0.5 * ((x >= 0 ? halfPi : -halfPi) - atan2(t, 2 * x)), -0.25 * log(t * t + 4 * x2) + 0.5 * log(y_1 * y_1 + x2)];\n}\n\nfunction guyouComplexDivide(a, b) {\n  var denominator = b[0] * b[0] + b[1] * b[1];\n  return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\n\nguyouRaw.invert = function (x, y) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      j = ellipticJi(0.5 * K - y, -x, k * k),\n      tn = guyouComplexDivide(j[0], j[1]),\n      lambda = atan2(tn[1], tn[0]) / f;\n  return [lambda, 2 * atan(exp(0.5 / f * log(k_ * tn[0] * tn[0] + k_ * tn[1] * tn[1]))) - halfPi];\n};\n\nexport default function () {\n  return projection(squareRaw(guyouRaw)).scale(151.496);\n}","import { geoAzimuthalEqualAreaRaw as azimuthalEqualAreaRaw, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { asin, cos, sin } from \"./math\";\nexport function hammerRaw(A, B) {\n  if (arguments.length < 2) B = A;\n  if (B === 1) return azimuthalEqualAreaRaw;\n  if (B === Infinity) return hammerQuarticAuthalicRaw;\n\n  function forward(lambda, phi) {\n    var coordinates = azimuthalEqualAreaRaw(lambda / B, phi);\n    coordinates[0] *= A;\n    return coordinates;\n  }\n\n  forward.invert = function (x, y) {\n    var coordinates = azimuthalEqualAreaRaw.invert(x / A, y);\n    coordinates[0] *= B;\n    return coordinates;\n  };\n\n  return forward;\n}\n\nfunction hammerQuarticAuthalicRaw(lambda, phi) {\n  return [lambda * cos(phi) / cos(phi /= 2), 2 * sin(phi)];\n}\n\nhammerQuarticAuthalicRaw.invert = function (x, y) {\n  var phi = 2 * asin(y / 2);\n  return [x * cos(phi / 2) / cos(phi), phi];\n};\n\nexport default function () {\n  var B = 2,\n      m = projectionMutator(hammerRaw),\n      p = m(B);\n\n  p.coefficient = function (_) {\n    if (!arguments.length) return B;\n    return m(B = +_);\n  };\n\n  return p.scale(169.529);\n}","import { geoProjectionMutator as projectionMutator, geoCircle } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, degrees, epsilon, halfPi, radians, sqrt, sin } from \"./math\";\nexport function hammerRetroazimuthalRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      rotate = hammerRetroazimuthalRotation(phi0);\n  rotate.invert = hammerRetroazimuthalRotation(-phi0);\n\n  function forward(lambda, phi) {\n    var p = rotate(lambda, phi);\n    lambda = p[0], phi = p[1];\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        cosLambda = cos(lambda),\n        z = acos(sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosLambda),\n        sinz = sin(z),\n        K = abs(sinz) > epsilon ? z / sinz : 1;\n    return [K * cosPhi0 * sin(lambda), (abs(lambda) > halfPi ? K : -K) * ( // rotate for back hemisphere\n    sinPhi0 * cosPhi - cosPhi0 * sinPhi * cosLambda)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho = sqrt(x * x + y * y),\n        sinz = -sin(rho),\n        cosz = cos(rho),\n        a = rho * cosz,\n        b = -y * sinz,\n        c = rho * sinPhi0,\n        d = sqrt(a * a + b * b - c * c),\n        phi = atan2(a * c + b * d, b * c - a * d),\n        lambda = (rho > halfPi ? -1 : 1) * atan2(x * sinz, rho * cos(phi) * cosz + y * sin(phi) * sinz);\n    return rotate.invert(lambda, phi);\n  };\n\n  return forward;\n} // Latitudinal rotation by phi0.\n// Temporary hack until D3 supports arbitrary small-circle clipping origins.\n\nfunction hammerRetroazimuthalRotation(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0);\n  return function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi);\n    return [atan2(y, x * cosPhi0 - z * sinPhi0), asin(z * cosPhi0 + x * sinPhi0)];\n  };\n}\n\nexport default function () {\n  var phi0 = 0,\n      m = projectionMutator(hammerRetroazimuthalRaw),\n      p = m(phi0),\n      rotate_ = p.rotate,\n      stream_ = p.stream,\n      circle = geoCircle();\n\n  p.parallel = function (_) {\n    if (!arguments.length) return phi0 * degrees;\n    var r = p.rotate();\n    return m(phi0 = _ * radians).rotate(r);\n  }; // Temporary hack; see hammerRetroazimuthalRotation.\n\n\n  p.rotate = function (_) {\n    if (!arguments.length) return _ = rotate_.call(p), _[1] += phi0 * degrees, _;\n    rotate_.call(p, [_[0], _[1] - phi0 * degrees]);\n    circle.center([-_[0], -_[1]]);\n    return p;\n  };\n\n  p.stream = function (stream) {\n    stream = stream_(stream);\n\n    stream.sphere = function () {\n      stream.polygonStart();\n      var epsilon = 1e-2,\n          ring = circle.radius(90 - epsilon)().coordinates[0],\n          n = ring.length - 1,\n          i = -1,\n          p;\n      stream.lineStart();\n\n      while (++i < n) {\n        stream.point((p = ring[i])[0], p[1]);\n      }\n\n      stream.lineEnd();\n      ring = circle.radius(90 + epsilon)().coordinates[0];\n      n = ring.length - 1;\n      stream.lineStart();\n\n      while (--i >= 0) {\n        stream.point((p = ring[i])[0], p[1]);\n      }\n\n      stream.lineEnd();\n      stream.polygonEnd();\n    };\n\n    return stream;\n  };\n\n  return p.scale(79.4187).parallel(45).clipAngle(180 - 1e-3);\n}","import { range } from \"d3-array\";\nimport { geoStream, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { collignonRaw } from \"./collignon\";\nimport { cylindricalEqualAreaRaw } from \"./cylindricalEqualArea\";\nimport { abs, floor, max, min, pi, radians, sqrtPi, tau } from \"./math\";\nvar healpixParallel = 41 + 48 / 36 + 37 / 3600,\n    // for K=3; TODO automate\nhealpixLambert = cylindricalEqualAreaRaw(0);\nexport function healpixRaw(H) {\n  var phi0 = healpixParallel * radians,\n      dx = collignonRaw(pi, phi0)[0] - collignonRaw(-pi, phi0)[0],\n      y0 = healpixLambert(0, phi0)[1],\n      y1 = collignonRaw(0, phi0)[1],\n      dy1 = sqrtPi - y1,\n      k = tau / H,\n      w = 4 / tau,\n      h = y0 + dy1 * dy1 * 4 / tau;\n\n  function forward(lambda, phi) {\n    var point,\n        phi2 = abs(phi);\n\n    if (phi2 > phi0) {\n      var i = min(H - 1, max(0, floor((lambda + pi) / k)));\n      lambda += pi * (H - 1) / H - i * k;\n      point = collignonRaw(lambda, phi2);\n      point[0] = point[0] * tau / dx - tau * (H - 1) / (2 * H) + i * tau / H;\n      point[1] = y0 + (point[1] - y1) * 4 * dy1 / tau;\n      if (phi < 0) point[1] = -point[1];\n    } else {\n      point = healpixLambert(lambda, phi);\n    }\n\n    point[0] *= w, point[1] /= h;\n    return point;\n  }\n\n  forward.invert = function (x, y) {\n    x /= w, y *= h;\n    var y2 = abs(y);\n\n    if (y2 > y0) {\n      var i = min(H - 1, max(0, floor((x + pi) / k)));\n      x = (x + pi * (H - 1) / H - i * k) * dx / tau;\n      var point = collignonRaw.invert(x, 0.25 * (y2 - y0) * tau / dy1 + y1);\n      point[0] -= pi * (H - 1) / H - i * k;\n      if (y < 0) point[1] = -point[1];\n      return point;\n    }\n\n    return healpixLambert.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction sphere(step) {\n  return {\n    type: \"Polygon\",\n    coordinates: [range(-180, 180 + step / 2, step).map(function (x, i) {\n      return [x, i & 1 ? 90 - 1e-6 : healpixParallel];\n    }).concat(range(180, -180 - step / 2, -step).map(function (x, i) {\n      return [x, i & 1 ? -90 + 1e-6 : -healpixParallel];\n    }))]\n  };\n}\n\nexport default function () {\n  var H = 4,\n      m = projectionMutator(healpixRaw),\n      p = m(H),\n      stream_ = p.stream;\n\n  p.lobes = function (_) {\n    return arguments.length ? m(H = +_) : H;\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      geoStream(sphere(180 / H), sphereStream);\n    };\n\n    return rotateStream;\n  };\n\n  return p.scale(239.75);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, epsilon2, halfPi, pi, sin, sqrt } from \"./math\";\nexport function hillRaw(K) {\n  var L = 1 + K,\n      sinBt = sin(1 / L),\n      Bt = asin(sinBt),\n      A = 2 * sqrt(pi / (B = pi + 4 * Bt * L)),\n      B,\n      rho0 = 0.5 * A * (L + sqrt(K * (2 + K))),\n      K2 = K * K,\n      L2 = L * L;\n\n  function forward(lambda, phi) {\n    var t = 1 - sin(phi),\n        rho,\n        omega;\n\n    if (t && t < 2) {\n      var theta = halfPi - phi,\n          i = 25,\n          delta;\n\n      do {\n        var sinTheta = sin(theta),\n            cosTheta = cos(theta),\n            Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta),\n            C = 1 + L2 - 2 * L * cosTheta;\n        theta -= delta = (theta - K2 * Bt - L * sinTheta + C * Bt_Bt1 - 0.5 * t * B) / (2 * L * sinTheta * Bt_Bt1);\n      } while (abs(delta) > epsilon2 && --i > 0);\n\n      rho = A * sqrt(C);\n      omega = lambda * Bt_Bt1 / pi;\n    } else {\n      rho = A * (K + t);\n      omega = lambda * Bt / pi;\n    }\n\n    return [rho * sin(omega), rho0 - rho * cos(omega)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho2 = x * x + (y -= rho0) * y,\n        cosTheta = (1 + L2 - rho2 / (A * A)) / (2 * L),\n        theta = acos(cosTheta),\n        sinTheta = sin(theta),\n        Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta);\n    return [asin(x / sqrt(rho2)) * pi / Bt_Bt1, asin(1 - 2 * (theta - K2 * Bt - L * sinTheta + (1 + L2 - 2 * L * cosTheta) * Bt_Bt1) / B)];\n  };\n\n  return forward;\n}\nexport default function () {\n  var K = 1,\n      m = projectionMutator(hillRaw),\n      p = m(K);\n\n  p.ratio = function (_) {\n    return arguments.length ? m(K = +_) : K;\n  };\n\n  return p.scale(167.774).center([0, 18.67]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { mollweideRaw } from \"./mollweide\";\nimport { sinusoidalRaw } from \"./sinusoidal\";\nexport var sinuMollweidePhi = 0.7109889596207567;\nexport var sinuMollweideY = 0.0528035274542;\nexport function sinuMollweideRaw(lambda, phi) {\n  return phi > -sinuMollweidePhi ? (lambda = mollweideRaw(lambda, phi), lambda[1] += sinuMollweideY, lambda) : sinusoidalRaw(lambda, phi);\n}\n\nsinuMollweideRaw.invert = function (x, y) {\n  return y > -sinuMollweidePhi ? mollweideRaw.invert(x, y - sinuMollweideY) : sinusoidalRaw.invert(x, y);\n};\n\nexport default function () {\n  return projection(sinuMollweideRaw).rotate([-20, -55]).scale(164.263).center([0, -5.4036]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs } from \"./math\";\nimport { mollweideRaw } from \"./mollweide\";\nimport { sinusoidalRaw } from \"./sinusoidal\";\nimport { sinuMollweidePhi, sinuMollweideY } from \"./sinuMollweide\";\nexport function homolosineRaw(lambda, phi) {\n  return abs(phi) > sinuMollweidePhi ? (lambda = mollweideRaw(lambda, phi), lambda[1] -= phi > 0 ? sinuMollweideY : -sinuMollweideY, lambda) : sinusoidalRaw(lambda, phi);\n}\n\nhomolosineRaw.invert = function (x, y) {\n  return abs(y) > sinuMollweidePhi ? mollweideRaw.invert(x, y + (y > 0 ? sinuMollweideY : -sinuMollweideY)) : sinusoidalRaw.invert(x, y);\n};\n\nexport default function () {\n  return projection(homolosineRaw).scale(152.63);\n}","import { merge } from \"d3-array\";\nimport { geoStream, geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, radians } from \"../math\";\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction interpolateLine(coordinates, m) {\n  var i = -1,\n      n = coordinates.length,\n      p0 = coordinates[0],\n      p1,\n      dx,\n      dy,\n      resampled = [];\n\n  while (++i < n) {\n    p1 = coordinates[i];\n    dx = (p1[0] - p0[0]) / m;\n    dy = (p1[1] - p0[1]) / m;\n\n    for (var j = 0; j < m; ++j) {\n      resampled.push([p0[0] + j * dx, p0[1] + j * dy]);\n    }\n\n    p0 = p1;\n  }\n\n  resampled.push(p1);\n  return resampled;\n}\n\nfunction interpolateSphere(lobes) {\n  var coordinates = [],\n      lobe,\n      lambda0,\n      phi0,\n      phi1,\n      lambda2,\n      phi2,\n      i,\n      n = lobes[0].length; // Northern Hemisphere\n\n  for (i = 0; i < n; ++i) {\n    lobe = lobes[0][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([[lambda0 + epsilon, phi0 + epsilon], [lambda0 + epsilon, phi1 - epsilon], [lambda2 - epsilon, phi1 - epsilon], [lambda2 - epsilon, phi2 + epsilon]], 30));\n  } // Southern Hemisphere\n\n\n  for (i = lobes[1].length - 1; i >= 0; --i) {\n    lobe = lobes[1][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([[lambda2 - epsilon, phi2 - epsilon], [lambda2 - epsilon, phi1 + epsilon], [lambda0 + epsilon, phi1 + epsilon], [lambda0 + epsilon, phi0 - epsilon]], 30));\n  }\n\n  return {\n    type: \"Polygon\",\n    coordinates: [merge(coordinates)]\n  };\n}\n\nexport default function (project, lobes) {\n  var sphere = interpolateSphere(lobes);\n  lobes = lobes.map(function (lobe) {\n    return lobe.map(function (l) {\n      return [[l[0][0] * radians, l[0][1] * radians], [l[1][0] * radians, l[1][1] * radians], [l[2][0] * radians, l[2][1] * radians]];\n    });\n  });\n  var bounds = lobes.map(function (lobe) {\n    return lobe.map(function (l) {\n      var x0 = project(l[0][0], l[0][1])[0],\n          x1 = project(l[2][0], l[2][1])[0],\n          y0 = project(l[1][0], l[0][1])[1],\n          y1 = project(l[1][0], l[1][1])[1],\n          t;\n      if (y0 > y1) t = y0, y0 = y1, y1 = t;\n      return [[x0, y0], [x1, y1]];\n    });\n  });\n\n  function forward(lambda, phi) {\n    var sign = phi < 0 ? -1 : +1,\n        lobe = lobes[+(phi < 0)];\n\n    for (var i = 0, n = lobe.length - 1; i < n && lambda > lobe[i][2][0]; ++i) {\n      ;\n    }\n\n    var p = project(lambda - lobe[i][1][0], phi);\n    p[0] += project(lobe[i][1][0], sign * phi > sign * lobe[i][0][1] ? lobe[i][0][1] : phi)[0];\n    return p;\n  } // Assumes mutually exclusive bounding boxes for lobes.\n\n\n  if (project.invert) forward.invert = function (x, y) {\n    var bound = bounds[+(y < 0)],\n        lobe = lobes[+(y < 0)];\n\n    for (var i = 0, n = bound.length; i < n; ++i) {\n      var b = bound[i];\n\n      if (b[0][0] <= x && x < b[1][0] && b[0][1] <= y && y < b[1][1]) {\n        var p = project.invert(x - project(lobe[i][1][0], 0)[0], y);\n        p[0] += lobe[i][1][0];\n        return pointEqual(forward(p[0], p[1]), [x, y]) ? p : null;\n      }\n    }\n  };\n  var p = projection(forward),\n      stream_ = p.stream;\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      geoStream(sphere, sphereStream);\n    };\n\n    return rotateStream;\n  };\n\n  return p;\n}","import { boggsRaw } from \"../boggs\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-100, 90], [-40, 0]], [[-40, 0], [30, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-160, -90], [-100, 0]], [[-100, 0], [-60, -90], [-20, 0]], [[-20, 0], [20, -90], [80, 0]], [[80, 0], [140, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(boggsRaw, lobes).scale(160.857);\n}","import { homolosineRaw } from \"../homolosine\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-100, 90], [-40, 0]], [[-40, 0], [30, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-160, -90], [-100, 0]], [[-100, 0], [-60, -90], [-20, 0]], [[-20, 0], [20, -90], [80, 0]], [[80, 0], [140, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(homolosineRaw, lobes).scale(152.63);\n}","import { mollweideRaw } from \"../mollweide\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-100, 90], [-40, 0]], [[-40, 0], [30, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-160, -90], [-100, 0]], [[-100, 0], [-60, -90], [-20, 0]], [[-20, 0], [20, -90], [80, 0]], [[80, 0], [140, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(mollweideRaw, lobes).scale(169.529);\n}","import { mollweideRaw } from \"../mollweide\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-90, 90], [0, 0]], [[0, 0], [90, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-90, -90], [0, 0]], [[0, 0], [90, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(mollweideRaw, lobes).scale(169.529).rotate([20, 0]);\n}","import { sinuMollweideRaw } from \"../sinuMollweide\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 35], [-30, 90], [0, 35]], [[0, 35], [30, 90], [180, 35]]], [// southern hemisphere\n[[-180, -10], [-102, -90], [-65, -10]], [[-65, -10], [5, -90], [77, -10]], [[77, -10], [103, -90], [180, -10]]]];\nexport default function () {\n  return interrupt(sinuMollweideRaw, lobes).rotate([-20, -55]).scale(164.263).center([0, -5.4036]);\n}","import { sinusoidalRaw } from \"../sinusoidal\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-110, 90], [-40, 0]], [[-40, 0], [0, 90], [40, 0]], [[40, 0], [110, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-110, -90], [-40, 0]], [[-40, 0], [0, -90], [40, 0]], [[40, 0], [110, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(sinusoidalRaw, lobes).scale(152.63).rotate([-20, 0]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi, sqrt, tau } from \"./math\";\nexport function kavrayskiy7Raw(lambda, phi) {\n  return [3 / tau * lambda * sqrt(pi * pi / 3 - phi * phi), phi];\n}\n\nkavrayskiy7Raw.invert = function (x, y) {\n  return [tau / 3 * x / sqrt(pi * pi / 3 - y * y), y];\n};\n\nexport default function () {\n  return projection(kavrayskiy7Raw).scale(158.837);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, epsilon, halfPi, pow, sign, sin } from \"./math\";\nexport function lagrangeRaw(n) {\n  function forward(lambda, phi) {\n    if (abs(abs(phi) - halfPi) < epsilon) return [0, phi < 0 ? -2 : 2];\n    var sinPhi = sin(phi),\n        v = pow((1 + sinPhi) / (1 - sinPhi), n / 2),\n        c = 0.5 * (v + 1 / v) + cos(lambda *= n);\n    return [2 * sin(lambda) / c, (v - 1 / v) / c];\n  }\n\n  forward.invert = function (x, y) {\n    var y0 = abs(y);\n    if (abs(y0 - 2) < epsilon) return x ? null : [0, sign(y) * halfPi];\n    if (y0 > 2) return null;\n    x /= 2, y /= 2;\n    var x2 = x * x,\n        y2 = y * y,\n        t = 2 * y / (1 + x2 + y2); // tanh(nPhi)\n\n    t = pow((1 + t) / (1 - t), 1 / n);\n    return [atan2(2 * x, 1 - x2 - y2) / n, asin((t - 1) / (t + 1))];\n  };\n\n  return forward;\n}\nexport default function () {\n  var n = 0.5,\n      m = projectionMutator(lagrangeRaw),\n      p = m(n);\n\n  p.spacing = function (_) {\n    return arguments.length ? m(n = +_) : n;\n  };\n\n  return p.scale(124.75);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, cos, epsilon, halfPi, sin, pi, sqrt, sqrt2 } from \"./math\";\nvar pi_sqrt2 = pi / sqrt2;\nexport function larriveeRaw(lambda, phi) {\n  return [lambda * (1 + sqrt(cos(phi))) / 2, phi / (cos(phi / 2) * cos(lambda / 6))];\n}\n\nlarriveeRaw.invert = function (x, y) {\n  var x0 = abs(x),\n      y0 = abs(y),\n      lambda = epsilon,\n      phi = halfPi;\n  if (y0 < pi_sqrt2) phi *= y0 / pi_sqrt2;else lambda += 6 * acos(pi_sqrt2 / y0);\n\n  for (var i = 0; i < 25; i++) {\n    var sinPhi = sin(phi),\n        sqrtcosPhi = sqrt(cos(phi)),\n        sinPhi_2 = sin(phi / 2),\n        cosPhi_2 = cos(phi / 2),\n        sinLambda_6 = sin(lambda / 6),\n        cosLambda_6 = cos(lambda / 6),\n        f0 = 0.5 * lambda * (1 + sqrtcosPhi) - x0,\n        f1 = phi / (cosPhi_2 * cosLambda_6) - y0,\n        df0dPhi = sqrtcosPhi ? -0.25 * lambda * sinPhi / sqrtcosPhi : 0,\n        df0dLambda = 0.5 * (1 + sqrtcosPhi),\n        df1dPhi = (1 + 0.5 * phi * sinPhi_2 / cosPhi_2) / (cosPhi_2 * cosLambda_6),\n        df1dLambda = phi / cosPhi_2 * (sinLambda_6 / 6) / (cosLambda_6 * cosLambda_6),\n        denom = df0dPhi * df1dLambda - df1dPhi * df0dLambda,\n        dPhi = (f0 * df1dLambda - f1 * df0dLambda) / denom,\n        dLambda = (f1 * df0dPhi - f0 * df1dPhi) / denom;\n    phi -= dPhi;\n    lambda -= dLambda;\n    if (abs(dPhi) < epsilon && abs(dLambda) < epsilon) break;\n  }\n\n  return [x < 0 ? -lambda : lambda, y < 0 ? -phi : phi];\n};\n\nexport default function () {\n  return projection(larriveeRaw).scale(97.2672);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, pi, sign } from \"./math\";\nexport function laskowskiRaw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)), phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032))];\n}\n\nlaskowskiRaw.invert = function (x, y) {\n  var lambda = sign(x) * pi,\n      phi = y / 2,\n      i = 50;\n\n  do {\n    var lambda2 = lambda * lambda,\n        phi2 = phi * phi,\n        lambdaPhi = lambda * phi,\n        fx = lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)) - x,\n        fy = phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032)) - y,\n        deltaxDeltaLambda = 0.975534 - phi2 * (0.119161 + 3 * lambda2 * 0.0143059 + phi2 * 0.0547009),\n        deltaxDeltaPhi = -lambdaPhi * (2 * 0.119161 + 4 * 0.0547009 * phi2 + 2 * 0.0143059 * lambda2),\n        deltayDeltaLambda = lambdaPhi * (2 * 0.0802894 + 4 * 0.000199025 * lambda2 + 2 * -0.02855 * phi2),\n        deltayDeltaPhi = 1.00384 + lambda2 * (0.0802894 + 0.000199025 * lambda2) + phi2 * (3 * (0.0998909 - 0.02855 * lambda2) - 5 * 0.0491032 * phi2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda,\n        deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda, phi -= deltaPhi;\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n\n  return i && [lambda, phi];\n};\n\nexport default function () {\n  return projection(laskowskiRaw).scale(139.98);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { acos, asin, cos, sign, sin, tan, sqrt, sqrt1_2 } from \"./math\";\nexport function littrowRaw(lambda, phi) {\n  return [sin(lambda) / cos(phi), tan(phi) * cos(lambda)];\n}\n\nlittrowRaw.invert = function (x, y) {\n  var x2 = x * x,\n      y2 = y * y,\n      y2_1 = y2 + 1,\n      cosPhi = x ? sqrt1_2 * sqrt((y2_1 - sqrt(x2 * x2 + 2 * x2 * (y2 - 1) + y2_1 * y2_1)) / x2 + 1) : 1 / sqrt(y2_1);\n  return [asin(x * cosPhi), sign(y) * acos(cosPhi)];\n};\n\nexport default function () {\n  return projection(littrowRaw).scale(144.049).clipAngle(90 - 1e-3);\n}","import parallel1 from \"./parallel1\";\nimport { abs, cos, epsilon, halfPi, log, quarterPi, tan } from \"./math\";\nexport function loximuthalRaw(phi0) {\n  var cosPhi0 = cos(phi0),\n      tanPhi0 = tan(quarterPi + phi0 / 2);\n\n  function forward(lambda, phi) {\n    var y = phi - phi0,\n        x = abs(y) < epsilon ? lambda * cosPhi0 : abs(x = quarterPi + phi / 2) < epsilon || abs(abs(x) - halfPi) < epsilon ? 0 : lambda * y / log(tan(x) / tanPhi0);\n    return [x, y];\n  }\n\n  forward.invert = function (x, y) {\n    var lambda,\n        phi = y + phi0;\n    return [abs(y) < epsilon ? x / cosPhi0 : abs(lambda = quarterPi + phi / 2) < epsilon || abs(abs(lambda) - halfPi) < epsilon ? 0 : x * log(tan(lambda) / tanPhi0) / y, phi];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(loximuthalRaw).parallel(40).scale(158.837);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, exp, log, quarterPi, pi, tan } from \"./math\";\nexport function millerRaw(lambda, phi) {\n  return [lambda, 1.25 * log(tan(quarterPi + 0.4 * phi))];\n}\n\nmillerRaw.invert = function (x, y) {\n  return [x, 2.5 * atan(exp(0.8 * y)) - 0.625 * pi];\n};\n\nexport default function () {\n  return projection(millerRaw).scale(108.318);\n}","import { geoProjection as projection, geoRotation as rotation } from \"d3-geo\";\nimport { abs, asin, atan, atan2, cos, epsilon, sin, sqrt } from \"./math\";\nexport function modifiedStereographicRaw(C) {\n  var m = C.length - 1;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = 2 / (1 + cosPhi * cos(lambda)),\n        zr = k * cosPhi * sin(lambda),\n        zi = k * sin(phi),\n        i = m,\n        w = C[i],\n        ar = w[0],\n        ai = w[1],\n        t;\n\n    while (--i >= 0) {\n      w = C[i];\n      ar = w[0] + zr * (t = ar) - zi * ai;\n      ai = w[1] + zr * ai + zi * t;\n    }\n\n    ar = zr * (t = ar) - zi * ai;\n    ai = zr * ai + zi * t;\n    return [ar, ai];\n  }\n\n  forward.invert = function (x, y) {\n    var i = 20,\n        zr = x,\n        zi = y;\n\n    do {\n      var j = m,\n          w = C[j],\n          ar = w[0],\n          ai = w[1],\n          br = 0,\n          bi = 0,\n          t;\n\n      while (--j >= 0) {\n        w = C[j];\n        br = ar + zr * (t = br) - zi * bi;\n        bi = ai + zr * bi + zi * t;\n        ar = w[0] + zr * (t = ar) - zi * ai;\n        ai = w[1] + zr * ai + zi * t;\n      }\n\n      br = ar + zr * (t = br) - zi * bi;\n      bi = ai + zr * bi + zi * t;\n      ar = zr * (t = ar) - zi * ai - x;\n      ai = zr * ai + zi * t - y;\n      var denominator = br * br + bi * bi,\n          deltar,\n          deltai;\n      zr -= deltar = (ar * br + ai * bi) / denominator;\n      zi -= deltai = (ai * br - ar * bi) / denominator;\n    } while (abs(deltar) + abs(deltai) > epsilon * epsilon && --i > 0);\n\n    if (i) {\n      var rho = sqrt(zr * zr + zi * zi),\n          c = 2 * atan(rho * 0.5),\n          sinc = sin(c);\n      return [atan2(zr * sinc, rho * cos(c)), rho ? asin(zi * sinc / rho) : 0];\n    }\n  };\n\n  return forward;\n}\nvar alaska = [[0.9972523, 0], [0.0052513, -0.0041175], [0.0074606, 0.0048125], [-0.0153783, -0.1968253], [0.0636871, -0.1408027], [0.3660976, -0.2937382]],\n    gs48 = [[0.98879, 0], [0, 0], [-0.050909, 0], [0, 0], [0.075528, 0]],\n    gs50 = [[0.9842990, 0], [0.0211642, 0.0037608], [-0.1036018, -0.0575102], [-0.0329095, -0.0320119], [0.0499471, 0.1223335], [0.0260460, 0.0899805], [0.0007388, -0.1435792], [0.0075848, -0.1334108], [-0.0216473, 0.0776645], [-0.0225161, 0.0853673]],\n    miller = [[0.9245, 0], [0, 0], [0.01943, 0]],\n    lee = [[0.721316, 0], [0, 0], [-0.00881625, -0.00617325]];\nexport function modifiedStereographicAlaska() {\n  return modifiedStereographic(alaska, [152, -64]).scale(1500).center([-160.908, 62.4864]).clipAngle(25);\n}\nexport function modifiedStereographicGs48() {\n  return modifiedStereographic(gs48, [95, -38]).scale(1000).clipAngle(55).center([-96.5563, 38.8675]);\n}\nexport function modifiedStereographicGs50() {\n  return modifiedStereographic(gs50, [120, -45]).scale(359.513).clipAngle(55).center([-117.474, 53.0628]);\n}\nexport function modifiedStereographicMiller() {\n  return modifiedStereographic(miller, [-20, -18]).scale(209.091).center([20, 16.7214]).clipAngle(82);\n}\nexport function modifiedStereographicLee() {\n  return modifiedStereographic(lee, [165, 10]).scale(250).clipAngle(130).center([-165, -10]);\n}\nexport default function modifiedStereographic(coefficients, rotate) {\n  var p = projection(modifiedStereographicRaw(coefficients)).rotate(rotate).clipAngle(90),\n      r = rotation(rotate),\n      center = p.center;\n  delete p.rotate;\n\n  p.center = function (_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, cos, sin, sqrt } from \"./math\";\nvar sqrt6 = sqrt(6),\n    sqrt7 = sqrt(7);\nexport function mtFlatPolarParabolicRaw(lambda, phi) {\n  var theta = asin(7 * sin(phi) / (3 * sqrt6));\n  return [sqrt6 * lambda * (2 * cos(2 * theta / 3) - 1) / sqrt7, 9 * sin(theta / 3) / sqrt7];\n}\n\nmtFlatPolarParabolicRaw.invert = function (x, y) {\n  var theta = 3 * asin(y * sqrt7 / 9);\n  return [x * sqrt7 / (sqrt6 * (2 * cos(2 * theta / 3) - 1)), asin(sin(theta) * 3 * sqrt6 / 7)];\n};\n\nexport default function () {\n  return projection(mtFlatPolarParabolicRaw).scale(164.859);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, sin, sqrt, sqrt1_2, sqrt2 } from \"./math\";\nexport function mtFlatPolarQuarticRaw(lambda, phi) {\n  var k = (1 + sqrt1_2) * sin(phi),\n      theta = phi;\n\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (sin(theta / 2) + sin(theta) - k) / (0.5 * cos(theta / 2) + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n\n  return [lambda * (1 + 2 * cos(theta) / cos(theta / 2)) / (3 * sqrt2), 2 * sqrt(3) * sin(theta / 2) / sqrt(2 + sqrt2)];\n}\n\nmtFlatPolarQuarticRaw.invert = function (x, y) {\n  var sinTheta_2 = y * sqrt(2 + sqrt2) / (2 * sqrt(3)),\n      theta = 2 * asin(sinTheta_2);\n  return [3 * sqrt2 * x / (1 + 2 * cos(theta) / cos(theta / 2)), asin((sinTheta_2 + sin(theta)) / (1 + sqrt1_2))];\n};\n\nexport default function () {\n  return projection(mtFlatPolarQuarticRaw).scale(188.209);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt } from \"./math\";\nexport function mtFlatPolarSinusoidalRaw(lambda, phi) {\n  var A = sqrt(6 / (4 + pi)),\n      k = (1 + pi / 4) * sin(phi),\n      theta = phi / 2;\n\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (theta / 2 + sin(theta) - k) / (0.5 + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n\n  return [A * (0.5 + cos(theta)) * lambda / 1.5, A * theta];\n}\n\nmtFlatPolarSinusoidalRaw.invert = function (x, y) {\n  var A = sqrt(6 / (4 + pi)),\n      theta = y / A;\n  if (abs(abs(theta) - halfPi) < epsilon) theta = theta < 0 ? -halfPi : halfPi;\n  return [1.5 * x / (A * (0.5 + cos(theta))), asin((theta / 2 + sin(theta)) / (1 + pi / 4))];\n};\n\nexport default function () {\n  return projection(mtFlatPolarSinusoidalRaw).scale(166.518);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon } from \"./math\";\nexport function naturalEarthRaw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarthRaw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarthRaw).scale(175.295);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, cos, epsilon, tan } from \"./math\";\nexport function nellHammerRaw(lambda, phi) {\n  return [lambda * (1 + cos(phi)) / 2, 2 * (phi - tan(phi / 2))];\n}\n\nnellHammerRaw.invert = function (x, y) {\n  var p = y / 2;\n\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; ++i) {\n    var c = cos(y / 2);\n    y -= delta = (y - tan(y / 2) - p) / (1 - 0.5 / (c * c));\n  }\n\n  return [2 * x / (1 + cos(y)), y];\n};\n\nexport default function () {\n  return projection(nellHammerRaw).scale(152.63);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon } from \"./math\"; // Based on Java implementation by Bojan Savric.\n// https://github.com/OSUCartography/JMapProjLib/blob/master/src/com/jhlabs/map/proj/PattersonProjection.java\n\nvar pattersonK1 = 1.0148,\n    pattersonK2 = 0.23185,\n    pattersonK3 = -0.14499,\n    pattersonK4 = 0.02406,\n    pattersonC1 = pattersonK1,\n    pattersonC2 = 5 * pattersonK2,\n    pattersonC3 = 7 * pattersonK3,\n    pattersonC4 = 9 * pattersonK4,\n    pattersonYmax = 1.790857183;\nexport function pattersonRaw(lambda, phi) {\n  var phi2 = phi * phi;\n  return [lambda, phi * (pattersonK1 + phi2 * phi2 * (pattersonK2 + phi2 * (pattersonK3 + pattersonK4 * phi2)))];\n}\n\npattersonRaw.invert = function (x, y) {\n  if (y > pattersonYmax) y = pattersonYmax;else if (y < -pattersonYmax) y = -pattersonYmax;\n  var yc = y,\n      delta;\n\n  do {\n    // Newton-Raphson\n    var y2 = yc * yc;\n    yc -= delta = (yc * (pattersonK1 + y2 * y2 * (pattersonK2 + y2 * (pattersonK3 + pattersonK4 * y2))) - y) / (pattersonC1 + y2 * y2 * (pattersonC2 + y2 * (pattersonC3 + pattersonC4 * y2)));\n  } while (abs(delta) > epsilon);\n\n  return [x, yc];\n};\n\nexport default function () {\n  return projection(pattersonRaw).scale(139.319);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, asin, cos, epsilon, halfPi, sign, sin, tan } from \"./math\";\nexport function polyconicRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var tanPhi = tan(phi),\n      k = lambda * sin(phi);\n  return [sin(k) / tanPhi, phi + (1 - cos(k)) / tanPhi];\n}\n\npolyconicRaw.invert = function (x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  var k = x * x + y * y,\n      phi = y * 0.5,\n      i = 10,\n      delta;\n\n  do {\n    var tanPhi = tan(phi),\n        secPhi = 1 / cos(phi),\n        j = k - 2 * y * phi + phi * phi;\n    phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n  } while (abs(delta) > epsilon && --i > 0);\n\n  tanPhi = tan(phi);\n  return [(abs(y) < abs(phi + 1 / tanPhi) ? asin(x * tanPhi) : sign(x) * (acos(abs(x * tanPhi)) + halfPi)) / sin(phi), phi];\n};\n\nexport default function () {\n  return projection(polyconicRaw).scale(103.74);\n}","import { atan2, cos, sin, sqrt } from \"../math\"; // Note: 6-element arrays are used to denote the 3x3 affine transform matrix:\n// [a, b, c,\n//  d, e, f,\n//  0, 0, 1] - this redundant row is left out.\n// Transform matrix for [a0, a1] -> [b0, b1].\n\nexport default function (a, b) {\n  var u = subtract(a[1], a[0]),\n      v = subtract(b[1], b[0]),\n      phi = angle(u, v),\n      s = length(u) / length(v);\n  return multiply([1, 0, a[0][0], 0, 1, a[0][1]], multiply([s, 0, 0, 0, s, 0], multiply([cos(phi), sin(phi), 0, -sin(phi), cos(phi), 0], [1, 0, -b[0][0], 0, 1, -b[0][1]])));\n} // Inverts a transform matrix.\n\nexport function inverse(m) {\n  var k = 1 / (m[0] * m[4] - m[1] * m[3]);\n  return [k * m[4], -k * m[1], k * (m[1] * m[5] - m[2] * m[4]), -k * m[3], k * m[0], k * (m[2] * m[3] - m[0] * m[5])];\n} // Multiplies two 3x2 matrices.\n\nexport function multiply(a, b) {\n  return [a[0] * b[0] + a[1] * b[3], a[0] * b[1] + a[1] * b[4], a[0] * b[2] + a[1] * b[5] + a[2], a[3] * b[0] + a[4] * b[3], a[3] * b[1] + a[4] * b[4], a[3] * b[2] + a[4] * b[5] + a[5]];\n} // Subtracts 2D vectors.\n\nfunction subtract(a, b) {\n  return [a[0] - b[0], a[1] - b[1]];\n} // Magnitude of a 2D vector.\n\n\nfunction length(v) {\n  return sqrt(v[0] * v[0] + v[1] * v[1]);\n} // Angle between two 2D vectors.\n\n\nfunction angle(a, b) {\n  return atan2(a[0] * b[1] - a[1] * b[0], a[0] * b[0] + a[1] * b[1]);\n}","import { geoBounds as bounds, geoCentroid as centroid, geoInterpolate as interpolate, geoProjection as projection } from \"d3-geo\";\nimport { abs, cos, degrees, epsilon, pi, radians, sin } from \"../math\";\nimport { default as matrix, multiply, inverse } from \"./matrix\"; // Creates a polyhedral projection.\n//  * root: a spanning tree of polygon faces.  Nodes are automatically\n//    augmented with a transform matrix.\n//  * face: a function that returns the appropriate node for a given {lambda, phi}\n//    point (radians).\n//  * r: rotation angle for final polyhedral net.  Defaults to -pi / 6 (for\n//    butterflies).\n\nexport default function (root, face, r) {\n  r = r == null ? -pi / 6 : r; // TODO automate\n\n  recurse(root, {\n    transform: [cos(r), sin(r), 0, -sin(r), cos(r), 0]\n  });\n\n  function recurse(node, parent) {\n    node.edges = faceEdges(node.face); // Find shared edge.\n\n    if (parent.face) {\n      var shared = node.shared = sharedEdge(node.face, parent.face),\n          m = matrix(shared.map(parent.project), shared.map(node.project));\n      node.transform = parent.transform ? multiply(parent.transform, m) : m; // Replace shared edge in parent edges array.\n\n      var edges = parent.edges;\n\n      for (var i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = node;\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = node;\n      }\n\n      edges = node.edges;\n\n      for (i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = parent;\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = parent;\n      }\n    } else {\n      node.transform = parent.transform;\n    }\n\n    if (node.children) {\n      node.children.forEach(function (child) {\n        recurse(child, node);\n      });\n    }\n\n    return node;\n  }\n\n  function forward(lambda, phi) {\n    var node = face(lambda, phi),\n        point = node.project([lambda * degrees, phi * degrees]),\n        t;\n\n    if (t = node.transform) {\n      return [t[0] * point[0] + t[1] * point[1] + t[2], -(t[3] * point[0] + t[4] * point[1] + t[5])];\n    }\n\n    point[1] = -point[1];\n    return point;\n  } // Naive inverse!  A faster solution would use bounding boxes, or even a\n  // polygonal quadtree.\n\n\n  if (hasInverse(root)) forward.invert = function (x, y) {\n    var coordinates = faceInvert(root, [x, -y]);\n    return coordinates && (coordinates[0] *= radians, coordinates[1] *= radians, coordinates);\n  };\n\n  function faceInvert(node, coordinates) {\n    var invert = node.project.invert,\n        t = node.transform,\n        point = coordinates;\n\n    if (t) {\n      t = inverse(t);\n      point = [t[0] * point[0] + t[1] * point[1] + t[2], t[3] * point[0] + t[4] * point[1] + t[5]];\n    }\n\n    if (invert && node === faceDegrees(p = invert(point))) return p;\n    var p,\n        children = node.children;\n\n    for (var i = 0, n = children && children.length; i < n; ++i) {\n      if (p = faceInvert(children[i], coordinates)) return p;\n    }\n  }\n\n  function faceDegrees(coordinates) {\n    return face(coordinates[0] * radians, coordinates[1] * radians);\n  }\n\n  var proj = projection(forward),\n      stream_ = proj.stream;\n\n  proj.stream = function (stream) {\n    var rotate = proj.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (proj.rotate([0, 0]), stream_(stream));\n    proj.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart();\n      sphereStream.lineStart();\n      outline(sphereStream, root);\n      sphereStream.lineEnd();\n      sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return proj;\n}\n\nfunction outline(stream, node, parent) {\n  var point,\n      edges = node.edges,\n      n = edges.length,\n      edge,\n      multiPoint = {\n    type: \"MultiPoint\",\n    coordinates: node.face\n  },\n      notPoles = node.face.filter(function (d) {\n    return abs(d[1]) !== 90;\n  }),\n      b = bounds({\n    type: \"MultiPoint\",\n    coordinates: notPoles\n  }),\n      inside = false,\n      j = -1,\n      dx = b[1][0] - b[0][0]; // TODO\n\n  var c = dx === 180 || dx === 360 ? [(b[0][0] + b[1][0]) / 2, (b[0][1] + b[1][1]) / 2] : centroid(multiPoint); // First find the shared edge…\n\n  if (parent) while (++j < n) {\n    if (edges[j] === parent) break;\n  }\n  ++j;\n\n  for (var i = 0; i < n; ++i) {\n    edge = edges[(i + j) % n];\n\n    if (Array.isArray(edge)) {\n      if (!inside) {\n        stream.point((point = interpolate(edge[0], c)(epsilon))[0], point[1]);\n        inside = true;\n      }\n\n      stream.point((point = interpolate(edge[1], c)(epsilon))[0], point[1]);\n    } else {\n      inside = false;\n      if (edge !== parent) outline(stream, edge, node);\n    }\n  }\n} // Tests equality of two spherical points.\n\n\nfunction pointEqual(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1];\n} // Finds a shared edge given two clockwise polygons.\n\n\nfunction sharedEdge(a, b) {\n  var x,\n      y,\n      n = a.length,\n      found = null;\n\n  for (var i = 0; i < n; ++i) {\n    x = a[i];\n\n    for (var j = b.length; --j >= 0;) {\n      y = b[j];\n\n      if (x[0] === y[0] && x[1] === y[1]) {\n        if (found) return [found, x];\n        found = x;\n      }\n    }\n  }\n} // Converts an array of n face vertices to an array of n + 1 edges.\n\n\nfunction faceEdges(face) {\n  var n = face.length,\n      edges = [];\n\n  for (var a = face[n - 1], i = 0; i < n; ++i) {\n    edges.push([a, a = face[i]]);\n  }\n\n  return edges;\n}\n\nfunction hasInverse(node) {\n  return node.project.invert || node.children && node.children.some(hasInverse);\n}","// TODO generate on-the-fly to avoid external modification.\nvar octahedron = [[0, 90], [-90, 0], [0, 0], [90, 0], [180, 0], [0, -90]];\nexport default [[0, 2, 1], [0, 3, 2], [5, 1, 2], [5, 2, 3], [0, 1, 4], [0, 4, 3], [5, 4, 1], [5, 3, 4]].map(function (face) {\n  return face.map(function (i) {\n    return octahedron[i];\n  });\n});","import { geoCentroid as centroid, geoGnomonic as gnomonic } from \"d3-geo\";\nimport { pi } from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    });\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var faces = octahedron.map(function (face) {\n    return {\n      face: face,\n      project: faceProjection(face)\n    };\n  });\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function (d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n  return polyhedral(faces[0], function (lambda, phi) {\n    return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5];\n  }).scale(101.858).center([0, 45]);\n}","import { geoCentroid as centroid, geoProjection as projection } from \"d3-geo\";\nimport { collignonRaw } from \"../collignon\";\nimport { pi, sqrt } from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\nvar kx = 2 / sqrt(3);\n\nfunction collignonK(a, b) {\n  var p = collignonRaw(a, b);\n  return [p[0] * kx, p[1]];\n}\n\ncollignonK.invert = function (x, y) {\n  return collignonRaw.invert(x / kx, y);\n};\n\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    });\n    return projection(collignonK).translate([0, 0]).scale(1).rotate(c[1] > 0 ? [-c[0], 0] : [180 - c[0], 180]);\n  };\n\n  var faces = octahedron.map(function (face) {\n    return {\n      face: face,\n      project: faceProjection(face)\n    };\n  });\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function (d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n  return polyhedral(faces[0], function (lambda, phi) {\n    return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5];\n  }).scale(121.906).center([0, 48.5904]);\n}","import { geoCentroid as centroid, geoGnomonic as gnomonic } from \"d3-geo\";\nimport { asin, atan2, cos, degrees, max, min, pi, radians, sin } from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = face.length === 6 ? centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    }) : face[0];\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var w5 = octahedron.map(function (face) {\n    var xyz = face.map(cartesian),\n        n = xyz.length,\n        a = xyz[n - 1],\n        b,\n        hexagon = [];\n\n    for (var i = 0; i < n; ++i) {\n      b = xyz[i];\n      hexagon.push(spherical([a[0] * 0.9486832980505138 + b[0] * 0.31622776601683794, a[1] * 0.9486832980505138 + b[1] * 0.31622776601683794, a[2] * 0.9486832980505138 + b[2] * 0.31622776601683794]), spherical([b[0] * 0.9486832980505138 + a[0] * 0.31622776601683794, b[1] * 0.9486832980505138 + a[1] * 0.31622776601683794, b[2] * 0.9486832980505138 + a[2] * 0.31622776601683794]));\n      a = b;\n    }\n\n    return hexagon;\n  });\n  var cornerNormals = [];\n  var parents = [-1, 0, 0, 1, 0, 1, 4, 5];\n  w5.forEach(function (hexagon, j) {\n    var face = octahedron[j],\n        n = face.length,\n        normals = cornerNormals[j] = [];\n\n    for (var i = 0; i < n; ++i) {\n      w5.push([face[i], hexagon[(i * 2 + 2) % (2 * n)], hexagon[(i * 2 + 1) % (2 * n)]]);\n      parents.push(j);\n      normals.push(cross(cartesian(hexagon[(i * 2 + 2) % (2 * n)]), cartesian(hexagon[(i * 2 + 1) % (2 * n)])));\n    }\n  });\n  var faces = w5.map(function (face) {\n    return {\n      project: faceProjection(face),\n      face: face\n    };\n  });\n  parents.forEach(function (d, i) {\n    var parent = faces[d];\n    parent && (parent.children || (parent.children = [])).push(faces[i]);\n  });\n\n  function face(lambda, phi) {\n    var cosphi = cos(phi),\n        p = [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n    var hexagon = lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5;\n    var n = cornerNormals[hexagon];\n    return faces[dot(n[0], p) < 0 ? 8 + 3 * hexagon : dot(n[1], p) < 0 ? 8 + 3 * hexagon + 1 : dot(n[2], p) < 0 ? 8 + 3 * hexagon + 2 : hexagon];\n  }\n\n  return polyhedral(faces[0], face).scale(110.625).center([0, 45]);\n}\n\nfunction dot(a, b) {\n  for (var i = 0, n = a.length, s = 0; i < n; ++i) {\n    s += a[i] * b[i];\n  }\n\n  return s;\n}\n\nfunction cross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // Converts 3D Cartesian to spherical coordinates (degrees).\n\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]) * degrees, asin(max(-1, min(1, cartesian[2]))) * degrees];\n} // Converts spherical coordinates (degrees) to 3D Cartesian.\n\n\nfunction cartesian(coordinates) {\n  var lambda = coordinates[0] * radians,\n      phi = coordinates[1] * radians,\n      cosphi = cos(phi);\n  return [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n}","export default function () {}","import { geoStream } from \"d3-geo\";\nimport noop from \"../noop\";\nimport clockwise from \"./clockwise\";\nimport contains from \"./contains\";\nexport default function (object, projection) {\n  var stream = projection.stream,\n      project;\n  if (!stream) throw new Error(\"invalid projection\");\n\n  switch (object && object.type) {\n    case \"Feature\":\n      project = projectFeature;\n      break;\n\n    case \"FeatureCollection\":\n      project = projectFeatureCollection;\n      break;\n\n    default:\n      project = projectGeometry;\n      break;\n  }\n\n  return project(object, stream);\n}\n\nfunction projectFeatureCollection(o, stream) {\n  return {\n    type: \"FeatureCollection\",\n    features: o.features.map(function (f) {\n      return projectFeature(f, stream);\n    })\n  };\n}\n\nfunction projectFeature(o, stream) {\n  return {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties,\n    geometry: projectGeometry(o.geometry, stream)\n  };\n}\n\nfunction projectGeometryCollection(o, stream) {\n  return {\n    type: \"GeometryCollection\",\n    geometries: o.geometries.map(function (o) {\n      return projectGeometry(o, stream);\n    })\n  };\n}\n\nfunction projectGeometry(o, stream) {\n  if (!o) return null;\n  if (o.type === \"GeometryCollection\") return projectGeometryCollection(o, stream);\n  var sink;\n\n  switch (o.type) {\n    case \"Point\":\n      sink = sinkPoint;\n      break;\n\n    case \"MultiPoint\":\n      sink = sinkPoint;\n      break;\n\n    case \"LineString\":\n      sink = sinkLine;\n      break;\n\n    case \"MultiLineString\":\n      sink = sinkLine;\n      break;\n\n    case \"Polygon\":\n      sink = sinkPolygon;\n      break;\n\n    case \"MultiPolygon\":\n      sink = sinkPolygon;\n      break;\n\n    case \"Sphere\":\n      sink = sinkPolygon;\n      break;\n\n    default:\n      return null;\n  }\n\n  geoStream(o, stream(sink));\n  return sink.result();\n}\n\nvar points = [],\n    lines = [];\nvar sinkPoint = {\n  point: function point(x, y) {\n    points.push([x, y]);\n  },\n  result: function result() {\n    var result = !points.length ? null : points.length < 2 ? {\n      type: \"Point\",\n      coordinates: points[0]\n    } : {\n      type: \"MultiPoint\",\n      coordinates: points\n    };\n    points = [];\n    return result;\n  }\n};\nvar sinkLine = {\n  lineStart: noop,\n  point: function point(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function lineEnd() {\n    if (points.length) lines.push(points), points = [];\n  },\n  result: function result() {\n    var result = !lines.length ? null : lines.length < 2 ? {\n      type: \"LineString\",\n      coordinates: lines[0]\n    } : {\n      type: \"MultiLineString\",\n      coordinates: lines\n    };\n    lines = [];\n    return result;\n  }\n};\nvar sinkPolygon = {\n  polygonStart: noop,\n  lineStart: noop,\n  point: function point(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function lineEnd() {\n    var n = points.length;\n\n    if (n) {\n      do {\n        points.push(points[0].slice());\n      } while (++n < 4);\n\n      lines.push(points), points = [];\n    }\n  },\n  polygonEnd: noop,\n  result: function result() {\n    if (!lines.length) return null;\n    var polygons = [],\n        holes = []; // https://github.com/d3/d3/issues/1558\n\n    lines.forEach(function (ring) {\n      if (clockwise(ring)) polygons.push([ring]);else holes.push(ring);\n    });\n    holes.forEach(function (hole) {\n      var point = hole[0];\n      polygons.some(function (polygon) {\n        if (contains(polygon[0], point)) {\n          polygon.push(hole);\n          return true;\n        }\n      }) || polygons.push([hole]);\n    });\n    lines = [];\n    return !polygons.length ? null : polygons.length > 1 ? {\n      type: \"MultiPolygon\",\n      coordinates: polygons\n    } : {\n      type: \"Polygon\",\n      coordinates: polygons[0]\n    };\n  }\n};","export default function (ring) {\n  if ((n = ring.length) < 4) return false;\n  var i = 0,\n      n,\n      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n\n  while (++i < n) {\n    area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  }\n\n  return area <= 0;\n}","export default function (ring, point) {\n  var x = point[0],\n      y = point[1],\n      contains = false;\n\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i],\n        xi = pi[0],\n        yi = pi[1],\n        pj = ring[j],\n        xj = pj[0],\n        yj = pj[1];\n    if (yi > y ^ yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = !contains;\n  }\n\n  return contains;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, halfPi, pi, sign, sqrt1_2 } from \"../math\";\nexport default function (project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectQuincuncial(lambda, phi) {\n    var t = abs(lambda) < halfPi,\n        p = project(t ? lambda : lambda > 0 ? lambda - pi : lambda + pi, phi),\n        x = (p[0] - p[1]) * sqrt1_2,\n        y = (p[0] + p[1]) * sqrt1_2;\n    if (t) return [x, y];\n    var d = dx * sqrt1_2,\n        s = x > 0 ^ y > 0 ? -1 : 1;\n    return [s * x - sign(y) * d, s * y - sign(x) * d];\n  }\n\n  if (project.invert) projectQuincuncial.invert = function (x0, y0) {\n    var x = (x0 + y0) * sqrt1_2,\n        y = (y0 - x0) * sqrt1_2,\n        t = abs(x) < 0.5 * dx && abs(y) < 0.5 * dx;\n\n    if (!t) {\n      var d = dx * sqrt1_2,\n          s = x > 0 ^ y > 0 ? -1 : 1,\n          x1 = -s * (x0 + (y > 0 ? 1 : -1) * d),\n          y1 = -s * (y0 + (x > 0 ? 1 : -1) * d);\n      x = (-x1 - y1) * sqrt1_2;\n      y = (x1 - y1) * sqrt1_2;\n    }\n\n    var p = project.invert(x, y);\n    if (!t) p[0] += x > 0 ? pi : -pi;\n    return p;\n  };\n  return projection(projectQuincuncial).rotate([-90, -90, 45]).clipAngle(180 - 1e-3);\n}","import { gringortenRaw } from \"../gringorten\";\nimport quincuncial from \"./index\";\nexport default function () {\n  return quincuncial(gringortenRaw).scale(176.423);\n}","import { guyouRaw } from \"../guyou\";\nimport quincuncial from \"./index\";\nexport default function () {\n  return quincuncial(guyouRaw).scale(111.48);\n}","export default function (o, digits) {\n  if (!(0 <= (digits = +digits) && digits <= 20)) throw new Error(\"invalid digits\");\n\n  function quantizePoint(coordinates) {\n    coordinates[0] = +coordinates[0].toFixed(digits);\n    coordinates[1] = +coordinates[1].toFixed(digits);\n  }\n\n  function quantizePoints(coordinates) {\n    coordinates.forEach(quantizePoint);\n  }\n\n  function quantizePolygon(coordinates) {\n    coordinates.forEach(quantizePoints);\n  }\n\n  function quantizeGeometry(o) {\n    if (o) switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(quantizeGeometry);\n        break;\n\n      case \"Point\":\n        quantizePoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n      case \"LineString\":\n        quantizePoints(o.coordinates);\n        break;\n\n      case \"MultiLineString\":\n      case \"Polygon\":\n        quantizePolygon(o.coordinates);\n        break;\n\n      case \"MultiPolygon\":\n        o.coordinates.forEach(quantizePolygon);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  function quantizeFeature(o) {\n    quantizeGeometry(o.geometry);\n  }\n\n  if (o) switch (o.type) {\n    case \"Feature\":\n      quantizeFeature(o);\n      break;\n\n    case \"FeatureCollection\":\n      o.features.forEach(quantizeFeature);\n      break;\n\n    default:\n      quantizeGeometry(o);\n      break;\n  }\n  return o;\n}","import { abs, acos, asin, atan, cos, epsilon, pi, sin, tan } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function rectangularPolyconicRaw(phi0) {\n  var sinPhi0 = sin(phi0);\n\n  function forward(lambda, phi) {\n    var A = sinPhi0 ? tan(lambda * sinPhi0 / 2) / sinPhi0 : lambda / 2;\n    if (!phi) return [2 * A, -phi0];\n    var E = 2 * atan(A * sin(phi)),\n        cotPhi = 1 / tan(phi);\n    return [sin(E) * cotPhi, phi + (1 - cos(E)) * cotPhi - phi0];\n  } // TODO return null for points outside outline.\n\n\n  forward.invert = function (x, y) {\n    if (abs(y += phi0) < epsilon) return [sinPhi0 ? 2 * atan(sinPhi0 * x / 2) / sinPhi0 : x, 0];\n    var k = x * x + y * y,\n        phi = 0,\n        i = 10,\n        delta;\n\n    do {\n      var tanPhi = tan(phi),\n          secPhi = 1 / cos(phi),\n          j = k - 2 * y * phi + phi * phi;\n      phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n    } while (abs(delta) > epsilon && --i > 0);\n\n    var E = x * (tanPhi = tan(phi)),\n        A = tan(abs(y) < abs(phi + 1 / tanPhi) ? asin(E) * 0.5 : acos(E) * 0.5 + pi / 4) / sin(phi);\n    return [sinPhi0 ? 2 * atan(sinPhi0 * A) / sinPhi0 : 2 * A, phi];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(rectangularPolyconicRaw).scale(131.215);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, degrees, epsilon2, floor, halfPi, max, min, pi, radians } from \"./math\";\nvar K = [[0.9986, -0.062], [1.0000, 0.0000], [0.9986, 0.0620], [0.9954, 0.1240], [0.9900, 0.1860], [0.9822, 0.2480], [0.9730, 0.3100], [0.9600, 0.3720], [0.9427, 0.4340], [0.9216, 0.4958], [0.8962, 0.5571], [0.8679, 0.6176], [0.8350, 0.6769], [0.7986, 0.7346], [0.7597, 0.7903], [0.7186, 0.8435], [0.6732, 0.8936], [0.6213, 0.9394], [0.5722, 0.9761], [0.5322, 1.0000]];\nK.forEach(function (d) {\n  d[1] *= 1.0144;\n});\nexport function robinsonRaw(lambda, phi) {\n  var i = min(18, abs(phi) * 36 / pi),\n      i0 = floor(i),\n      di = i - i0,\n      ax = (k = K[i0])[0],\n      ay = k[1],\n      bx = (k = K[++i0])[0],\n      by = k[1],\n      cx = (k = K[min(19, ++i0)])[0],\n      cy = k[1],\n      k;\n  return [lambda * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), (phi > 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2)];\n}\n\nrobinsonRaw.invert = function (x, y) {\n  var yy = y / halfPi,\n      phi = yy * 90,\n      i = min(18, abs(phi / 5)),\n      i0 = max(0, floor(i));\n\n  do {\n    var ay = K[i0][1],\n        by = K[i0 + 1][1],\n        cy = K[min(19, i0 + 2)][1],\n        u = cy - ay,\n        v = cy - 2 * by + ay,\n        t = 2 * (abs(yy) - by) / u,\n        c = v / u,\n        di = t * (1 - c * t * (1 - 2 * c * t));\n\n    if (di >= 0 || i0 === 1) {\n      phi = (y >= 0 ? 5 : -5) * (di + i);\n      var j = 50,\n          delta;\n\n      do {\n        i = min(18, abs(phi) / 5);\n        i0 = floor(i);\n        di = i - i0;\n        ay = K[i0][1];\n        by = K[i0 + 1][1];\n        cy = K[min(19, i0 + 2)][1];\n        phi -= (delta = (y >= 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * degrees;\n      } while (abs(delta) > epsilon2 && --j > 0);\n\n      break;\n    }\n  } while (--i0 >= 0);\n\n  var ax = K[i0][0],\n      bx = K[i0 + 1][0],\n      cx = K[min(19, i0 + 2)][0];\n  return [x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), phi * radians];\n};\n\nexport default function () {\n  return projection(robinsonRaw).scale(152.63);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { acos, asin, atan2, cos, degrees, radians, sin, sqrt } from \"./math\";\n\nfunction satelliteVerticalRaw(P) {\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = (P - 1) / (P - cosPhi * cos(lambda));\n    return [k * cosPhi * sin(lambda), k * sin(phi)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho2 = x * x + y * y,\n        rho = sqrt(rho2),\n        sinc = (P - sqrt(1 - rho2 * (P + 1) / (P - 1))) / ((P - 1) / rho + rho / (P - 1));\n    return [atan2(x * sinc, rho * sqrt(1 - sinc * sinc)), rho ? asin(y * sinc / rho) : 0];\n  };\n\n  return forward;\n}\n\nexport function satelliteRaw(P, omega) {\n  var vertical = satelliteVerticalRaw(P);\n  if (!omega) return vertical;\n  var cosOmega = cos(omega),\n      sinOmega = sin(omega);\n\n  function forward(lambda, phi) {\n    var coordinates = vertical(lambda, phi),\n        y = coordinates[1],\n        A = y * sinOmega / (P - 1) + cosOmega;\n    return [coordinates[0] * cosOmega / A, y / A];\n  }\n\n  forward.invert = function (x, y) {\n    var k = (P - 1) / (P - 1 - y * sinOmega);\n    return vertical.invert(k * x, k * y * cosOmega);\n  };\n\n  return forward;\n}\nexport default function () {\n  var distance = 2,\n      omega = 0,\n      m = projectionMutator(satelliteRaw),\n      p = m(distance, omega); // As a multiple of radius.\n\n  p.distance = function (_) {\n    if (!arguments.length) return distance;\n    return m(distance = +_, omega);\n  };\n\n  p.tilt = function (_) {\n    if (!arguments.length) return omega * degrees;\n    return m(distance, omega = _ * radians);\n  };\n\n  return p.scale(432.147).clipAngle(acos(1 / distance) * degrees - 1e-6);\n}","var epsilon = 1e-4,\n    epsilonInverse = 1e4,\n    x0 = -180,\n    x0e = x0 + epsilon,\n    x1 = 180,\n    x1e = x1 - epsilon,\n    y0 = -90,\n    y0e = y0 + epsilon,\n    y1 = 90,\n    y1e = y1 - epsilon;\n\nfunction quantize(x) {\n  return Math.floor(x * epsilonInverse) / epsilonInverse;\n}\n\nfunction normalizePoint(y) {\n  return y === y0 || y === y1 ? [0, y] // pole\n  : [x0, quantize(y)]; // antimeridian\n}\n\nfunction clampPoint(p) {\n  if (p[0] <= x0e) p[0] = x0;else if (p[0] >= x1e) p[0] = x1;\n  if (p[1] <= y0e) p[1] = y0;else if (p[1] >= y1e) p[1] = y1;\n}\n\nfunction clampPoints(points) {\n  points.forEach(clampPoint);\n} // For each ring, detect where it crosses the antimeridian or pole.\n\n\nfunction extractFragments(polygon, fragments) {\n  for (var j = 0, m = polygon.length; j < m; ++j) {\n    var ring = polygon[j];\n    ring.polygon = polygon; // By default, assume that this ring doesn’t need any stitching.\n\n    fragments.push(ring);\n\n    for (var i = 0, n = ring.length; i < n; ++i) {\n      var point = ring[i],\n          x = point[0],\n          y = point[1]; // If this is an antimeridian or polar point…\n\n      if (x <= x0e || x >= x1e || y <= y0e || y >= y1e) {\n        clampPoint(point); // Advance through any antimeridian or polar points…\n\n        for (var k = i + 1; k < n; ++k) {\n          var pointk = ring[k],\n              xk = pointk[0],\n              yk = pointk[1];\n          if (xk > x0e && xk < x1e && yk > y0e && yk < y1e) break;\n        } // If this was just a single antimeridian or polar point,\n        // we don’t need to cut this ring into a fragment;\n        // we can just leave it as-is.\n\n\n        if (k === i + 1) continue; // Otherwise, if this is not the first point in the ring,\n        // cut the current fragment so that it ends at the current point.\n        // The current point is also normalized for later joining.\n\n        if (i) {\n          var fragmentBefore = ring.slice(0, i + 1);\n          fragmentBefore.polygon = polygon;\n          fragmentBefore[fragmentBefore.length - 1] = normalizePoint(y);\n          fragments[fragments.length - 1] = fragmentBefore;\n        } // If the ring started with an antimeridian fragment,\n        // we can ignore that fragment entirely.\n        else fragments.pop(); // If the remainder of the ring is an antimeridian fragment,\n        // move on to the next ring.\n\n\n        if (k >= n) break; // Otherwise, add the remaining ring fragment and continue.\n\n        fragments.push(ring = ring.slice(k - 1));\n        ring[0] = normalizePoint(ring[0][1]);\n        ring.polygon = polygon;\n        i = -1;\n        n = ring.length;\n      }\n    }\n  }\n\n  polygon.length = 0;\n} // Now stitch the fragments back together into rings.\n// TODO remove empty polygons.\n\n\nfunction stitchFragments(fragments) {\n  var i,\n      n = fragments.length; // To connect the fragments start-to-end, create a simple index by end.\n\n  var fragmentByStart = {},\n      fragmentByEnd = {},\n      fragment,\n      start,\n      startFragment,\n      end,\n      endFragment; // For each fragment…\n\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n    start = fragment[0];\n    end = fragment[fragment.length - 1]; // If this fragment is closed, add it as a standalone ring.\n\n    if (start[0] === end[0] && start[1] === end[1]) {\n      fragment.polygon.push(fragment);\n      fragments[i] = null;\n      continue;\n    }\n\n    fragment.index = i;\n    fragmentByStart[start] = fragmentByEnd[end] = fragment;\n  } // For each open fragment…\n\n\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n\n    if (fragment) {\n      start = fragment[0];\n      end = fragment[fragment.length - 1];\n      startFragment = fragmentByEnd[start];\n      endFragment = fragmentByStart[end];\n      delete fragmentByStart[start];\n      delete fragmentByEnd[end]; // If this fragment is closed, add it as a standalone ring.\n\n      if (start[0] === end[0] && start[1] === end[1]) {\n        fragment.polygon.push(fragment);\n        continue;\n      }\n\n      if (startFragment) {\n        delete fragmentByEnd[start];\n        delete fragmentByStart[startFragment[0]];\n        startFragment.pop(); // drop the shared coordinate\n\n        fragments[startFragment.index] = null;\n        fragment = startFragment.concat(fragment);\n        fragment.polygon = startFragment.polygon;\n\n        if (startFragment === endFragment) {\n          // Connect both ends to this single fragment to create a ring.\n          fragment.polygon.push(fragment);\n        } else {\n          fragment.index = n++;\n          fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n        }\n      } else if (endFragment) {\n        delete fragmentByStart[end];\n        delete fragmentByEnd[endFragment[endFragment.length - 1]];\n        fragment.pop(); // drop the shared coordinate\n\n        fragment = fragment.concat(endFragment);\n        fragment.polygon = endFragment.polygon;\n        fragment.index = n++;\n        fragments[endFragment.index] = null;\n        fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n      } else {\n        fragment.push(fragment[0]); // close ring\n\n        fragment.polygon.push(fragment);\n      }\n    }\n  }\n}\n\nfunction stitchFeature(o) {\n  stitchGeometry(o.geometry);\n}\n\nfunction stitchGeometry(o) {\n  if (!o) return;\n  var fragments, i, n;\n\n  switch (o.type) {\n    case \"GeometryCollection\":\n      {\n        o.geometries.forEach(stitchGeometry);\n        return;\n      }\n\n    case \"Point\":\n      {\n        clampPoint(o.coordinates);\n        break;\n      }\n\n    case \"MultiPoint\":\n    case \"LineString\":\n      {\n        clampPoints(o.coordinates);\n        break;\n      }\n\n    case \"MultiLineString\":\n      {\n        o.coordinates.forEach(clampPoints);\n        break;\n      }\n\n    case \"Polygon\":\n      {\n        extractFragments(o.coordinates, fragments = []);\n        break;\n      }\n\n    case \"MultiPolygon\":\n      {\n        fragments = [], i = -1, n = o.coordinates.length;\n\n        while (++i < n) {\n          extractFragments(o.coordinates[i], fragments);\n        }\n\n        break;\n      }\n\n    default:\n      return;\n  }\n\n  stitchFragments(fragments);\n}\n\nexport default function (o) {\n  if (o) switch (o.type) {\n    case \"Feature\":\n      stitchFeature(o);\n      break;\n\n    case \"FeatureCollection\":\n      o.features.forEach(stitchFeature);\n      break;\n\n    default:\n      stitchGeometry(o);\n      break;\n  }\n  return o;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, quarterPi, sin, tan } from \"./math\";\nexport function timesRaw(lambda, phi) {\n  var t = tan(phi / 2),\n      s = sin(quarterPi * t);\n  return [lambda * (0.74482 - 0.34588 * s * s), 1.70711 * t];\n}\n\ntimesRaw.invert = function (x, y) {\n  var t = y / 1.70711,\n      s = sin(quarterPi * t);\n  return [x / (0.74482 - 0.34588 * s * s), 2 * atan(t)];\n};\n\nexport default function () {\n  return projection(timesRaw).scale(146.153);\n}","import { geoInterpolate as interpolate, geoProjection as projection, geoRotation as rotation } from \"d3-geo\";\nimport { asin, degrees, pi, sin, radians } from \"./math\"; // Compute the origin as the midpoint of the two reference points.\n// Rotate one of the reference points by the origin.\n// Apply the spherical law of sines to compute gamma rotation.\n\nexport default function (raw, p0, p1) {\n  var i = interpolate(p0, p1),\n      o = i(0.5),\n      a = rotation([-o[0], -o[1]])(p0),\n      b = i.distance / 2,\n      y = -asin(sin(a[1] * radians) / sin(b)),\n      R = [-o[0], -o[1], -(a[0] > 0 ? pi - y : y) * degrees],\n      p = projection(raw(b)).rotate(R),\n      r = rotation(R),\n      center = p.center;\n  delete p.rotate;\n\n  p.center = function (_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p.clipAngle(90);\n}","import { geoGnomonicRaw as gnomonicRaw } from \"d3-geo\";\nimport { cos } from \"./math\";\nimport twoPoint from \"./twoPoint\";\nexport function twoPointAzimuthalRaw(d) {\n  var cosd = cos(d);\n\n  function forward(lambda, phi) {\n    var coordinates = gnomonicRaw(lambda, phi);\n    coordinates[0] *= cosd;\n    return coordinates;\n  }\n\n  forward.invert = function (x, y) {\n    return gnomonicRaw.invert(x / cosd, y);\n  };\n\n  return forward;\n}\nexport function twoPointAzimuthalUsa() {\n  return twoPointAzimuthal([-158, 21.5], [-77, 39]).clipAngle(60).scale(400);\n}\nexport default function twoPointAzimuthal(p0, p1) {\n  return twoPoint(twoPointAzimuthalRaw, p0, p1);\n}","import { geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw } from \"d3-geo\";\nimport { acos, atan2, cos, sin, sqrt, tan } from \"./math\";\nimport twoPoint from \"./twoPoint\"; // TODO clip to ellipse\n\nexport function twoPointEquidistantRaw(z0) {\n  if (!(z0 *= 2)) return azimuthalEquidistantRaw;\n  var lambdaa = -z0 / 2,\n      lambdab = -lambdaa,\n      z02 = z0 * z0,\n      tanLambda0 = tan(lambdab),\n      S = 0.5 / sin(lambdab);\n\n  function forward(lambda, phi) {\n    var za = acos(cos(phi) * cos(lambda - lambdaa)),\n        zb = acos(cos(phi) * cos(lambda - lambdab)),\n        ys = phi < 0 ? -1 : 1;\n    za *= za, zb *= zb;\n    return [(za - zb) / (2 * z0), ys * sqrt(4 * z02 * zb - (z02 - za + zb) * (z02 - za + zb)) / (2 * z0)];\n  }\n\n  forward.invert = function (x, y) {\n    var y2 = y * y,\n        cosza = cos(sqrt(y2 + (t = x + lambdaa) * t)),\n        coszb = cos(sqrt(y2 + (t = x + lambdab) * t)),\n        t,\n        d;\n    return [atan2(d = cosza - coszb, t = (cosza + coszb) * tanLambda0), (y < 0 ? -1 : 1) * acos(sqrt(t * t + d * d) * S)];\n  };\n\n  return forward;\n}\nexport function twoPointEquidistantUsa() {\n  return twoPointEquidistant([-158, 21.5], [-77, 39]).clipAngle(130).scale(122.571);\n}\nexport default function twoPointEquidistant(p0, p1) {\n  return twoPoint(twoPointEquidistantRaw, p0, p1);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan } from \"./math\";\nexport function vanDerGrintenRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      G = cosTheta / (sinTheta + cosTheta - 1),\n      P = G * (2 / sinTheta - 1),\n      P2 = P * P,\n      P2_A2 = P2 + A2,\n      G_P2 = G - P2,\n      Q = A2 + G;\n  return [sign(lambda) * pi * (A * G_P2 + sqrt(A2 * G_P2 * G_P2 - P2_A2 * (G * G - P2))) / P2_A2, sign(phi) * pi * (P * Q - A * sqrt((A2 + 1) * P2_A2 - Q * Q)) / P2_A2];\n}\n\nvanDerGrintenRaw.invert = function (x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  if (abs(x) < epsilon) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x2 = (x /= pi) * x,\n      y2 = (y /= pi) * y,\n      x2_y2 = x2 + y2,\n      z = x2_y2 * x2_y2,\n      c1 = -abs(y) * (1 + x2_y2),\n      c2 = c1 - 2 * y2 + x2,\n      c3 = -2 * c1 + 1 + 2 * y2 + z,\n      d = y2 / c3 + (2 * c2 * c2 * c2 / (c3 * c3 * c3) - 9 * c1 * c2 / (c3 * c3)) / 27,\n      a1 = (c1 - c2 * c2 / (3 * c3)) / c3,\n      m1 = 2 * sqrt(-a1 / 3),\n      theta1 = acos(3 * d / (a1 * m1)) / 3;\n  return [pi * (x2_y2 - 1 + sqrt(1 + 2 * (x2 - y2) + z)) / (2 * x), sign(y) * pi * (-m1 * cos(theta1 + pi / 3) - c2 / (3 * c3))];\n};\n\nexport default function () {\n  return projection(vanDerGrintenRaw).scale(79.4183);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, atan, atan2, cos, halfPi, epsilon, pi, sign, sin, sqrt, tan } from \"./math\";\nexport function vanDerGrinten2Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      x1 = cosTheta * (sqrt(1 + A2) - A * cosTheta) / (1 + A2 * sinTheta * sinTheta);\n  return [sign(lambda) * pi * x1, sign(phi) * pi * sqrt(1 - x1 * (2 * A + x1))];\n}\n\nvanDerGrinten2Raw.invert = function (x, y) {\n  if (!x) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x1 = abs(x / pi),\n      A = (1 - x1 * x1 - (y /= pi) * y) / (2 * x1),\n      A2 = A * A,\n      B = sqrt(A2 + 1);\n  return [sign(x) * pi * (B - A), sign(y) * halfPi * sin(2 * atan2(sqrt((1 - 2 * A * x1) * (A + B) - x1), sqrt(B + A + x1)))];\n};\n\nexport default function () {\n  return projection(vanDerGrinten2Raw).scale(79.4183);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan } from \"./math\";\nexport function vanDerGrinten3Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = phi / halfPi,\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, pi * tan(theta / 2)];\n  var A = (pi / lambda - lambda / pi) / 2,\n      y1 = sinTheta / (1 + cos(theta));\n  return [pi * (sign(lambda) * sqrt(A * A + 1 - y1 * y1) - A), pi * y1];\n}\n\nvanDerGrinten3Raw.invert = function (x, y) {\n  if (!y) return [x, 0];\n  var y1 = y / pi,\n      A = (pi * pi * (1 - y1 * y1) - x * x) / (2 * pi * x);\n  return [x ? pi * (sign(x) * sqrt(A * A + 1) - A) : 0, halfPi * sin(2 * atan(y1))];\n};\n\nexport default function () {\n  return projection(vanDerGrinten3Raw).scale(79.4183);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, halfPi, pi, sign, sqrt } from \"./math\";\nexport function vanDerGrinten4Raw(lambda, phi) {\n  if (!phi) return [lambda, 0];\n  var phi0 = abs(phi);\n  if (!lambda || phi0 === halfPi) return [0, phi];\n  var B = phi0 / halfPi,\n      B2 = B * B,\n      C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n      C2 = C * C,\n      BC = B * C,\n      B_C2 = B2 + C2 + 2 * BC,\n      B_3C = B + 3 * C,\n      lambda0 = lambda / halfPi,\n      lambda1 = lambda0 + 1 / lambda0,\n      D = sign(abs(lambda) - halfPi) * sqrt(lambda1 * lambda1 - 4),\n      D2 = D * D,\n      F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2),\n      x1 = (D * (B_C2 + C2 - 1) + 2 * sqrt(F)) / (4 * B_C2 + D2);\n  return [sign(lambda) * halfPi * x1, sign(phi) * halfPi * sqrt(1 + D * abs(x1) - x1 * x1)];\n}\n\nvanDerGrinten4Raw.invert = function (x, y) {\n  var delta;\n  if (!x || !y) return [x, y];\n  y /= pi;\n  var x1 = sign(x) * x / halfPi,\n      D = (x1 * x1 - 1 + 4 * y * y) / abs(x1),\n      D2 = D * D,\n      B = 2 * y,\n      i = 50;\n\n  do {\n    var B2 = B * B,\n        C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n        C_ = (3 * B - B2 * B - 10) / (2 * B2 * B),\n        C2 = C * C,\n        BC = B * C,\n        B_C = B + C,\n        B_C2 = B_C * B_C,\n        B_3C = B + 3 * C,\n        F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)),\n        F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)),\n        sqrtF = sqrt(F),\n        f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2),\n        f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);\n    B -= delta = f / f_;\n  } while (delta > epsilon && --i > 0);\n\n  return [sign(x) * (sqrt(D * D + 4) + D) * pi / 4, halfPi * B];\n};\n\nexport default function () {\n  return projection(vanDerGrinten4Raw).scale(127.16);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { sqrt, pi } from \"./math\";\nimport { mollweideBromleyRaw } from \"./mollweide\";\nvar A = 4 * pi + 3 * sqrt(3),\n    B = 2 * sqrt(2 * pi * sqrt(3) / A);\nexport var wagner4Raw = mollweideBromleyRaw(B * sqrt(3) / pi, B, A / 6);\nexport default function () {\n  return projection(wagner4Raw).scale(176.84);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi, sqrt } from \"./math\";\nexport function wagner6Raw(lambda, phi) {\n  return [lambda * sqrt(1 - 3 * phi * phi / (pi * pi)), phi];\n}\n\nwagner6Raw.invert = function (x, y) {\n  return [x / sqrt(1 - 3 * y * y / (pi * pi)), y];\n};\n\nexport default function () {\n  return projection(wagner6Raw).scale(152.63);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, atan2, cos, sin, sqrt, tan } from \"./math\";\nexport function wagner7Raw(lambda, phi) {\n  var s = 0.90631 * sin(phi),\n      c0 = sqrt(1 - s * s),\n      c1 = sqrt(2 / (1 + c0 * cos(lambda /= 3)));\n  return [2.66723 * c0 * c1 * sin(lambda), 1.24104 * s * c1];\n}\n\nwagner7Raw.invert = function (x, y) {\n  var t1 = x / 2.66723,\n      t2 = y / 1.24104,\n      p = sqrt(t1 * t1 + t2 * t2),\n      c = 2 * asin(p / 2);\n  return [3 * atan2(x * tan(c), 2.66723 * p), p && asin(y * sin(c) / (1.24104 * 0.90631 * p))];\n};\n\nexport default function () {\n  return projection(wagner7Raw).scale(172.632);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function wiechelRaw(lambda, phi) {\n  var cosPhi = cos(phi),\n      sinPhi = cos(lambda) * cosPhi,\n      sin1_Phi = 1 - sinPhi,\n      cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))),\n      sinLambda = sin(lambda);\n  cosPhi = sqrt(1 - sinPhi * sinPhi);\n  return [sinLambda * cosPhi - cosLambda * sin1_Phi, -cosLambda * cosPhi - sinLambda * sin1_Phi];\n}\n\nwiechelRaw.invert = function (x, y) {\n  var w = (x * x + y * y) / -2,\n      k = sqrt(-w * (2 + w)),\n      b = y * w + x * k,\n      a = x * w - y * k,\n      D = sqrt(a * a + b * b);\n  return [atan2(k * b, D * (1 + w)), D ? -asin(k * a / D) : 0];\n};\n\nexport default function () {\n  return projection(wiechelRaw).rotate([0, -90, 45]).scale(124.75).clipAngle(180 - 1e-3);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { aitoffRaw } from \"./aitoff\";\nimport { halfPi, epsilon, sin, cos, sqrt, abs, acos } from \"./math\";\nexport function winkel3Raw(lambda, phi) {\n  var coordinates = aitoffRaw(lambda, phi);\n  return [(coordinates[0] + lambda / halfPi) / 2, (coordinates[1] + phi) / 2];\n}\n\nwinkel3Raw.invert = function (x, y) {\n  var lambda = x,\n      phi = y,\n      i = 25;\n\n  do {\n    var cosphi = cos(phi),\n        sinphi = sin(phi),\n        sin_2phi = sin(2 * phi),\n        sin2phi = sinphi * sinphi,\n        cos2phi = cosphi * cosphi,\n        sinlambda = sin(lambda),\n        coslambda_2 = cos(lambda / 2),\n        sinlambda_2 = sin(lambda / 2),\n        sin2lambda_2 = sinlambda_2 * sinlambda_2,\n        C = 1 - cos2phi * coslambda_2 * coslambda_2,\n        E = C ? acos(cosphi * coslambda_2) * sqrt(F = 1 / C) : F = 0,\n        F,\n        fx = 0.5 * (2 * E * cosphi * sinlambda_2 + lambda / halfPi) - x,\n        fy = 0.5 * (E * sinphi + phi) - y,\n        dxdlambda = 0.5 * F * (cos2phi * sin2lambda_2 + E * cosphi * coslambda_2 * sin2phi) + 0.5 / halfPi,\n        dxdphi = F * (sinlambda * sin_2phi / 4 - E * sinphi * sinlambda_2),\n        dydlambda = 0.125 * F * (sin_2phi * sinlambda_2 - E * sinphi * cos2phi * sinlambda),\n        dydphi = 0.5 * F * (sin2phi * coslambda_2 + E * sin2lambda_2 * cosphi) + 0.5,\n        denominator = dxdphi * dydlambda - dydphi * dxdlambda,\n        dlambda = (fy * dxdphi - fx * dydphi) / denominator,\n        dphi = (fx * dydlambda - fy * dxdlambda) / denominator;\n    lambda -= dlambda, phi -= dphi;\n  } while ((abs(dlambda) > epsilon || abs(dphi) > epsilon) && --i > 0);\n\n  return [lambda, phi];\n};\n\nexport default function () {\n  return projection(winkel3Raw).scale(158.837);\n}","export { default as geoAiry, airyRaw as geoAiryRaw } from \"./src/airy\";\nexport { default as geoAitoff, aitoffRaw as geoAitoffRaw } from \"./src/aitoff\";\nexport { default as geoArmadillo, armadilloRaw as geoArmadilloRaw } from \"./src/armadillo\";\nexport { default as geoAugust, augustRaw as geoAugustRaw } from \"./src/august\";\nexport { default as geoBaker, bakerRaw as geoBakerRaw } from \"./src/baker\";\nexport { default as geoBerghaus, berghausRaw as geoBerghausRaw } from \"./src/berghaus\";\nexport { default as geoBoggs, boggsRaw as geoBoggsRaw } from \"./src/boggs\";\nexport { default as geoBonne, bonneRaw as geoBonneRaw } from \"./src/bonne\";\nexport { default as geoBottomley, bottomleyRaw as geoBottomleyRaw } from \"./src/bottomley\";\nexport { default as geoBromley, bromleyRaw as geoBromleyRaw } from \"./src/bromley\";\nexport { default as geoChamberlin, chamberlinRaw as geoChamberlinRaw, chamberlinAfrica as geoChamberlinAfrica } from \"./src/chamberlin\";\nexport { default as geoCollignon, collignonRaw as geoCollignonRaw } from \"./src/collignon\";\nexport { default as geoCraig, craigRaw as geoCraigRaw } from \"./src/craig\";\nexport { default as geoCraster, crasterRaw as geoCrasterRaw } from \"./src/craster\";\nexport { default as geoCylindricalEqualArea, cylindricalEqualAreaRaw as geoCylindricalEqualAreaRaw } from \"./src/cylindricalEqualArea\";\nexport { default as geoCylindricalStereographic, cylindricalStereographicRaw as geoCylindricalStereographicRaw } from \"./src/cylindricalStereographic\";\nexport { default as geoEckert1, eckert1Raw as geoEckert1Raw } from \"./src/eckert1.js\";\nexport { default as geoEckert2, eckert2Raw as geoEckert2Raw } from \"./src/eckert2.js\";\nexport { default as geoEckert3, eckert3Raw as geoEckert3Raw } from \"./src/eckert3.js\";\nexport { default as geoEckert4, eckert4Raw as geoEckert4Raw } from \"./src/eckert4.js\";\nexport { default as geoEckert5, eckert5Raw as geoEckert5Raw } from \"./src/eckert5.js\";\nexport { default as geoEckert6, eckert6Raw as geoEckert6Raw } from \"./src/eckert6.js\";\nexport { default as geoEisenlohr, eisenlohrRaw as geoEisenlohrRaw } from \"./src/eisenlohr.js\";\nexport { default as geoFahey, faheyRaw as geoFaheyRaw } from \"./src/fahey.js\";\nexport { default as geoFoucaut, foucautRaw as geoFoucautRaw } from \"./src/foucaut.js\";\nexport { default as geoGilbert } from \"./src/gilbert.js\";\nexport { default as geoGingery, gingeryRaw as geoGingeryRaw } from \"./src/gingery.js\";\nexport { default as geoGinzburg4, ginzburg4Raw as geoGinzburg4Raw } from \"./src/ginzburg4.js\";\nexport { default as geoGinzburg5, ginzburg5Raw as geoGinzburg5Raw } from \"./src/ginzburg5.js\";\nexport { default as geoGinzburg6, ginzburg6Raw as geoGinzburg6Raw } from \"./src/ginzburg6.js\";\nexport { default as geoGinzburg8, ginzburg8Raw as geoGinzburg8Raw } from \"./src/ginzburg8.js\";\nexport { default as geoGinzburg9, ginzburg9Raw as geoGinzburg9Raw } from \"./src/ginzburg9.js\";\nexport { default as geoGringorten, gringortenRaw as geoGringortenRaw } from \"./src/gringorten.js\";\nexport { default as geoGuyou, guyouRaw as geoGuyouRaw } from \"./src/guyou.js\";\nexport { default as geoHammer, hammerRaw as geoHammerRaw } from \"./src/hammer.js\";\nexport { default as geoHammerRetroazimuthal, hammerRetroazimuthalRaw as geoHammerRetroazimuthalRaw } from \"./src/hammerRetroazimuthal.js\";\nexport { default as geoHealpix, healpixRaw as geoHealpixRaw } from \"./src/healpix.js\";\nexport { default as geoHill, hillRaw as geoHillRaw } from \"./src/hill.js\";\nexport { default as geoHomolosine, homolosineRaw as geoHomolosineRaw } from \"./src/homolosine.js\";\nexport { default as geoInterrupt } from \"./src/interrupted/index\";\nexport { default as geoInterruptedBoggs } from \"./src/interrupted/boggs\";\nexport { default as geoInterruptedHomolosine } from \"./src/interrupted/homolosine\";\nexport { default as geoInterruptedMollweide } from \"./src/interrupted/mollweide\";\nexport { default as geoInterruptedMollweideHemispheres } from \"./src/interrupted/mollweideHemispheres\";\nexport { default as geoInterruptedSinuMollweide } from \"./src/interrupted/sinuMollweide\";\nexport { default as geoInterruptedSinusoidal } from \"./src/interrupted/sinusoidal\";\nexport { default as geoKavrayskiy7, kavrayskiy7Raw as geoKavrayskiy7Raw } from \"./src/kavrayskiy7.js\";\nexport { default as geoLagrange, lagrangeRaw as geoLagrangeRaw } from \"./src/lagrange.js\";\nexport { default as geoLarrivee, larriveeRaw as geoLarriveeRaw } from \"./src/larrivee\";\nexport { default as geoLaskowski, laskowskiRaw as geoLaskowskiRaw } from \"./src/laskowski\";\nexport { default as geoLittrow, littrowRaw as geoLittrowRaw } from \"./src/littrow.js\";\nexport { default as geoLoximuthal, loximuthalRaw as geoLoximuthalRaw } from \"./src/loximuthal.js\";\nexport { default as geoMiller, millerRaw as geoMillerRaw } from \"./src/miller\";\nexport { default as geoModifiedStereographic, modifiedStereographicRaw as geoModifiedStereographicRaw, modifiedStereographicAlaska as geoModifiedStereographicAlaska, modifiedStereographicGs48 as geoModifiedStereographicGs48, modifiedStereographicGs50 as geoModifiedStereographicGs50, modifiedStereographicMiller as geoModifiedStereographicMiller, modifiedStereographicLee as geoModifiedStereographicLee } from \"./src/modifiedStereographic\";\nexport { default as geoMollweide, mollweideRaw as geoMollweideRaw } from \"./src/mollweide\";\nexport { default as geoMtFlatPolarParabolic, mtFlatPolarParabolicRaw as geoMtFlatPolarParabolicRaw } from \"./src/mtFlatPolarParabolic\";\nexport { default as geoMtFlatPolarQuartic, mtFlatPolarQuarticRaw as geoMtFlatPolarQuarticRaw } from \"./src/mtFlatPolarQuartic\";\nexport { default as geoMtFlatPolarSinusoidal, mtFlatPolarSinusoidalRaw as geoMtFlatPolarSinusoidalRaw } from \"./src/mtFlatPolarSinusoidal\";\nexport { default as geoNaturalEarth, naturalEarthRaw as geoNaturalEarthRaw } from \"./src/naturalEarth\";\nexport { default as geoNellHammer, nellHammerRaw as geoNellHammerRaw } from \"./src/nellHammer\";\nexport { default as geoPatterson, pattersonRaw as geoPattersonRaw } from \"./src/patterson\";\nexport { default as geoPolyconic, polyconicRaw as geoPolyconicRaw } from \"./src/polyconic\";\nexport { default as geoPolyhedral } from \"./src/polyhedral/index.js\";\nexport { default as geoPolyhedralButterfly } from \"./src/polyhedral/butterfly.js\";\nexport { default as geoPolyhedralCollignon } from \"./src/polyhedral/collignon.js\";\nexport { default as geoPolyhedralWaterman } from \"./src/polyhedral/waterman.js\";\nexport { default as geoProject } from \"./src/project/index\";\nexport { default as geoGringortenQuincuncial } from \"./src/quincuncial/gringorten.js\";\nexport { default as geoPeirceQuincuncial } from \"./src/quincuncial/peirce.js\";\nexport { default as geoPierceQuincuncial } from \"./src/quincuncial/peirce.js\"; // DEPRECATED misspelling\n\nexport { default as geoQuantize } from \"./src/quantize\";\nexport { default as geoQuincuncial } from \"./src/quincuncial/index.js\";\nexport { default as geoRectangularPolyconic, rectangularPolyconicRaw as geoRectangularPolyconicRaw } from \"./src/rectangularPolyconic\";\nexport { default as geoRobinson, robinsonRaw as geoRobinsonRaw } from \"./src/robinson\";\nexport { default as geoSatellite, satelliteRaw as geoSatelliteRaw } from \"./src/satellite\";\nexport { default as geoSinuMollweide, sinuMollweideRaw as geoSinuMollweideRaw } from \"./src/sinuMollweide\";\nexport { default as geoSinusoidal, sinusoidalRaw as geoSinusoidalRaw } from \"./src/sinusoidal\";\nexport { default as geoStitch } from \"./src/stitch\";\nexport { default as geoTimes, timesRaw as geoTimesRaw } from \"./src/times\";\nexport { default as geoTwoPointAzimuthal, twoPointAzimuthalRaw as geoTwoPointAzimuthalRaw, twoPointAzimuthalUsa as geoTwoPointAzimuthalUsa } from \"./src/twoPointAzimuthal\";\nexport { default as geoTwoPointEquidistant, twoPointEquidistantRaw as geoTwoPointEquidistantRaw, twoPointEquidistantUsa as geoTwoPointEquidistantUsa } from \"./src/twoPointEquidistant\";\nexport { default as geoVanDerGrinten, vanDerGrintenRaw as geoVanDerGrintenRaw } from \"./src/vanDerGrinten\";\nexport { default as geoVanDerGrinten2, vanDerGrinten2Raw as geoVanDerGrinten2Raw } from \"./src/vanDerGrinten2\";\nexport { default as geoVanDerGrinten3, vanDerGrinten3Raw as geoVanDerGrinten3Raw } from \"./src/vanDerGrinten3\";\nexport { default as geoVanDerGrinten4, vanDerGrinten4Raw as geoVanDerGrinten4Raw } from \"./src/vanDerGrinten4\";\nexport { default as geoWagner4, wagner4Raw as geoWagner4Raw } from \"./src/wagner4.js\";\nexport { default as geoWagner6, wagner6Raw as geoWagner6Raw } from \"./src/wagner6.js\";\nexport { default as geoWagner7, wagner7Raw as geoWagner7Raw } from \"./src/wagner7.js\";\nexport { default as geoWiechel, wiechelRaw as geoWiechelRaw } from \"./src/wiechel.js\";\nexport { default as geoWinkel3, winkel3Raw as geoWinkel3Raw } from \"./src/winkel3\";","export default function (x) {\n  return x;\n}","import identity from \"./identity\";\nexport default function (topology) {\n  if ((transform = topology.transform) == null) return identity;\n  var transform,\n      x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function (point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n    return point;\n  };\n}","import transform from \"./transform\";\nexport default function (topology) {\n  var bbox = topology.bbox;\n\n  function bboxPoint(p0) {\n    p1[0] = p0[0], p1[1] = p0[1], t(p1);\n    if (p1[0] < x0) x0 = p1[0];\n    if (p1[0] > x1) x1 = p1[0];\n    if (p1[1] < y0) y0 = p1[1];\n    if (p1[1] > y1) y1 = p1[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(bboxGeometry);\n        break;\n\n      case \"Point\":\n        bboxPoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        o.coordinates.forEach(bboxPoint);\n        break;\n    }\n  }\n\n  if (!bbox) {\n    var t = transform(topology),\n        p0,\n        p1 = new Array(2),\n        name,\n        x0 = Infinity,\n        y0 = x0,\n        x1 = -x0,\n        y1 = -x0;\n    topology.arcs.forEach(function (arc) {\n      var i = -1,\n          n = arc.length;\n\n      while (++i < n) {\n        p0 = arc[i], p1[0] = p0[0], p1[1] = p0[1], t(p1, i);\n        if (p1[0] < x0) x0 = p1[0];\n        if (p1[0] > x1) x1 = p1[0];\n        if (p1[1] < y0) y0 = p1[1];\n        if (p1[1] > y1) y1 = p1[1];\n      }\n    });\n\n    for (name in topology.objects) {\n      bboxGeometry(topology.objects[name]);\n    }\n\n    bbox = topology.bbox = [x0, y0, x1, y1];\n  }\n\n  return bbox;\n}","export default function (array, n) {\n  var t,\n      j = array.length,\n      i = j - n;\n\n  while (i < --j) {\n    t = array[i], array[i++] = array[j], array[j] = t;\n  }\n}","import reverse from \"./reverse\";\nimport transform from \"./transform\";\nexport default function (topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function (o) {\n      return feature(topology, o);\n    })\n  } : feature(topology, o);\n}\nexport function feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {\n    type: \"Feature\",\n    properties: properties,\n    geometry: geometry\n  } : bbox == null ? {\n    type: \"Feature\",\n    id: id,\n    properties: properties,\n    geometry: geometry\n  } : {\n    type: \"Feature\",\n    id: id,\n    bbox: bbox,\n    properties: properties,\n    geometry: geometry\n  };\n}\nexport function object(topology, o) {\n  var transformPoint = transform(topology),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k].slice(), k));\n    }\n\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p.slice());\n  }\n\n  function line(arcs) {\n    var points = [];\n\n    for (var i = 0, n = arcs.length; i < n; ++i) {\n      arc(arcs[i], points);\n    }\n\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n\n    while (points.length < 4) {\n      points.push(points[0].slice());\n    }\n\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type,\n        coordinates;\n\n    switch (type) {\n      case \"GeometryCollection\":\n        return {\n          type: type,\n          geometries: o.geometries.map(geometry)\n        };\n\n      case \"Point\":\n        coordinates = point(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        coordinates = o.coordinates.map(point);\n        break;\n\n      case \"LineString\":\n        coordinates = line(o.arcs);\n        break;\n\n      case \"MultiLineString\":\n        coordinates = o.arcs.map(line);\n        break;\n\n      case \"Polygon\":\n        coordinates = polygon(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        coordinates = o.arcs.map(polygon);\n        break;\n\n      default:\n        return null;\n    }\n\n    return {\n      type: type,\n      coordinates: coordinates\n    };\n  }\n\n  return geometry(o);\n}","export default function (topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1; // Stitch empty arcs first, since they may be subsumed by other arcs.\n\n  arcs.forEach(function (i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        t;\n\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n  arcs.forEach(function (i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f,\n        g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        p0 = arc[0],\n        p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function (dp) {\n      p1[0] += dp[0], p1[1] += dp[1];\n    });else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function (i) {\n        stitchedArcs[i < 0 ? ~i : i] = 1;\n      });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function (i) {\n    if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]);\n  });\n  return fragments;\n}","import { object } from \"./feature\";\nimport stitch from \"./stitch\";\nexport default function (topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) {\n    arcs[i] = i;\n  }\n  return {\n    type: \"MultiLineString\",\n    arcs: stitch(topology, arcs)\n  };\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({\n      i: i,\n      g: geom\n    });\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(geometry);\n        break;\n\n      case \"LineString\":\n        extract1(o.arcs);\n        break;\n\n      case \"MultiLineString\":\n      case \"Polygon\":\n        extract2(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        extract3(o.arcs);\n        break;\n    }\n  }\n\n  geometry(object);\n  geomsByArc.forEach(filter == null ? function (geoms) {\n    arcs.push(geoms[0].i);\n  } : function (geoms) {\n    if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i);\n  });\n  return arcs;\n}","import { object } from \"./feature\";\nimport stitch from \"./stitch\";\n\nfunction planarRingArea(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function (topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(geometry);\n        break;\n\n      case \"Polygon\":\n        extract(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        o.arcs.forEach(extract);\n        break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function (ring) {\n      ring.forEach(function (arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {\n      type: \"Polygon\",\n      arcs: [ring]\n    }).coordinates[0]);\n  }\n\n  polygons.forEach(function (polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function (ring) {\n          ring.forEach(function (arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function (polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n  polygons.forEach(function (polygon) {\n    delete polygon._;\n  });\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function (polygons) {\n      var arcs = [],\n          n; // Extract the exterior (unique) arcs.\n\n      polygons.forEach(function (polygon) {\n        polygon.forEach(function (ring) {\n          ring.forEach(function (arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      }); // Stitch the arcs into one or more rings.\n\n      arcs = stitch(topology, arcs); // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}","export default function (a, x) {\n  var lo = 0,\n      hi = a.length;\n\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;else hi = mid;\n  }\n\n  return lo;\n}","import bisect from \"./bisect\";\nexport default function (objects) {\n  var indexesByArc = {},\n      // arc index -> array of object indexes\n  neighbors = objects.map(function () {\n    return [];\n  });\n\n  function line(arcs, i) {\n    arcs.forEach(function (a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function (arc) {\n      line(arc, i);\n    });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function (o) {\n      geometry(o, i);\n    });else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function MultiPolygon(arcs, i) {\n      arcs.forEach(function (arc) {\n        polygon(arc, i);\n      });\n    }\n  };\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j],\n            ik = indexes[k],\n            n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}","import bbox from \"./bbox\";\nexport default function (topology, n) {\n  if (!((n = Math.floor(n)) >= 2)) throw new Error(\"n must be ≥2\");\n  if (topology.transform) throw new Error(\"already quantized\");\n  var bb = bbox(topology),\n      name,\n      dx = bb[0],\n      kx = (bb[2] - dx) / (n - 1) || 1,\n      dy = bb[1],\n      ky = (bb[3] - dy) / (n - 1) || 1;\n\n  function quantizePoint(p) {\n    p[0] = Math.round((p[0] - dx) / kx);\n    p[1] = Math.round((p[1] - dy) / ky);\n  }\n\n  function quantizeGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(quantizeGeometry);\n        break;\n\n      case \"Point\":\n        quantizePoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        o.coordinates.forEach(quantizePoint);\n        break;\n    }\n  }\n\n  topology.arcs.forEach(function (arc) {\n    var i = 1,\n        j = 1,\n        n = arc.length,\n        pi = arc[0],\n        x0 = pi[0] = Math.round((pi[0] - dx) / kx),\n        y0 = pi[1] = Math.round((pi[1] - dy) / ky),\n        pj,\n        x1,\n        y1;\n\n    for (; i < n; ++i) {\n      pi = arc[i];\n      x1 = Math.round((pi[0] - dx) / kx);\n      y1 = Math.round((pi[1] - dy) / ky);\n\n      if (x1 !== x0 || y1 !== y0) {\n        pj = arc[j++];\n        pj[0] = x1 - x0, x0 = x1;\n        pj[1] = y1 - y0, y0 = y1;\n      }\n    }\n\n    if (j < 2) {\n      pj = arc[j++];\n      pj[0] = 0;\n      pj[1] = 0;\n    }\n\n    arc.length = j;\n  });\n\n  for (name in topology.objects) {\n    quantizeGeometry(topology.objects[name]);\n  }\n\n  topology.transform = {\n    scale: [kx, ky],\n    translate: [dx, dy]\n  };\n  return topology;\n}","import identity from \"./identity\";\nexport default function (topology) {\n  if ((transform = topology.transform) == null) return identity;\n  var transform,\n      x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function (point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0, x0 = x1;\n    point[1] = y1 - y0, y0 = y1;\n    return point;\n  };\n}","export { default as bbox } from \"./src/bbox\";\nexport { default as feature } from \"./src/feature\";\nexport { default as mesh, meshArcs } from \"./src/mesh\";\nexport { default as merge, mergeArcs } from \"./src/merge\";\nexport { default as neighbors } from \"./src/neighbors\";\nexport { default as quantize } from \"./src/quantize\";\nexport { default as transform } from \"./src/transform\";\nexport { default as untransform } from \"./src/untransform\";","/*jshint esversion: 9 */\r\n\r\nimport React from \"react\";\r\n\r\nexport const taskList = [\r\n  {\r\n    id: 1,\r\n    title: 'Make the home page dynamic',\r\n    completed: false,\r\n    user: {\r\n      projectName: 'Chatbull',\r\n      avatar: 'https://via.placeholder.com/150x150'\r\n    },\r\n    dueDate: 'Tomorrow',\r\n    tags: [1, 2]\r\n  }, {\r\n    id: 2,\r\n    title: 'Design wireframes based on the requirements',\r\n    completed: false,\r\n    user: {\r\n      projectName: 'Wieldy',\r\n      avatar: 'https://via.placeholder.com/150x150'\r\n    },\r\n    dueDate: 'Today',\r\n    tags: [2, 4]\r\n  }, {\r\n    id: 3,\r\n    title: 'Need to define microinteraction on click of signin button',\r\n    completed: false,\r\n    user: {\r\n      projectName: 'Jumbo',\r\n      avatar: 'https://via.placeholder.com/150x150'\r\n    },\r\n    dueDate: '21 Jul',\r\n    tags: [1, 2, 3]\r\n  }, {\r\n    id: 4,\r\n    title: 'New page need to be designed for property listing',\r\n    completed: false,\r\n    user: {\r\n      projectName: 'Wieldy',\r\n      avatar: 'https://via.placeholder.com/150x150'\r\n    },\r\n    dueDate: '23 Jul',\r\n    tags: [2, 3, 4]\r\n  }, {\r\n    id: 5,\r\n    title: 'Design wireframes based on the requirements',\r\n    completed: false,\r\n    user: {\r\n      projectName: 'Wieldy',\r\n      avatar: 'https://via.placeholder.com/150x150'\r\n    },\r\n    dueDate: '1 Aug',\r\n    tags: [2, 4]\r\n  }];\r\n\r\nexport const recentActivity = [\r\n  {\r\n    id: 1,\r\n    day: 'Today',\r\n    tasks: [\r\n      {\r\n        id: 1,\r\n        name: 'Mila Alba',\r\n        title: [<span className=\"gx-link\" key={1}>Mila Alba</span>, ' left a 5 star review on ',\r\n          <span className=\"gx-link\" key={2}>Albama’s House</span>],\r\n        avatar: 'https://via.placeholder.com/150x150',\r\n        imageList: [],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Bob Builder',\r\n        title: ['Callback request from ', <span className=\"gx-link\" key={3}>Bob Builder</span>, ' for the property ',\r\n          <span className=\"gx-link\" key={4}>Dimitri House</span>],\r\n        avatar: 'https://via.placeholder.com/150x150',\r\n        imageList: [],\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Tom Moody',\r\n        title: ['Congratulations to ', <span className=\"gx-link\" key={5}>Tom Moody</span>,\r\n          ' for joining 10+ club '],\r\n        avatar: 'https://via.placeholder.com/150x150',\r\n        imageList: [],\r\n      },\r\n      {\r\n        id: 4,\r\n        name: 'Norman Dolphi',\r\n        title: ['Norman Dolphi is looking for a house in New Jersy, USA'],\r\n        avatar: '',\r\n        imageList: [],\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    id: 2,\r\n    day: 'Yesterday',\r\n    tasks: [\r\n      {\r\n        id: 5,\r\n        name: 'Kily Johns',\r\n        title: ['Agent ',\r\n          <span className=\"gx-link\" key={7}>Kily Johns</span>, ' has added 7 new photos to the property ',\r\n          <span key={6} className=\"gx-link\">Albama’s House</span>],\r\n        avatar: '',\r\n        imageList: ['https://via.placeholder.com/150x150', 'https://via.placeholder.com/150x150', 'https://via.placeholder.com/150x150', 'https://via.placeholder.com/150x150', 'https://via.placeholder.com/150x150', 'https://via.placeholder.com/150x150', 'https://via.placeholder.com/150x150',],\r\n      },\r\n      {\r\n        id: 6,\r\n        name: 'Tom Moody',\r\n        title: ['Welcome to a new agent ', <span className=\"gx-link\" key={8}>Tom Moody in the Company</span>],\r\n        avatar: 'https://via.placeholder.com/150x150',\r\n        imageList: [],\r\n      },\r\n      {\r\n        id: 7,\r\n        name: 'Oliver Shorter',\r\n        title: [<span className=\"gx-link\" key={9}>Oliver Shorter</span>, ' is looking for an office space in ',\r\n          <span className=\"gx-link\" key={10}>Colorado, USA</span>],\r\n        avatar: 'https://via.placeholder.com/150x150',\r\n        imageList: [],\r\n      }, {\r\n        id: 8,\r\n        name: 'Mila Alba',\r\n        title: [<span className=\"gx-link\" key={11}>Mila Alba</span>, ' left a 5 star review on ',\r\n          <span className=\"gx-link\" key={12}>Albama’s House</span>],\r\n        avatar: 'https://via.placeholder.com/150x150',\r\n        imageList: [],\r\n      },\r\n    ]\r\n  }];\r\n\r\nexport const ticketList = [\r\n  {\r\n    id: 1,\r\n    avatar: 'https://via.placeholder.com/150x150',\r\n    title: 'Need a quick support on setting',\r\n    description: [<span className=\"gx-link\" key={13}>Joy Parish</span>, \"  created ticket 15 mins ago\"],\r\n    status: 2\r\n  }, {\r\n    id: 2,\r\n    avatar: 'https://via.placeholder.com/150x150',\r\n    title: 'Pre-sale query about the product',\r\n    description: [<span key={14} className=\"gx-link\">You</span>, \" replied 2 days ago\"],\r\n    status: 1\r\n  }, {\r\n    id: 3,\r\n    avatar: 'https://via.placeholder.com/150x150',\r\n    title: 'Regarding customization service',\r\n    description: [<span key={15} className=\"gx-link\">Joy Parish</span>, \" replied 2 days ago\"],\r\n    status: 4\r\n  }\r\n];\r\nexport const taskStatus = [\r\n  {\r\n    id: 1,\r\n    title: 'Critical',\r\n    color: 'red'\r\n  }, {\r\n    id: 2,\r\n    title: 'High',\r\n    color: 'orange'\r\n  }, {\r\n    id: 3,\r\n    title: 'Medium',\r\n    color: 'green'\r\n  }, {\r\n    id: 4,\r\n    title: 'Low',\r\n    color: 'light-grey'\r\n  }\r\n];\r\nexport const taskTags = [\r\n  {\r\n    id: 1,\r\n    name: 'HTML',\r\n    color: 'red',\r\n  }, {\r\n    id: 2,\r\n    name: 'React',\r\n    color: 'green',\r\n  }, {\r\n    id: 3,\r\n    name: 'JavaScript',\r\n    color: 'blue',\r\n  }, {\r\n    id: 4,\r\n    name: 'CSS',\r\n    color: 'orange',\r\n  }];\r\nexport const siteVisit = [\r\n  {name: '1', thisYear: 0, lastYear: 0},\r\n  {name: '2', thisYear: 0, lastYear: 1},\r\n  {name: '3', thisYear: 5, lastYear: 2},\r\n  {name: '4', thisYear: 10, lastYear: 0},\r\n  {name: '5', thisYear: 4, lastYear: 1},\r\n  {name: '6', thisYear: 16, lastYear: 3},\r\n  {name: '7', thisYear: 5, lastYear: 1},\r\n  {name: '8', thisYear: 11, lastYear: 5},\r\n  {name: '9', thisYear: 6, lastYear: 2},\r\n  {name: '10', thisYear: 11, lastYear: 3},\r\n  {name: '11', thisYear: 30, lastYear: 2},\r\n  {name: '12', thisYear: 10, lastYear: 1},\r\n  {name: '13', thisYear: 13, lastYear: 0},\r\n  {name: '14', thisYear: 4, lastYear: 2},\r\n  {name: '15', thisYear: 3, lastYear: 8},\r\n  {name: '16', thisYear: 1, lastYear: 0},\r\n  {name: '17', thisYear: 0, lastYear: 0},\r\n];\r\n\r\nexport const totalSaleData = [\r\n  {name: 'JAN', price: 600},\r\n  {name: 'FEB', price: 3398},\r\n  {name: 'MAR', price: 1200},\r\n  {name: 'APR', price: 4908},\r\n  {name: 'MAY', price: 2908},\r\n];\r\n\r\nexport const totalRevenueData = [\r\n  {name: 'JAN', thisYear: 60},\r\n  {name: 'FEB', thisYear: 90},\r\n  {name: 'MAR', thisYear: 50},\r\n  {name: 'APR', thisYear: 75},\r\n  {name: 'MAY', thisYear: 60},\r\n  {name: 'JUN', thisYear: 85},\r\n  {name: 'JUL', thisYear: 20},\r\n  {name: 'AUG', thisYear: 75},\r\n  {name: 'SEP', thisYear: 60},\r\n  {name: 'OCT', thisYear: 40},\r\n  {name: 'NOV', thisYear: 75},\r\n  {name: 'DEC', thisYear: 25},\r\n];\r\n\r\nexport const trafficData = [\r\n  {name: 'Page A', value: 0},\r\n  {name: 'Page B', value: 2000},\r\n  {name: 'Page C', value: 600},\r\n  {name: 'Page D', value: 4400},\r\n  {name: 'Page D', value: 900},\r\n  {name: 'Page H', value: 4860},\r\n];\r\nexport const growthData = [\r\n  {name: 'Page A', price: 1200},\r\n  {name: 'Page B', price: 600},\r\n  {name: 'Page C', price: 1200},\r\n  {name: 'Page D', price: 600},\r\n  {name: 'Page D', price: 900}\r\n\r\n];\r\nexport const growth2Data = [\r\n  {name: 'Page A', revenue: 1200},\r\n  {name: 'Page B', revenue: 600},\r\n  {name: 'Page C', revenue: 1200},\r\n  {name: 'Page D', revenue: 600},\r\n  {name: 'Page D', revenue: 900}\r\n\r\n];\r\n\r\nexport const trafficRaiseData = [\r\n  {name: 'Page A', traffic: 200},\r\n  {name: 'Page B', traffic: 900},\r\n  {name: 'Page C', traffic: 600},\r\n  {name: 'Page D', traffic: 1600},\r\n  {name: 'Page D', traffic: 900}\r\n];\r\n\r\n\r\nexport const revenueData = [\r\n  {name: 'Page A', revenue: 850},\r\n  {name: 'Page B', revenue: 300},\r\n  {name: 'Page C', revenue: 1100},\r\n  {name: 'Page D', revenue: 600},\r\n];\r\n\r\nexport const propertiesData = [\r\n  {name: 'Page A', properties: 200},\r\n  {name: 'Page B', properties: 1200},\r\n  {name: 'Page C', properties: 600},\r\n  {name: 'Page D', properties: 1600},\r\n  {name: 'Page D', properties: 1000},\r\n  {name: 'Page H', properties: 2260},\r\n  {name: 'Page K', properties: 800},\r\n];\r\nexport const citiesData = [\r\n  {name: 'Page A', cities: 200},\r\n  {name: 'Page B', cities: 1200},\r\n  {name: 'Page C', cities: 600},\r\n  {name: 'Page D', cities: 1600},\r\n  {name: 'Page D', cities: 1000},\r\n  {name: 'Page H', cities: 2260},\r\n  {name: 'Page K', cities: 800},\r\n];\r\nexport const visitsData = [\r\n  {name: 'Page A', visit: 200},\r\n  {name: 'Page B', visit: 1200},\r\n  {name: 'Page C', visit: 600},\r\n  {name: 'Page D', visit: 1600},\r\n  {name: 'Page D', visit: 1000},\r\n  {name: 'Page H', visit: 2260},\r\n  {name: 'Page K', visit: 800},\r\n];\r\n\r\nexport const queriesData = [\r\n  {name: 'Page A', queries: 200},\r\n  {name: 'Page B', queries: 1200},\r\n  {name: 'Page C', queries: 600},\r\n  {name: 'Page D', queries: 1600},\r\n  {name: 'Page D', queries: 1000},\r\n  {name: 'Page H', queries: 2260},\r\n  {name: 'Page K', queries: 800},\r\n];\r\n\r\nexport const increamentData = [\r\n  {name: 'Page A', price: 200},\r\n  {name: 'Page B', price: 1200},\r\n  {name: 'Page C', price: 600},\r\n  {name: 'Page D', price: 1600},\r\n  {name: 'Page D', price: 1000},\r\n  {name: 'Page H', price: 2260},\r\n  {name: 'Page K', price: 800},\r\n];\r\n\r\nexport const increamentRevenueData = [\r\n  {name: 'Page A', revenue: 200},\r\n  {name: 'Page B', revenue: 1200},\r\n  {name: 'Page C', revenue: 600},\r\n  {name: 'Page D', revenue: 1600},\r\n  {name: 'Page D', revenue: 1000},\r\n  {name: 'Page H', revenue: 2260},\r\n  {name: 'Page K', revenue: 800},\r\n];\r\n\r\nexport const lineData = [\r\n  {name: 'Page A', price: 200},\r\n  {name: 'Page B', price: 1100},\r\n  {name: 'Page C', price: 800},\r\n  {name: 'Page D', price: 1700},\r\n  {name: 'Page D', price: 600},\r\n  {name: 'Page D', price: 1800},\r\n  {name: 'Page D', price: 600},\r\n];\r\n\r\nexport const lineData2 = [\r\n  {name: 'Page A', traffic: 200},\r\n  {name: 'Page B', traffic: 1100},\r\n  {name: 'Page C', traffic: 800},\r\n  {name: 'Page D', traffic: 1700},\r\n  {name: 'Page D', traffic: 600},\r\n  {name: 'Page D', traffic: 1800},\r\n  {name: 'Page D', traffic: 600},\r\n]\r\n","import React from \"react\";\r\nimport {Avatar, Checkbox, Tag, Tooltip} from \"antd\";\r\n\r\nimport Aux from \"util/Auxiliary\";\r\nimport {taskTags} from \"../../../../src/routes/main/dashboard/CRM/data\";\r\n\r\nconst getTags = (tags) => {\r\n  return taskTags.map((tag, index) => {\r\n    if (tags.includes(tag.id)) {\r\n      return <Tooltip key={index} title={tag.name}>\r\n        <li className={`gx-text-${tag.color}`}>\r\n          <i className=\"icon icon-circle gx-fs-xxs\"/>\r\n        </li>\r\n      </Tooltip>\r\n    }\r\n    return null;\r\n  });\r\n};\r\n\r\nconst TaskItem = ({data, onChange}) => {\r\n\r\n  const {title, tags, completed, user, dueDate} = data;\r\n  return (\r\n    <Aux>\r\n      <div className=\"gx-media gx-task-list-item gx-flex-nowrap\">\r\n        <div className=\"gx-mr-3\">\r\n          <Checkbox checked={completed} onChange={() => onChange(data)}/>\r\n        </div>\r\n        <div className=\"gx-media-body gx-task-item-content\">\r\n          <div className=\"gx-task-item-content-left\">\r\n            <p\r\n              className={`gx-text-truncate gx-mb-0 ${completed ? 'gx-text-strikethrough' : 'gx-text-hover'}`}>{title}</p>\r\n          </div>\r\n          <div className=\"gx-task-item-content-right\">\r\n            <Avatar className=\"gx-ml-sm-3 gx-size-30 gx-order-sm-3\" src={user.avatar}/>\r\n            <Tag\r\n              className=\"gx-bg-grey gx-text-grey gx-ml-3 gx-mr-0 gx-mb-0 gx-rounded-xxl gx-order-sm-2\">{user.projectName}</Tag>\r\n            <ul className=\"gx-dot-list gx-mb-0 gx-order-sm-1 gx-ml-2\">\r\n              {getTags(tags)}\r\n            </ul>\r\n            <span className=\"gx-fs-sm gx-text-grey gx-ml-3 gx-task-date gx-order-sm-4\">{dueDate}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from \"react\";\r\nimport {Tabs} from \"antd\";\r\nimport Widget from \"components/Widget\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nclass TaskList extends React.Component {\r\n  onChange = (data, index) => {\r\n    this.setState((prevState) => ({\r\n      taskList: prevState.taskList.map(task => {\r\n        if (task.id === data.id) {\r\n          task.completed = !data.completed;\r\n        }\r\n        return task;\r\n      })\r\n    }))\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {taskList: props.taskList}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Widget title=\"Task List\" styleName=\"gx-card-tabs\"\r\n              extra={<i className=\"icon icon-search-new gx-pointer gx-fs-xxl gx-text-primary\"/>}>\r\n        <Tabs defaultActiveKey=\"1\">\r\n          <TabPane tab=\"All Task\" key=\"1\">\r\n            {\r\n              this.state.taskList.map((task, index) =>\r\n                <TaskItem key={index} data={task} onChange={this.onChange}/>)\r\n            }\r\n          </TabPane>\r\n          <TabPane tab=\"My Task\" key=\"2\">{\r\n            this.state.taskList.map((task, index) =>\r\n              <TaskItem key={\"2\" + index} data={task} onChange={this.onChange}/>)\r\n          }</TabPane>\r\n        </Tabs>\r\n      </Widget>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\n\r\nimport Widget from \"components/Widget/index\";\r\n\r\nclass ChartCard extends React.Component {\r\n\r\n  state = {\r\n    isHide: false,\r\n    children: '',\r\n    chartProperties: {\r\n      prize: '',\r\n      title: '',\r\n      bgColor: '',\r\n      styleName: '',\r\n      desc: '',\r\n      percent: '',\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.setState((previousState) => ({\r\n      chartProperties: this.props.chartProperties,\r\n      children: this.props.children,\r\n    }));\r\n  }\r\n\r\n  handleToggle() {\r\n    this.setState((previousState) => ({\r\n      isHide: !previousState.isHide,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const {chartProperties, isHide, children} = this.state;\r\n    const {prize, title, styleName, desc, bgColor, percent, color} = chartProperties;\r\n    return (\r\n      <Widget styleName={`gx-card-full`}>\r\n        <div\r\n          className={isHide === true ? `gx-fillchart gx-bg-${bgColor} gx-fillchart-nocontent` : `gx-fillchart gx-bg-${bgColor} gx-overlay-fillchart`}>\r\n\r\n          <div className={`ant-card-head-title gx-text-${color}`}>{title}</div>\r\n          {children}\r\n          <div className={`gx-fillchart-content gx-text-${color}`}>\r\n            <div className={`ant-card-head-title gx-mb-3 gx-text-${color}`}>{title}</div>\r\n            <h2 className={`gx-mb-2 gx-fs-xxxl gx-font-weight-medium gx-text-${color}`}>{prize}</h2>\r\n            {percent > 0}\r\n            <p className=\"gx-mb-0 gx-fs-sm\"><span\r\n              className={`gx-font-weight-medium gx-fs-md gx-chart-${styleName} gx-text-${color}`}>{percent}\r\n              {percent > 0 ? <i className=\"icon icon-menu-up gx-fs-sm\"/> : null}</span>{desc}</p>\r\n          </div>\r\n          <div className=\"gx-fillchart-btn-close\" onClick={this.handleToggle.bind(this)}><i\r\n            className=\"icon icon-close\"/></div>\r\n          <div className=\"gx-fillchart-btn\" onClick={this.handleToggle.bind(this)}><i\r\n            className={`icon icon-stats gx-fs-xxxl`}/>\r\n          </div>\r\n        </div>\r\n      </Widget>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ChartCard;\r\n","import React from \"react\";\r\nimport {Avatar} from \"antd\";\r\n\r\nimport Aux from \"util/Auxiliary\";\r\nimport {taskStatus} from \"../../../../src/routes/main/dashboard/CRM/data\"\r\n\r\nconst getStatus = (status) => {\r\n  const statusData = taskStatus.filter((taskStatus, index) => status === taskStatus.id)[0];\r\n  return <Aux>\r\n    <span className=\"gx-nonhover\">\r\n      <i className={`icon icon-circle gx-fs-sm gx-text-${statusData.color}`}/>\r\n    </span>\r\n    <span className={`gx-badge gx-hover gx-mb-0 gx-text-white gx-badge-${statusData.color}`}>\r\n      {statusData.title}\r\n    </span>\r\n  </Aux>\r\n};\r\n\r\nconst TicketItem = ({data}) => {\r\n\r\n  const {id, title, avatar, description, status} = data;\r\n  return (\r\n    <div key={\"TicketItem\" + id} className=\"gx-media gx-task-list-item gx-flex-nowrap\">\r\n      <Avatar className=\"gx-mr-3 gx-size-36\" src={avatar}/>\r\n      <div className=\"gx-media-body gx-task-item-content\">\r\n        <div className=\"gx-task-item-content-left\">\r\n          <h5 className=\"gx-text-truncate gx-task-item-title\">{title}</h5>\r\n          <p key={id} className=\"gx-text-grey gx-fs-sm gx-mb-0\">{description}</p>\r\n        </div>\r\n        <div className=\"gx-task-item-content-right\">\r\n          {getStatus(status)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default TicketItem;\r\n","import React from \"react\";\r\n\r\nimport Widget from \"components/Widget\";\r\nimport {ticketList} from \"../../../routes/main/dashboard/CRM/data\";\r\nimport TicketItem from \"./TicketItem\";\r\n\r\nclass TicketList extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Widget title={\r\n        <h2 className=\"h4 gx-text-capitalize gx-mb-0\">\r\n          Recent Tickets</h2>\r\n      } styleName=\"gx-card-ticketlist\"\r\n              extra={<h5 className=\"gx-text-primary gx-mb-0 gx-pointer gx-d-none gx-d-sm-block\">\r\n                See all tickets <i\r\n                className=\"icon icon-long-arrow-right gx-fs-xxl gx-ml-2 gx-d-inline-flex gx-vertical-align-middle\"/>\r\n              </h5>}>\r\n        {\r\n          ticketList.map((ticket, index) => <TicketItem key={index} data={ticket}/>)\r\n        }\r\n        <div className=\"gx-task-list-item gx-d-block gx-d-sm-none\"><h5\r\n          className=\"gx-text-primary gx-mb-0 gx-pointer\">See all tickets <i\r\n          className=\"icon icon-long-arrow-right gx-fs-xxl gx-ml-2 gx-d-inline-flex gx-vertical-align-middle\"/></h5>\r\n        </div>\r\n      </Widget>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default TicketList;\r\n","import React from \"react\";\r\nimport {Cell, Pie, PieChart, ResponsiveContainer, Tooltip} from \"recharts\";\r\n\r\nimport Widget from \"components/Widget\";\r\n\r\nconst data = [{name: 'Normal', value: 58}, {name: 'Height', value: 20},\r\n  {name: 'Critical', value: 8}, {name: 'Low', value: 15}];\r\n\r\nconst COLORS = ['#5797fc', '#FA8C16', '#f5222d', '#d9d9d9'];\r\n\r\n\r\nconst TaskByStatus = () => {\r\n  return (\r\n    <Widget title={\r\n      <h2 className=\"h4 gx-text-capitalize gx-mb-0\">\r\n        Tickets by Status</h2>\r\n    } styleName=\"gx-text-center\">\r\n      <div className=\"gx-py-3\">\r\n        <ResponsiveContainer width=\"100%\" height={150}>\r\n          <PieChart>\r\n            <Tooltip/>\r\n            <text\r\n              x=\"50%\" className=\"h1\"\r\n              y=\"50%\" textAnchor=\"middle\" dominantBaseline=\"middle\">\r\n              27\r\n            </text>\r\n            <Pie\r\n              data={data} dataKey=\"value\"\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              innerRadius={47}\r\n              outerRadius={57}\r\n              fill=\"#8884d8\"\r\n            >\r\n              {\r\n                data.map((entry, index) => <Cell key={index} fill={COLORS[index % COLORS.length]}/>)\r\n              }\r\n            </Pie>\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </Widget>\r\n  );\r\n};\r\nexport default TaskByStatus;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Aux from \"util/Auxiliary\";\r\n\r\nconst LineIndicator = ({title, width, value, color}) => {\r\n\r\n  return (\r\n    <Aux>\r\n      <p>{title}</p>\r\n      <div className=\"gx-line-indi-info\">\r\n        <div className={`gx-line-indi gx-bg-${color}`} style={{\r\n          width: Number.parseInt(width, 10) * 4\r\n        }}/>\r\n\r\n        <span className=\"gx-line-indi-count gx-ml-2\">{value}</span>\r\n      </div>\r\n    </Aux>\r\n\r\n  );\r\n};\r\n\r\nexport default LineIndicator;\r\n\r\nLineIndicator.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  width: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n","import React, {Component} from \"react\";\r\nimport {ComposableMap, Geographies, Geography, Marker, Markers, ZoomableGroup} from \"react-simple-maps\";\r\nimport {scaleLinear} from \"d3-scale\";\r\nimport cities from \"./static/world-most-populous-cities.json\";\r\nimport geography from \"./static/world-50m.json\";\r\n\r\nconst wrapperStyles = {\r\n  width: \"100%\",\r\n  maxWidth: 980,\r\n  margin: \"0 auto\",\r\n}\r\n\r\nconst cityScale = scaleLinear()\r\n  .domain([0, 37843000])\r\n  .range([1, 25])\r\n\r\nclass BubbleMap extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div style={wrapperStyles}>\r\n        <ComposableMap\r\n          projectionConfig={{scale: 180}}\r\n          width={980}\r\n          height={450}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"auto\",\r\n          }}\r\n        >\r\n          <ZoomableGroup center={[0, 20]} disablePanning>\r\n            <Geographies geography={geography}>\r\n              {(geographies, projection) =>\r\n                geographies.map((geography, i) =>\r\n                  geography.id !== \"ATA\" && (\r\n                    <Geography\r\n                      key={i}\r\n                      geography={geography}\r\n                      projection={projection}\r\n                      style={{\r\n                        default: {\r\n                          fill: \"#ECEFF1\",\r\n                          stroke: \"#607D8B\",\r\n                          strokeWidth: 0.75,\r\n                          outline: \"none\",\r\n                        },\r\n                        hover: {\r\n                          fill: \"#ECEFF1\",\r\n                          stroke: \"#607D8B\",\r\n                          strokeWidth: 0.75,\r\n                          outline: \"none\",\r\n                        },\r\n                        pressed: {\r\n                          fill: \"#ECEFF1\",\r\n                          stroke: \"#607D8B\",\r\n                          strokeWidth: 0.75,\r\n                          outline: \"none\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  ))}\r\n            </Geographies>\r\n            <Markers>\r\n              {\r\n                cities.map((city, i) => (\r\n                  <Marker key={i} marker={city}>\r\n                    <circle\r\n                      cx={0}\r\n                      cy={0}\r\n                      r={cityScale(city.population)}\r\n                      fill=\"rgba(255,87,34,0.8)\"\r\n                      stroke=\"#607D8B\"\r\n                      strokeWidth=\"2\"\r\n                    />\r\n                  </Marker>\r\n                ))\r\n              }\r\n            </Markers>\r\n          </ZoomableGroup>\r\n        </ComposableMap>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BubbleMap\r\n","import React from \"react\";\r\n\r\nimport LineIndicator from \"./LineIndicator\";\r\nimport BubbleMap from \"./BubbleMap/index\";\r\n\r\nconst Overview = () => {\r\n\r\n  return (\r\n    <div className=\"gx-card-overview\">\r\n      <div className=\"gx-overview-row\">\r\n        <div className=\"gx-line-indicator-col\">\r\n          <h2 className=\"h4 gx-card-title\">Revenu Overview</h2>\r\n          <ul className=\"gx-line-indicator\">\r\n            <li>\r\n              <LineIndicator width=\"25%\" title=\"Europe\" color=\"purple\" value=\"25%\"/>\r\n            </li>\r\n            <li>\r\n              <LineIndicator width=\"40%\" title=\"North America\" color=\"green\" value=\"40%\"/>\r\n            </li>\r\n            <li>\r\n              <LineIndicator width=\"28%\" title=\"Japan, South Koria\" color=\"yellow\" value=\"28%\"/>\r\n            </li>\r\n            <li>\r\n              <LineIndicator width=\"18%\" title=\"Others\" color=\"grey\" value=\"18%\"/>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"gx-overview-description\">\r\n          <div className=\"gx-revenu gx-revenu-total\">\r\n            <h1>$2,650</h1>\r\n            <span className=\"gx-fs-md\">Total Revenu</span>\r\n          </div>\r\n\r\n          <div className=\"gx-revenu\">\r\n            <div className=\"gx-revenu-row\">\r\n              <div className=\"gx-revenu-col\">\r\n                <h3>23</h3>\r\n                <span className=\"gx-fs-sm\">Clients</span>\r\n              </div>\r\n\r\n              <div className=\"gx-revenu-col\">\r\n                <h3>07</h3>\r\n                <span className=\"gx-fs-sm\">Countries</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"gx-map-col\">\r\n          <BubbleMap/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Overview;\r\n","import React from \"react\";\r\nimport {Card} from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Metrics = ({title, styleName, children}) => {\r\n  return (\r\n    <Card title={title} className={`gx-card-metrics ${styleName}`}>\r\n      {children}\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default Metrics;\r\nMetrics.defaultProps = {\r\n  styleName: \"\"\r\n};\r\n\r\nMetrics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  styleName: PropTypes.string,\r\n  children: PropTypes.node.isRequired\r\n};\r\n","import React from \"react\";\r\nimport {Bar, BarChart, ResponsiveContainer, Tooltip} from \"recharts\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Metrics from \"components/Metrics\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst data = [\r\n  {name: 'JAN', lastYear: 200, thisYear: 600,},\r\n  {name: 'FEB', lastYear: 500, thisYear: 900,},\r\n  {name: 'MAR', lastYear: 700, thisYear: 1200,},\r\n  {name: 'JUN', lastYear: 500, thisYear: 900,},\r\n  {name: 'AUG', lastYear: 200, thisYear: 800,},\r\n  {name: 'SEP', lastYear: 400, thisYear: 400,},\r\n  {name: 'OCT', lastYear: 400, thisYear: 500,},\r\n  {name: 'NOV', lastYear: 400, thisYear: 1200,},\r\n  {name: 'DEC', lastYear: 200, thisYear: 800,},\r\n];\r\n\r\nconst TotalRevenueCard = ({width}) => {\r\n  return (\r\n    <Metrics title=\"TOTAL REVENUE\">\r\n      <Row>\r\n        <Col xl={11} lg={12} md={24} sm={12} xs={12}>\r\n          <h1 className=\"gx-mb-1 gx-revenue-title\">$2,167</h1>\r\n          <p className=\"gx-mb-md-0 gx-text-light\">YTD revenue</p>\r\n        </Col>\r\n        <Col xl={13} lg={12} md={24} sm={12} xs={12}>\r\n\r\n          <ResponsiveContainer className=\"gx-barchart\" width=\"100%\" height={70}>\r\n            <BarChart data={data}\r\n                      margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n              <Tooltip/>\r\n              <Bar dataKey=\"lastYear\" stackId=\"a\" fill=\"#1c1c1c\" barSize={width <= 575 ? 4 : 8}/>\r\n              <Bar dataKey=\"thisYear\" stackId=\"a\" fill=\"#FE9E15\" barSize={width <= 575 ? 4 : 8}/>\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </Col>\r\n      </Row>\r\n    </Metrics>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = ({settings}) => {\r\n  const {width} = settings;\r\n  return {width}\r\n};\r\nexport default connect(mapStateToProps)(TotalRevenueCard);\r\n","import React from \"react\";\r\n\r\nimport Metrics from \"components/Metrics\";\r\nimport {Avatar} from \"antd\";\r\n\r\nconst userImageList = [\r\n  {\r\n    id: 1,\r\n    image: 'https://via.placeholder.com/150x150',\r\n  },\r\n  {\r\n    id: 2,\r\n    image: 'https://via.placeholder.com/150x150',\r\n  },\r\n  {\r\n    id: 3,\r\n    image: 'https://via.placeholder.com/150x150',\r\n\r\n  },\r\n  {\r\n    id: 4,\r\n    image: 'https://via.placeholder.com/150x150',\r\n    name: 'Mila Alba',\r\n    rating: '5.0',\r\n    deals: '27 Deals'\r\n  },\r\n]\r\n\r\nconst NewCustomers = () => {\r\n  return (\r\n    <Metrics title=\"NEW CUSTOMERS\">\r\n      <div className=\"gx-customers\">\r\n        <ul className=\"gx-list-inline gx-customers-list gx-mb-0\">\r\n          {userImageList.map((user, index) =>\r\n            <li className=\"gx-mb-2\" key={index}>\r\n              <Avatar src={user.image}/>\r\n            </li>\r\n          )\r\n          }\r\n        </ul>\r\n      </div>\r\n    </Metrics>\r\n  );\r\n}\r\n\r\n\r\nexport default NewCustomers;\r\n","import React from \"react\";\r\nimport {Area, AreaChart, ResponsiveContainer, Tooltip} from \"recharts\";\r\nimport {Col, Row} from \"antd\";\r\n\r\nimport Metrics from \"components/Metrics\";\r\n\r\nconst GrowthCard = ({trafficData}) => {\r\n  return (\r\n    <Metrics styleName={`gx-card-full`} title=\"Growth\">\r\n      <Row>\r\n        <Col lg={9} md={24} sm={9} xs={9}>\r\n          <div className=\"gx-pb-4 gx-pl-4 gx-pt-4\">\r\n            <h2 className=\"gx-fs-xxxl gx-font-weight-medium gx-mb-1 gx-chart-up\">37%\r\n              <i className=\"icon icon-menu-up gx-fs-xxl\"/>\r\n            </h2>\r\n            <p className=\"gx-mb-0 gx-text-grey\">This year</p>\r\n          </div>\r\n        </Col>\r\n        <Col lg={15} md={24} sm={15} xs={15}>\r\n          <ResponsiveContainer width=\"100%\" height={103}>\r\n            <AreaChart data={trafficData}\r\n                       margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n              <Tooltip/>\r\n              <defs>\r\n                <linearGradient id=\"color1\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\r\n                  <stop offset=\"5%\" stopColor=\"#FF55AA\" stopOpacity={0.9}/>\r\n                  <stop offset=\"95%\" stopColor=\"#6757DE\" stopOpacity={0.9}/>\r\n                </linearGradient>\r\n              </defs>\r\n              <Area dataKey='value' strokeWidth={0} stackId=\"2\" stroke='#867AE5' fill=\"url(#color1)\" fillOpacity={1}/>\r\n            </AreaChart>\r\n          </ResponsiveContainer>\r\n        </Col>\r\n      </Row>\r\n    </Metrics>\r\n  );\r\n};\r\n\r\nexport default GrowthCard;\r\n","import React from \"react\";\r\nimport {Button, Form, Input, Select} from \"antd\";\r\nimport Widget from \"components/Widget/index\";\r\n\r\nconst Option = Select.Option;\r\nconst FormItem = Form.Item;\r\nconst CurrencyCalculator = () => {\r\n  function handleChange(value) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  return (\r\n    <Widget\r\n      title={<h2 className=\"h4 gx-mb-0 gx-text-capitalize\">Currency Calculator</h2>}>\r\n      <p className=\"gx-mb-2\">1.87 BTC equals</p>\r\n      <h1 className=\"gx-mb-2 gx-text-primary gx-font-weight-medium gx-fs-xxl\">11466.78 USD</h1>\r\n      <p className=\"gx-text-grey gx-fs-sm gx-mb-3 gx-mb-lg-4\">@ 1 BTC = 6718.72 USD</p>\r\n      <Form layout=\"inline\" className=\"gx-form-inline-label-up gx-form-inline-currency\">\r\n        <FormItem label=\"From\" className=\"gx-form-item-one-fourth\">\r\n          <Select defaultValue=\"BTC\" onChange={handleChange}>\r\n            <Option value=\"jack\">BTC</Option>\r\n            <Option value=\"lucy\">USD</Option>\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem label=\"To\" className=\"gx-form-item-one-fourth\">\r\n          <Select defaultValue=\"BTC\" onChange={handleChange}>\r\n            <Option value=\"jack\">BTC</Option>\r\n            <Option value=\"lucy\">USD</Option>\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem label=\"Amount (BTC)\" className=\"gx-form-item-two-fourth\">\r\n          <Input placeholder=\"0.0\"/>\r\n        </FormItem>\r\n        <FormItem className=\"gx-d-block gx-mb-1\">\r\n          <Button className=\"gx-mb-0\" type=\"primary\">Transfer Now</Button>\r\n        </FormItem>\r\n      </Form>\r\n    </Widget>\r\n  );\r\n};\r\n\r\nexport default CurrencyCalculator;\r\n","/*jshint esversion: 9 */\r\n\r\nimport React from \"react\";\r\nimport {Col, Row} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport {Area, AreaChart, ResponsiveContainer, Tooltip} from \"recharts\";\r\nimport {citiesData, propertiesData, queriesData, visitsData} from \"./data\";\r\n\r\nimport TaskList from \"components/dashboard/CRM/TaskList\";\r\nimport ChartCard from \"components/dashboard/Listing/ChartCard\";\r\nimport RecentActivity from \"components/dashboard/CRM/RecentActivity\";\r\nimport TicketList from \"components/dashboard/CRM/TicketList\";\r\nimport TaskByStatus from \"components/dashboard/CRM/TaskByStatus\";\r\nimport Overview from \"components/dashboard/CRM/Overview\";\r\nimport Auxiliary from \"util/Auxiliary\";\r\nimport TotalRevenueCard from \"components/dashboard/CRM/TotalRevenueCard\";\r\nimport NewCustomers from \"components/dashboard/CRM/NewCustomers\";\r\nimport GrowthCard from \"components/dashboard/CRM/GrowthCard\";\r\nimport Widget from \"components/Widget/index\";\r\nimport CurrencyCalculator from \"components/dashboard/Crypto/CurrencyCalculator\";\r\nimport IconWithTextCard from \"components/Metrics/IconWithTextCard\";\r\nimport {recentActivity, taskList, trafficData} from \"./data\";\r\n\r\nconst CRM = ({authUser}) => {\r\n  return (\r\n    <Auxiliary>\r\n      <Row>\r\n        <Col xl={6} lg={12} md={12} sm={12} xs={24}>\r\n          <ChartCard chartProperties={{\r\n            title: 'Clients',\r\n            prize: '26,873',\r\n            icon: 'stats',\r\n            bgColor: 'secondary',\r\n            styleName: 'up',\r\n            desc: 'All time',\r\n            percent: '03%',\r\n            color: 'white'\r\n          }}\r\n                     children={<ResponsiveContainer width=\"100%\" height={75}>\r\n                       <AreaChart data={propertiesData}\r\n                                  margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                         <Tooltip/>\r\n                         <Area dataKey='properties' strokeWidth={0} stackId=\"2\" stroke='#003366' fill=\"#003366\"\r\n                               fillOpacity={1}/>\r\n                       </AreaChart>\r\n                     </ResponsiveContainer>}\r\n          />\r\n\r\n        </Col>\r\n        <Col xl={6} lg={12} md={12} sm={12} xs={24}>\r\n          <ChartCard\r\n            chartProperties={{\r\n              title: 'CITIES',\r\n              prize: '3,840',\r\n              icon: 'stats',\r\n              bgColor: 'orange',\r\n              styleName: 'up',\r\n              desc: '7 New cities this week',\r\n              percent: '',\r\n            }}\r\n            children={<ResponsiveContainer width=\"100%\" height={75}>\r\n              <AreaChart data={citiesData}\r\n                         margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                <Tooltip/>\r\n                <Area dataKey='cities' type='monotone' strokeWidth={0} stackId=\"2\" stroke='#C87000'\r\n                      fill=\"#C87000\"\r\n                      fillOpacity={1}/>\r\n              </AreaChart>\r\n            </ResponsiveContainer>}\r\n          />\r\n        </Col>\r\n        <Col xl={6} lg={12} md={12} sm={12} xs={24}>\r\n          <ChartCard\r\n            chartProperties={{\r\n              title: 'ONLINE VISITS',\r\n              prize: '84,729',\r\n              icon: 'stats',\r\n              bgColor: 'teal',\r\n              styleName: 'down',\r\n              desc: 'Avg. 327 visits daily',\r\n              percent: '',\r\n            }}\r\n            children={<ResponsiveContainer width=\"100%\" height={75}>\r\n              <AreaChart data={visitsData}\r\n                         margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                <Tooltip/>\r\n                <Area dataKey='visit' strokeWidth={0} stackId=\"2\" stroke='#158765' fill=\"#158765\"\r\n                      fillOpacity={1}/>\r\n              </AreaChart>\r\n            </ResponsiveContainer>}\r\n          />\r\n        </Col>\r\n        <Col xl={6} lg={12} md={12} sm={12} xs={24}>\r\n          <ChartCard\r\n            chartProperties={{\r\n              title: 'ONLINE QUERIES',\r\n              prize: '87,239',\r\n              icon: 'stats',\r\n              bgColor: 'pink',\r\n              styleName: 'down',\r\n              desc: 'from past month',\r\n              percent: '39',\r\n            }}\r\n            children={<ResponsiveContainer width=\"100%\" height={75}>\r\n              <AreaChart data={queriesData}\r\n                         margin={{top: 0, right: 0, left: 0, bottom: 0}}>\r\n                <Tooltip/>\r\n                <Area dataKey='queries' strokeWidth={0} stackId=\"2\" stroke='#BB1258' fill=\"#BB1258\"\r\n                      fillOpacity={1}/>\r\n              </AreaChart>\r\n            </ResponsiveContainer>}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row>\r\n            <Col xl={6} lg={6} md={6} sm={12} xs={12}>\r\n              <IconWithTextCard icon=\"orders\" title=\"09\" subTitle=\"Orders\"/>\r\n            </Col>\r\n            <Col xl={6} lg={6} md={6} sm={12} xs={12}>\r\n              <IconWithTextCard icon=\"tasks\" title=\"687\" subTitle=\"bids\"/>\r\n            </Col>\r\n            <Col xl={6} lg={6} md={6} sm={12} xs={12}>\r\n              <IconWithTextCard icon=\"shopping-cart\" title=\"04\" subTitle=\"Items procured\"/>\r\n            </Col>\r\n            <Col xl={6} lg={6} md={6} sm={12} xs={12}>\r\n              <IconWithTextCard cardColor=\"white\" icon=\"attachment\" title=\"09\" subTitle=\"Files uploaded\"/>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xl={8} lg={24} md={8} sm={24} xs={24}>\r\n          <TotalRevenueCard/>\r\n        </Col>\r\n        <Col xl={8} lg={12} md={8} sm={24} xs={24}>\r\n          <NewCustomers/>\r\n        </Col>\r\n        <Col xl={8} lg={12} md={8} sm={24} xs={24}>\r\n          <GrowthCard trafficData={trafficData}/>\r\n        </Col>\r\n        <Col xl={8} lg={24} md={24} sm={24} xs={24} className=\"gx-order-sm-2\">\r\n          <Widget>\r\n            <RecentActivity recentList={recentActivity} shape=\"circle\"/>\r\n          </Widget>\r\n          <CurrencyCalculator/>\r\n        </Col>\r\n        <Col xl={16} lg={24} md={24} sm={24} xs={24} className=\"gx-order-sm-1\">\r\n          <Row>\r\n            <Col xl={6} lg={6} md={6} sm={12} xs={12}>\r\n              <IconWithTextCard cardColor=\"cyan\" icon=\"diamond\" title=\"09\" subTitle=\"Projects\"/>\r\n            </Col>\r\n            <Col xl={6} lg={6} md={6} sm={12} xs={12}>\r\n              <IconWithTextCard cardColor=\"orange\" icon=\"tasks\" title=\"687\" subTitle=\"Tasks\"/>\r\n            </Col>\r\n            <Col xl={6} lg={6} md={6} sm={12} xs={12}>\r\n              <IconWithTextCard cardColor=\"teal\" icon=\"team\" title=\"04\" subTitle=\"Teams\"/>\r\n            </Col>\r\n            <Col xl={6} lg={6} md={6} sm={12} xs={12}>\r\n              <IconWithTextCard cardColor=\"red\" icon=\"files\" title=\"09\" subTitle=\"Files\"/>\r\n            </Col>\r\n            <Col xl={24} lg={24} md={24} sm={24} xs={24}>\r\n              <TaskList taskList={taskList}/>\r\n            </Col>\r\n            <Col xl={16} lg={16} md={16} sm={24} xs={24}>\r\n              <TicketList/>\r\n            </Col>\r\n            <Col xl={8} lg={8} md={8} sm={24} xs={24}>\r\n              <TaskByStatus/>\r\n            </Col>\r\n            <Col xl={24} lg={24} md={24} sm={24} xs={24}>\r\n              <Overview/>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Auxiliary>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({auth, commonData}) => {\r\n  const {authUser} = auth;\r\n  const {loading} = commonData;\r\n  return {authUser, loading};\r\n};\r\n  \r\nexport default connect(mapStateToProps, {})(CRM);\r\n"],"sourceRoot":""}